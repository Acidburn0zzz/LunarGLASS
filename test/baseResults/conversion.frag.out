
Top IR:
; ModuleID = 'Glslang'

@u_i = external addrspace(2) constant i32
@u_f = external addrspace(2) constant float
@i_i = global i32 0
@i_f = global float 0.000000e+00
@u_f2 = external addrspace(2) constant <2 x float>
@u_f3 = external addrspace(2) constant <3 x float>
@u_f4 = external addrspace(2) constant <4 x float>
@i_i4 = global <4 x i32> zeroinitializer
@gl_FragColor = global <4 x float> zeroinitializer
@u_b = external addrspace(2) constant i1
@u_b2 = external addrspace(2) constant <2 x i1>
@u_b3 = external addrspace(2) constant <3 x i1>
@u_b4 = external addrspace(2) constant <4 x i1>
@u_i2 = external addrspace(2) constant <2 x i32>
@u_i3 = external addrspace(2) constant <3 x i32>
@u_i4 = external addrspace(2) constant <4 x i32>
@i_b = external addrspace(2) constant i1
@i_b2 = external addrspace(2) constant <2 x i1>
@i_b3 = external addrspace(2) constant <3 x i1>
@i_b4 = external addrspace(2) constant <4 x i1>
@i_i2 = global <2 x i32> zeroinitializer
@i_i3 = global <3 x i32> zeroinitializer
@i_f2 = global <2 x float> zeroinitializer
@i_f3 = global <3 x float> zeroinitializer
@i_f4 = global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %gl_FragColor61 = alloca float
  %cv5 = alloca <4 x i1>
  %cv2 = alloca <4 x i32>
  %gl_FragColor55 = alloca <4 x float>
  %gl_FragColor = alloca <4 x float>
  %f46 = alloca float
  %f42 = alloca float
  %i439 = alloca <4 x i32>
  %i337 = alloca <3 x i32>
  %i235 = alloca <2 x i32>
  %f433 = alloca <4 x float>
  %f331 = alloca <3 x float>
  %f229 = alloca <2 x float>
  %f427 = alloca <4 x float>
  %f325 = alloca <3 x float>
  %f223 = alloca <2 x float>
  %f4 = alloca <4 x float>
  %f3 = alloca <3 x float>
  %f2 = alloca <2 x float>
  %f = alloca float
  %i4 = alloca <4 x i32>
  %i3 = alloca <3 x i32>
  %i2 = alloca <2 x i32>
  %i = alloca i32
  %b46 = alloca <4 x i1>
  %b4 = alloca <4 x i1>
  %b34 = alloca <3 x i1>
  %b3 = alloca <3 x i1>
  %b22 = alloca <2 x i1>
  %b2 = alloca <2 x i1>
  %b = alloca i1
  br label %mainBody

mainBody:                                         ; preds = %entry
  %0 = load i32 addrspace(2)* @u_i, !gla.uniform !1
  %1 = icmp ne i32 %0, 0
  %2 = load float addrspace(2)* @u_f, !gla.uniform !3
  %3 = fcmp one float %2, 0.000000e+00
  %b1 = xor i1 %1, %3
  store i1 %b1, i1* %b
  %4 = load i32 addrspace(2)* @u_i, !gla.uniform !1
  %5 = icmp ne i32 %4, 0
  %6 = load float addrspace(2)* @u_f, !gla.uniform !3
  %7 = fcmp one float %6, 0.000000e+00
  %8 = load <2 x i1>* %b22
  %9 = insertelement <2 x i1> %8, i1 %5, i32 0
  %b23 = insertelement <2 x i1> %9, i1 %7, i32 1
  store <2 x i1> %b23, <2 x i1>* %b2
  %10 = load i32 addrspace(2)* @u_i, !gla.uniform !1
  %11 = icmp ne i32 %10, 0
  %12 = load float addrspace(2)* @u_f, !gla.uniform !3
  %13 = fcmp one float %12, 0.000000e+00
  %14 = load i32* @i_i
  %15 = icmp ne i32 %14, 0
  %16 = load <3 x i1>* %b34
  %17 = insertelement <3 x i1> %16, i1 %11, i32 0
  %18 = insertelement <3 x i1> %17, i1 %13, i32 1
  %b35 = insertelement <3 x i1> %18, i1 %15, i32 2
  store <3 x i1> %b35, <3 x i1>* %b3
  %19 = load i32 addrspace(2)* @u_i, !gla.uniform !1
  %20 = icmp ne i32 %19, 0
  %21 = load float addrspace(2)* @u_f, !gla.uniform !3
  %22 = fcmp one float %21, 0.000000e+00
  %23 = load i32* @i_i
  %24 = icmp ne i32 %23, 0
  %25 = load float* @i_f
  %26 = fcmp one float %25, 0.000000e+00
  %27 = load <4 x i1>* %b46
  %28 = insertelement <4 x i1> %27, i1 %20, i32 0
  %29 = insertelement <4 x i1> %28, i1 %22, i32 1
  %30 = insertelement <4 x i1> %29, i1 %24, i32 2
  %b47 = insertelement <4 x i1> %30, i1 %26, i32 3
  store <4 x i1> %b47, <4 x i1>* %b4
  %31 = load float addrspace(2)* @u_f, !gla.uniform !3
  %32 = fptosi float %31 to i32
  %33 = load i1* %b
  %34 = zext i1 %33 to i32
  %i8 = add i32 %32, %34
  store i32 %i8, i32* %i
  %35 = load <2 x float> addrspace(2)* @u_f2, !gla.uniform !4
  %36 = fptosi <2 x float> %35 to <2 x i32>
  %37 = load <2 x i1>* %b2
  %38 = zext <2 x i1> %37 to <2 x i32>
  %i29 = add <2 x i32> %36, %38
  store <2 x i32> %i29, <2 x i32>* %i2
  %39 = load <3 x float> addrspace(2)* @u_f3, !gla.uniform !5
  %40 = fptosi <3 x float> %39 to <3 x i32>
  %41 = load <3 x i1>* %b3
  %42 = zext <3 x i1> %41 to <3 x i32>
  %i310 = add <3 x i32> %40, %42
  store <3 x i32> %i310, <3 x i32>* %i3
  %43 = load <4 x float> addrspace(2)* @u_f4, !gla.uniform !6
  %44 = fptosi <4 x float> %43 to <4 x i32>
  %45 = load <4 x i1>* %b4
  %46 = zext <4 x i1> %45 to <4 x i32>
  %i411 = add <4 x i32> %44, %46
  store <4 x i32> %i411, <4 x i32>* %i4
  %47 = load i32* %i
  %f12 = sitofp i32 %47 to float
  store float %f12, float* %f
  %48 = load <2 x i32>* %i2
  %f213 = sitofp <2 x i32> %48 to <2 x float>
  store <2 x float> %f213, <2 x float>* %f2
  %49 = load <3 x i32>* %i3
  %f314 = sitofp <3 x i32> %49 to <3 x float>
  store <3 x float> %f314, <3 x float>* %f3
  %50 = load <4 x i32>* %i4
  %f415 = sitofp <4 x i32> %50 to <4 x float>
  store <4 x float> %f415, <4 x float>* %f4
  %51 = load i32* %i
  %52 = sitofp i32 %51 to float
  %53 = load i1* %b
  %54 = uitofp i1 %53 to float
  %55 = fadd float %52, %54
  %56 = load float* %f
  %f16 = fadd float %56, %55
  store float %f16, float* %f
  %57 = load <2 x i32>* %i2
  %58 = sitofp <2 x i32> %57 to <2 x float>
  %59 = load <2 x i1>* %b2
  %60 = uitofp <2 x i1> %59 to <2 x float>
  %61 = fadd <2 x float> %58, %60
  %62 = load <2 x float>* %f2
  %f217 = fsub <2 x float> %62, %61
  store <2 x float> %f217, <2 x float>* %f2
  %63 = load <3 x i32>* %i3
  %64 = sitofp <3 x i32> %63 to <3 x float>
  %65 = load <3 x i1>* %b3
  %66 = uitofp <3 x i1> %65 to <3 x float>
  %67 = fadd <3 x float> %64, %66
  %68 = load <3 x float>* %f3
  %f318 = fdiv <3 x float> %68, %67
  store <3 x float> %f318, <3 x float>* %f3
  %69 = load <4 x i32>* %i4
  %70 = sitofp <4 x i32> %69 to <4 x float>
  %71 = load <4 x i1>* %b4
  %72 = uitofp <4 x i1> %71 to <4 x float>
  %73 = fadd <4 x float> %70, %72
  %74 = load <4 x float>* %f4
  %f419 = fadd <4 x float> %74, %73
  store <4 x float> %f419, <4 x float>* %f4
  %75 = load <4 x i32>* @i_i4
  %76 = icmp ne <4 x i32> %75, zeroinitializer
  %77 = uitofp <4 x i1> %76 to <4 x float>
  %78 = load <4 x float>* %f4
  %f420 = fadd <4 x float> %78, %77
  store <4 x float> %f420, <4 x float>* %f4
  %79 = load <4 x float> addrspace(2)* @u_f4, !gla.uniform !6
  %80 = fcmp one <4 x float> %79, zeroinitializer
  %81 = uitofp <4 x i1> %80 to <4 x float>
  %82 = load <4 x float>* %f4
  %f421 = fadd <4 x float> %82, %81
  store <4 x float> %f421, <4 x float>* %f4
  %83 = load float* %f
  %84 = load i32* %i
  %85 = sitofp i32 %84 to float
  %86 = fsub float %83, %85
  %87 = load float* %f
  %f22 = fadd float %87, %86
  store float %f22, float* %f
  %88 = load float* %f
  %89 = load i32* %i
  %90 = sitofp i32 %89 to float
  %91 = load <2 x float>* %f223
  %92 = insertelement <2 x float> %91, float %88, i32 0
  %93 = insertelement <2 x float> %92, float %90, i32 1
  %94 = load <2 x i32>* %i2
  %95 = sitofp <2 x i32> %94 to <2 x float>
  %96 = fadd <2 x float> %93, %95
  %97 = load <2 x float>* %f2
  %f224 = fadd <2 x float> %97, %96
  store <2 x float> %f224, <2 x float>* %f2
  %98 = load <3 x i32>* %i3
  %99 = sitofp <3 x i32> %98 to <3 x float>
  %100 = load float* %f
  %101 = load i32* %i
  %102 = sitofp i32 %101 to float
  %103 = load float* %f
  %104 = load <3 x float>* %f325
  %105 = insertelement <3 x float> %104, float %100, i32 0
  %106 = insertelement <3 x float> %105, float %102, i32 1
  %107 = insertelement <3 x float> %106, float %103, i32 2
  %108 = fadd <3 x float> %99, %107
  %109 = load <3 x float>* %f3
  %f326 = fadd <3 x float> %109, %108
  store <3 x float> %f326, <3 x float>* %f3
  %110 = load i1* %b
  %111 = uitofp i1 %110 to float
  %112 = load i32* %i
  %113 = sitofp i32 %112 to float
  %114 = load float* %f
  %115 = load i32* %i
  %116 = sitofp i32 %115 to float
  %117 = load <4 x float>* %f427
  %118 = insertelement <4 x float> %117, float %111, i32 0
  %119 = insertelement <4 x float> %118, float %113, i32 1
  %120 = insertelement <4 x float> %119, float %114, i32 2
  %121 = insertelement <4 x float> %120, float %116, i32 3
  %122 = load <4 x i32>* %i4
  %123 = sitofp <4 x i32> %122 to <4 x float>
  %124 = fadd <4 x float> %121, %123
  %125 = load <4 x float>* %f4
  %f428 = fadd <4 x float> %125, %124
  store <4 x float> %f428, <4 x float>* %f4
  %126 = load float* %f
  %127 = load i32* %i
  %128 = sitofp i32 %127 to float
  %129 = load <2 x float>* %f229
  %130 = insertelement <2 x float> %129, float %126, i32 0
  %131 = insertelement <2 x float> %130, float %128, i32 1
  %132 = load i32* %i
  %133 = sitofp i32 %132 to float
  %134 = insertelement <2 x float> undef, float %133, i32 0
  %135 = insertelement <2 x float> %134, float %133, i32 1
  %136 = fmul <2 x float> %131, %135
  %137 = load <2 x float>* %f2
  %f230 = fadd <2 x float> %137, %136
  store <2 x float> %f230, <2 x float>* %f2
  %138 = load float* %f
  %139 = load i32* %i
  %140 = sitofp i32 %139 to float
  %141 = load float* %f
  %142 = load <3 x float>* %f331
  %143 = insertelement <3 x float> %142, float %138, i32 0
  %144 = insertelement <3 x float> %143, float %140, i32 1
  %145 = insertelement <3 x float> %144, float %141, i32 2
  %146 = load i32* %i
  %147 = sitofp i32 %146 to float
  %148 = insertelement <3 x float> undef, float %147, i32 0
  %149 = insertelement <3 x float> %148, float %147, i32 1
  %150 = insertelement <3 x float> %149, float %147, i32 2
  %151 = fadd <3 x float> %145, %150
  %152 = load <3 x float>* %f3
  %f332 = fadd <3 x float> %152, %151
  store <3 x float> %f332, <3 x float>* %f3
  %153 = load i32* %i
  %154 = sitofp i32 %153 to float
  %155 = load i1* %b
  %156 = uitofp i1 %155 to float
  %157 = load i32* %i
  %158 = sitofp i32 %157 to float
  %159 = load float* %f
  %160 = load i32* %i
  %161 = sitofp i32 %160 to float
  %162 = load <4 x float>* %f433
  %163 = insertelement <4 x float> %162, float %156, i32 0
  %164 = insertelement <4 x float> %163, float %158, i32 1
  %165 = insertelement <4 x float> %164, float %159, i32 2
  %166 = insertelement <4 x float> %165, float %161, i32 3
  %167 = insertelement <4 x float> undef, float %154, i32 0
  %168 = insertelement <4 x float> %167, float %154, i32 1
  %169 = insertelement <4 x float> %168, float %154, i32 2
  %170 = insertelement <4 x float> %169, float %154, i32 3
  %171 = fsub <4 x float> %170, %166
  %172 = load <4 x float>* %f4
  %f434 = fadd <4 x float> %172, %171
  store <4 x float> %f434, <4 x float>* %f4
  %173 = load float* %f
  %174 = fptosi float %173 to i32
  %175 = load i32* %i
  %176 = load <2 x i32>* %i235
  %177 = insertelement <2 x i32> %176, i32 %174, i32 0
  %178 = insertelement <2 x i32> %177, i32 %175, i32 1
  %179 = load <2 x i32>* %i2
  %i236 = add <2 x i32> %179, %178
  store <2 x i32> %i236, <2 x i32>* %i2
  %180 = load float* %f
  %181 = fptosi float %180 to i32
  %182 = load i32* %i
  %183 = load float* %f
  %184 = fptosi float %183 to i32
  %185 = load <3 x i32>* %i337
  %186 = insertelement <3 x i32> %185, i32 %181, i32 0
  %187 = insertelement <3 x i32> %186, i32 %182, i32 1
  %188 = insertelement <3 x i32> %187, i32 %184, i32 2
  %189 = load <3 x i32>* %i3
  %i338 = add <3 x i32> %189, %188
  store <3 x i32> %i338, <3 x i32>* %i3
  %190 = load i1* %b
  %191 = zext i1 %190 to i32
  %192 = load i32* %i
  %193 = load float* %f
  %194 = fptosi float %193 to i32
  %195 = load i32* %i
  %196 = load <4 x i32>* %i439
  %197 = insertelement <4 x i32> %196, i32 %191, i32 0
  %198 = insertelement <4 x i32> %197, i32 %192, i32 1
  %199 = insertelement <4 x i32> %198, i32 %194, i32 2
  %200 = insertelement <4 x i32> %199, i32 %195, i32 3
  %201 = load <4 x i32>* %i4
  %i440 = add <4 x i32> %201, %200
  store <4 x i32> %i440, <4 x i32>* %i4
  %202 = load float* %f
  %203 = load i32* %i
  %204 = sitofp i32 %203 to float
  %205 = fcmp olt float %202, %204
  %206 = load i32* %i
  %207 = sitofp i32 %206 to float
  %208 = load float* %f
  %209 = fcmp olt float %207, %208
  %210 = or i1 %205, %209
  %211 = load <2 x float>* %f2
  %212 = load <2 x i32>* %i2
  %213 = sitofp <2 x i32> %212 to <2 x float>
  %214 = fcmp oeq <2 x float> %211, %213
  %cc = call i1 @llvm.gla.all.v2i1(<2 x i1> %214)
  %215 = or i1 %210, %cc
  %216 = load <3 x i32>* %i3
  %217 = sitofp <3 x i32> %216 to <3 x float>
  %218 = load <3 x float>* %f3
  %219 = fcmp one <3 x float> %217, %218
  %cc41 = call i1 @llvm.gla.any.v3i1(<3 x i1> %219)
  %220 = or i1 %215, %cc41
  br i1 %220, label %then, label %ifmerge53

then:                                             ; preds = %mainBody
  %221 = load i1* %b
  br i1 %221, label %then43, label %else

then43:                                           ; preds = %then
  %222 = load i32* %i
  %f4244 = sitofp i32 %222 to float
  store float %f4244, float* %f42
  br label %ifmerge

else:                                             ; preds = %then
  %223 = load <2 x float>* %f2
  %f4245 = extractelement <2 x float> %223, i32 0
  store float %f4245, float* %f42
  br label %ifmerge

ifmerge:                                          ; preds = %else, %then43
  %224 = load float* %f42
  %225 = load <2 x i1>* %b2
  %226 = extractelement <2 x i1> %225, i32 0
  br i1 %226, label %then47, label %else49

then47:                                           ; preds = %ifmerge
  %227 = load <3 x float>* %f3
  %f4648 = extractelement <3 x float> %227, i32 0
  store float %f4648, float* %f46
  br label %ifmerge51

else49:                                           ; preds = %ifmerge
  %228 = load <2 x i32>* %i2
  %229 = extractelement <2 x i32> %228, i32 1
  %f4650 = sitofp i32 %229 to float
  store float %f4650, float* %f46
  br label %ifmerge51

ifmerge51:                                        ; preds = %else49, %then47
  %230 = load float* %f46
  %f52 = fadd float %224, %230
  store float %f52, float* %f
  br label %ifmerge53

ifmerge53:                                        ; preds = %mainBody, %ifmerge51
  %231 = load i1* %b
  %232 = load <2 x i1>* %b2
  %233 = extractelement <2 x i1> %232, i32 0
  %234 = or i1 %231, %233
  %235 = load <2 x i1>* %b2
  %236 = extractelement <2 x i1> %235, i32 1
  %237 = or i1 %234, %236
  %238 = load <3 x i1>* %b3
  %239 = extractelement <3 x i1> %238, i32 0
  %240 = or i1 %237, %239
  %241 = load <3 x i1>* %b3
  %242 = extractelement <3 x i1> %241, i32 1
  %243 = or i1 %240, %242
  %244 = load <3 x i1>* %b3
  %245 = extractelement <3 x i1> %244, i32 2
  %246 = or i1 %243, %245
  %247 = load <4 x i1>* %b4
  %248 = extractelement <4 x i1> %247, i32 0
  %249 = or i1 %246, %248
  %250 = load <4 x i1>* %b4
  %251 = extractelement <4 x i1> %250, i32 1
  %252 = or i1 %249, %251
  %253 = load <4 x i1>* %b4
  %254 = extractelement <4 x i1> %253, i32 2
  %255 = or i1 %252, %254
  %256 = load <4 x i1>* %b4
  %257 = extractelement <4 x i1> %256, i32 3
  %258 = or i1 %255, %257
  br i1 %258, label %then54, label %else57

then54:                                           ; preds = %ifmerge53
  %259 = load i32* %i
  %260 = load <2 x i32>* %i2
  %261 = extractelement <2 x i32> %260, i32 0
  %262 = add i32 %259, %261
  %263 = load <2 x i32>* %i2
  %264 = extractelement <2 x i32> %263, i32 1
  %265 = add i32 %262, %264
  %266 = load <3 x i32>* %i3
  %267 = extractelement <3 x i32> %266, i32 0
  %268 = add i32 %265, %267
  %269 = load <3 x i32>* %i3
  %270 = extractelement <3 x i32> %269, i32 1
  %271 = add i32 %268, %270
  %272 = load <3 x i32>* %i3
  %273 = extractelement <3 x i32> %272, i32 2
  %274 = add i32 %271, %273
  %275 = load <4 x i32>* %i4
  %276 = extractelement <4 x i32> %275, i32 0
  %277 = add i32 %274, %276
  %278 = load <4 x i32>* %i4
  %279 = extractelement <4 x i32> %278, i32 1
  %280 = add i32 %277, %279
  %281 = load <4 x i32>* %i4
  %282 = extractelement <4 x i32> %281, i32 2
  %283 = add i32 %280, %282
  %284 = load <4 x i32>* %i4
  %285 = extractelement <4 x i32> %284, i32 3
  %286 = add i32 %283, %285
  %287 = sitofp i32 %286 to float
  %288 = load float* %f
  %289 = fadd float %287, %288
  %290 = load <2 x float>* %f2
  %291 = extractelement <2 x float> %290, i32 0
  %292 = fadd float %289, %291
  %293 = load <2 x float>* %f2
  %294 = extractelement <2 x float> %293, i32 1
  %295 = fadd float %292, %294
  %296 = load <3 x float>* %f3
  %297 = extractelement <3 x float> %296, i32 0
  %298 = fadd float %295, %297
  %299 = load <3 x float>* %f3
  %300 = extractelement <3 x float> %299, i32 1
  %301 = fadd float %298, %300
  %302 = load <3 x float>* %f3
  %303 = extractelement <3 x float> %302, i32 2
  %304 = fadd float %301, %303
  %305 = load <4 x float>* %f4
  %306 = extractelement <4 x float> %305, i32 0
  %307 = fadd float %304, %306
  %308 = load <4 x float>* %f4
  %309 = extractelement <4 x float> %308, i32 1
  %310 = fadd float %307, %309
  %311 = load <4 x float>* %f4
  %312 = extractelement <4 x float> %311, i32 2
  %313 = fadd float %310, %312
  %314 = load <4 x float>* %f4
  %315 = extractelement <4 x float> %314, i32 3
  %316 = fadd float %313, %315
  %317 = load <4 x float>* %gl_FragColor55
  %318 = insertelement <4 x float> undef, float %316, i32 0
  %319 = insertelement <4 x float> %318, float %316, i32 1
  %320 = insertelement <4 x float> %319, float %316, i32 2
  %gl_FragColor56 = insertelement <4 x float> %320, float %316, i32 3
  store <4 x float> %gl_FragColor56, <4 x float>* %gl_FragColor
  br label %ifmerge58

else57:                                           ; preds = %ifmerge53
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %gl_FragColor
  br label %ifmerge58

ifmerge58:                                        ; preds = %else57, %then54
  %gl_FragColor59 = load <4 x float>* %gl_FragColor
  store <4 x float> %gl_FragColor59, <4 x float>* @gl_FragColor
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %cv2
  %321 = load <4 x i32>* %cv2
  %cv560 = icmp ne <4 x i32> %321, zeroinitializer
  store <4 x i1> %cv560, <4 x i1>* %cv5
  %322 = load <4 x i1>* %cv5
  %323 = uitofp <4 x i1> %322 to <4 x float>
  %324 = load float* %gl_FragColor61
  %325 = extractelement <4 x float> %323, i32 0
  %326 = load <4 x float>* @gl_FragColor
  %327 = insertelement <4 x float> undef, float %325, i32 0
  %328 = insertelement <4 x float> %327, float %325, i32 1
  %329 = insertelement <4 x float> %328, float %325, i32 2
  %330 = insertelement <4 x float> %329, float %325, i32 3
  %gl_FragColor62 = fadd <4 x float> %326, %330
  store <4 x float> %gl_FragColor62, <4 x float>* @gl_FragColor
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %ifmerge58
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare i1 @llvm.gla.all.v2i1(<2 x i1>) #0

; Function Attrs: nounwind readnone
declare i1 @llvm.gla.any.v3i1(<3 x i1>) #0

attributes #0 = { nounwind readnone }

!gla.entrypoint = !{!0}
!gla.uniforms = !{!1, !3, !4, !5, !6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17}
!gla.inputs = !{!18, !20, !22, !24, !26, !28, !30, !32}
!gla.outputs = !{!34}
!gla.noStaticUse = !{!7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !24, !26, !28, !30, !32}

!0 = !{!"main", i32 15}
!1 = !{!"u_i", i32 12, i32* @u_i_typeProxy, !2}
!2 = !{i32 0, i32 0, i32 1024, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!3 = !{!"u_f", i32 12, float* @u_f_typeProxy, !2}
!4 = !{!"u_f2", i32 12, <2 x float>* @u_f2_typeProxy, !2}
!5 = !{!"u_f3", i32 12, <3 x float>* @u_f3_typeProxy, !2}
!6 = !{!"u_f4", i32 12, <4 x float>* @u_f4_typeProxy, !2}
!7 = !{!"u_b", i32 12, i1* @u_b_typeProxy, !2}
!8 = !{!"u_b2", i32 12, <2 x i1>* @u_b2_typeProxy, !2}
!9 = !{!"u_b3", i32 12, <3 x i1>* @u_b3_typeProxy, !2}
!10 = !{!"u_b4", i32 12, <4 x i1>* @u_b4_typeProxy, !2}
!11 = !{!"u_i2", i32 12, <2 x i32>* @u_i2_typeProxy, !2}
!12 = !{!"u_i3", i32 12, <3 x i32>* @u_i3_typeProxy, !2}
!13 = !{!"u_i4", i32 12, <4 x i32>* @u_i4_typeProxy, !2}
!14 = !{!"i_b", i32 12, i1* @i_b_typeProxy, !2}
!15 = !{!"i_b2", i32 12, <2 x i1>* @i_b2_typeProxy, !2}
!16 = !{!"i_b3", i32 12, <3 x i1>* @i_b3_typeProxy, !2}
!17 = !{!"i_b4", i32 12, <4 x i1>* @i_b4_typeProxy, !2}
!18 = !{!"i_i", i32 1, i32* @i_i_typeProxy, !19}
!19 = !{i32 0, i32 0, i32 1024, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!20 = !{!"i_f", i32 1, float* @i_f_typeProxy, !21}
!21 = !{i32 0, i32 0, i32 1025, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!22 = !{!"i_i4", i32 1, <4 x i32>* @i_i4_typeProxy, !23}
!23 = !{i32 0, i32 0, i32 1026, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!24 = !{!"i_i2", i32 1, <2 x i32>* @i_i2_typeProxy, !25}
!25 = !{i32 0, i32 0, i32 1028, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!26 = !{!"i_i3", i32 1, <3 x i32>* @i_i3_typeProxy, !27}
!27 = !{i32 0, i32 0, i32 1029, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!28 = !{!"i_f2", i32 1, <2 x float>* @i_f2_typeProxy, !29}
!29 = !{i32 0, i32 0, i32 1030, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!30 = !{!"i_f3", i32 1, <3 x float>* @i_f3_typeProxy, !31}
!31 = !{i32 0, i32 0, i32 1031, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!32 = !{!"i_f4", i32 1, <4 x float>* @i_f4_typeProxy, !33}
!33 = !{i32 0, i32 0, i32 1032, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!34 = !{!"gl_FragColor", i32 7, <4 x float>* @gl_FragColor_typeProxy, !35}
!35 = !{i32 0, i32 0, i32 1027, null, i32 0, i32 43, i32 -1, i32 0, i32 -1}
