
Top IR:
; ModuleID = 'Glslang'

@iout = global <4 x i32> zeroinitializer
@uout = global <4 x i32> zeroinitializer
@fout = global <4 x float> zeroinitializer
@u2 = global <2 x i32> zeroinitializer
@u1 = global i32 0
@u4 = global <4 x i32> zeroinitializer
@i4 = global <4 x i32> zeroinitializer
@i1 = global i32 0
@u3 = global <3 x i32> zeroinitializer
@i3 = global <3 x i32> zeroinitializer
@i2 = global <2 x i32> zeroinitializer
@v3 = global <3 x float> zeroinitializer
@v1 = global float 0.000000e+00
@v2 = global <2 x float> zeroinitializer
@v4 = global <4 x float> zeroinitializer
@gl_VertexID = global i32 0
@gl_InstanceID = global i32 0

define fastcc void @main() {
entry:
  %i1out = alloca i32
  %i3out = alloca <3 x i32>
  %i4out2 = alloca <4 x i32>
  %i4out1 = alloca <4 x i32>
  %u4out = alloca <4 x i32>
  %u1out = alloca i32
  %u2out = alloca <2 x i32>
  br label %mainBody

mainBody:                                         ; preds = %entry
  store <4 x i32> zeroinitializer, <4 x i32>* @iout
  store <4 x i32> zeroinitializer, <4 x i32>* @uout
  store <4 x float> zeroinitializer, <4 x float>* @fout
  %0 = load <2 x i32>* @u2
  %1 = load <2 x i32>* @u2
  %uout = call { <2 x i32>, <2 x i32> } @llvm.gla.addCarry.v2i32.v2i32.v2i32.v2i32(<2 x i32> %0, <2 x i32> %1), !gla.precision !35
  %u2out1 = extractvalue { <2 x i32>, <2 x i32> } %uout, 1
  store <2 x i32> %u2out1, <2 x i32>* %u2out
  %2 = extractvalue { <2 x i32>, <2 x i32> } %uout, 0
  %3 = load <4 x i32>* @uout
  %4 = extractelement <4 x i32> %3, i32 0, !gla.precision !35
  %5 = insertelement <2 x i32> undef, i32 %4, i32 0, !gla.precision !35
  %6 = extractelement <4 x i32> %3, i32 1, !gla.precision !35
  %7 = insertelement <2 x i32> %5, i32 %6, i32 1, !gla.precision !35
  %8 = add <2 x i32> %7, %2, !gla.precision !35
  %9 = load <4 x i32>* @uout
  %10 = extractelement <2 x i32> %8, i32 0
  %11 = insertelement <4 x i32> %9, i32 %10, i32 0
  %12 = extractelement <2 x i32> %8, i32 1
  %uout2 = insertelement <4 x i32> %11, i32 %12, i32 1
  store <4 x i32> %uout2, <4 x i32>* @uout
  %13 = load <2 x i32>* %u2out
  %14 = load <4 x i32>* @uout
  %15 = extractelement <4 x i32> %14, i32 0, !gla.precision !35
  %16 = insertelement <2 x i32> undef, i32 %15, i32 0, !gla.precision !35
  %17 = extractelement <4 x i32> %14, i32 1, !gla.precision !35
  %18 = insertelement <2 x i32> %16, i32 %17, i32 1, !gla.precision !35
  %19 = add <2 x i32> %18, %13, !gla.precision !35
  %20 = load <4 x i32>* @uout
  %21 = extractelement <2 x i32> %19, i32 0
  %22 = insertelement <4 x i32> %20, i32 %21, i32 0
  %23 = extractelement <2 x i32> %19, i32 1
  %uout3 = insertelement <4 x i32> %22, i32 %23, i32 1
  store <4 x i32> %uout3, <4 x i32>* @uout
  %24 = load i32* @u1
  %25 = load i32* @u1
  %uout4 = call { i32, i32 } @llvm.gla.subBorrow.i32.i32.i32.i32(i32 %24, i32 %25), !gla.precision !35
  %u1out5 = extractvalue { i32, i32 } %uout4, 1
  store i32 %u1out5, i32* %u1out
  %26 = extractvalue { i32, i32 } %uout4, 0
  %27 = load <4 x i32>* @uout
  %28 = extractelement <4 x i32> %27, i32 0, !gla.precision !35
  %29 = add i32 %28, %26, !gla.precision !35
  %30 = load <4 x i32>* @uout
  %uout6 = insertelement <4 x i32> %30, i32 %29, i32 0
  store <4 x i32> %uout6, <4 x i32>* @uout
  %31 = load i32* %u1out
  %32 = load <4 x i32>* @uout
  %33 = extractelement <4 x i32> %32, i32 0, !gla.precision !35
  %34 = add i32 %33, %31, !gla.precision !35
  %35 = load <4 x i32>* @uout
  %uout7 = insertelement <4 x i32> %35, i32 %34, i32 0
  store <4 x i32> %uout7, <4 x i32>* @uout
  %36 = load <4 x i32>* @u4
  %37 = load <4 x i32>* @u4
  %misc2a = call { <4 x i32>, <4 x i32> } @llvm.gla.umulExtended.v4i32.v4i32.v4i32.v4i32(<4 x i32> %36, <4 x i32> %37)
  %u4out8 = extractvalue { <4 x i32>, <4 x i32> } %misc2a, 0
  store <4 x i32> %u4out8, <4 x i32>* %u4out
  %u4out9 = extractvalue { <4 x i32>, <4 x i32> } %misc2a, 1
  store <4 x i32> %u4out9, <4 x i32>* %u4out
  %38 = load <4 x i32>* %u4out
  %39 = load <4 x i32>* @uout
  %uout10 = add <4 x i32> %39, %38, !gla.precision !35
  store <4 x i32> %uout10, <4 x i32>* @uout
  %40 = load <4 x i32>* @i4
  %41 = load <4 x i32>* @i4
  %misc2a11 = call { <4 x i32>, <4 x i32> } @llvm.gla.smulExtended.v4i32.v4i32.v4i32.v4i32(<4 x i32> %40, <4 x i32> %41)
  %i4out112 = extractvalue { <4 x i32>, <4 x i32> } %misc2a11, 0
  store <4 x i32> %i4out112, <4 x i32>* %i4out1
  %i4out213 = extractvalue { <4 x i32>, <4 x i32> } %misc2a11, 1
  store <4 x i32> %i4out213, <4 x i32>* %i4out2
  %42 = load <4 x i32>* %i4out1
  %43 = load <4 x i32>* %i4out2
  %44 = add <4 x i32> %42, %43, !gla.precision !35
  %45 = load <4 x i32>* @iout
  %iout = add <4 x i32> %45, %44, !gla.precision !35
  store <4 x i32> %iout, <4 x i32>* @iout
  %46 = load i32* @i1
  %iout14 = call i32 @llvm.gla.sBitFieldExtract.i32.i32(i32 %46, i32 4, i32 5), !gla.precision !35
  %47 = load <4 x i32>* @iout
  %48 = extractelement <4 x i32> %47, i32 0, !gla.precision !35
  %49 = add i32 %48, %iout14, !gla.precision !35
  %50 = load <4 x i32>* @iout
  %iout15 = insertelement <4 x i32> %50, i32 %49, i32 0
  store <4 x i32> %iout15, <4 x i32>* @iout
  %51 = load <3 x i32>* @u3
  %uout16 = call <3 x i32> @llvm.gla.uBitFieldExtract.v3i32.v3i32(<3 x i32> %51, i32 4, i32 5), !gla.precision !35
  %52 = load <4 x i32>* @uout
  %53 = extractelement <4 x i32> %52, i32 0, !gla.precision !35
  %54 = insertelement <3 x i32> undef, i32 %53, i32 0, !gla.precision !35
  %55 = extractelement <4 x i32> %52, i32 1, !gla.precision !35
  %56 = insertelement <3 x i32> %54, i32 %55, i32 1, !gla.precision !35
  %57 = extractelement <4 x i32> %52, i32 2, !gla.precision !35
  %58 = insertelement <3 x i32> %56, i32 %57, i32 2, !gla.precision !35
  %59 = add <3 x i32> %58, %uout16, !gla.precision !35
  %60 = load <4 x i32>* @uout
  %61 = extractelement <3 x i32> %59, i32 0
  %62 = insertelement <4 x i32> %60, i32 %61, i32 0
  %63 = extractelement <3 x i32> %59, i32 1
  %64 = insertelement <4 x i32> %62, i32 %63, i32 1
  %65 = extractelement <3 x i32> %59, i32 2
  %uout17 = insertelement <4 x i32> %64, i32 %65, i32 2
  store <4 x i32> %uout17, <4 x i32>* @uout
  %66 = load <3 x i32>* @i3
  %67 = load <3 x i32>* @i3
  %iout18 = call <3 x i32> @llvm.gla.bitFieldInsert.v3i32.v3i32.v3i32(<3 x i32> %66, <3 x i32> %67, i32 4, i32 5), !gla.precision !35
  %68 = load <4 x i32>* @iout
  %69 = extractelement <4 x i32> %68, i32 0, !gla.precision !35
  %70 = insertelement <3 x i32> undef, i32 %69, i32 0, !gla.precision !35
  %71 = extractelement <4 x i32> %68, i32 1, !gla.precision !35
  %72 = insertelement <3 x i32> %70, i32 %71, i32 1, !gla.precision !35
  %73 = extractelement <4 x i32> %68, i32 2, !gla.precision !35
  %74 = insertelement <3 x i32> %72, i32 %73, i32 2, !gla.precision !35
  %75 = add <3 x i32> %74, %iout18, !gla.precision !35
  %76 = load <4 x i32>* @iout
  %77 = extractelement <3 x i32> %75, i32 0
  %78 = insertelement <4 x i32> %76, i32 %77, i32 0
  %79 = extractelement <3 x i32> %75, i32 1
  %80 = insertelement <4 x i32> %78, i32 %79, i32 1
  %81 = extractelement <3 x i32> %75, i32 2
  %iout19 = insertelement <4 x i32> %80, i32 %81, i32 2
  store <4 x i32> %iout19, <4 x i32>* @iout
  %82 = load i32* @u1
  %83 = load i32* @u1
  %uout20 = call i32 @llvm.gla.bitFieldInsert.i32.i32.i32(i32 %82, i32 %83, i32 4, i32 5), !gla.precision !35
  %84 = load <4 x i32>* @uout
  %85 = extractelement <4 x i32> %84, i32 0, !gla.precision !35
  %86 = add i32 %85, %uout20, !gla.precision !35
  %87 = load <4 x i32>* @uout
  %uout21 = insertelement <4 x i32> %87, i32 %86, i32 0
  store <4 x i32> %uout21, <4 x i32>* @uout
  %88 = load <2 x i32>* @i2
  %iout22 = call <2 x i32> @llvm.gla.bitReverse.v2i32.v2i32(<2 x i32> %88), !gla.precision !35
  %89 = load <4 x i32>* @iout
  %90 = extractelement <4 x i32> %89, i32 0, !gla.precision !35
  %91 = insertelement <2 x i32> undef, i32 %90, i32 0, !gla.precision !35
  %92 = extractelement <4 x i32> %89, i32 1, !gla.precision !35
  %93 = insertelement <2 x i32> %91, i32 %92, i32 1, !gla.precision !35
  %94 = add <2 x i32> %93, %iout22, !gla.precision !35
  %95 = load <4 x i32>* @iout
  %96 = extractelement <2 x i32> %94, i32 0
  %97 = insertelement <4 x i32> %95, i32 %96, i32 0
  %98 = extractelement <2 x i32> %94, i32 1
  %iout23 = insertelement <4 x i32> %97, i32 %98, i32 1
  store <4 x i32> %iout23, <4 x i32>* @iout
  %99 = load <4 x i32>* @u4
  %uout24 = call <4 x i32> @llvm.gla.bitReverse.v4i32.v4i32(<4 x i32> %99), !gla.precision !35
  %100 = load <4 x i32>* @uout
  %uout25 = add <4 x i32> %100, %uout24, !gla.precision !35
  store <4 x i32> %uout25, <4 x i32>* @uout
  %101 = load i32* @i1
  %iout26 = call i32 @llvm.gla.bitCount.i32.i32(i32 %101), !gla.precision !35
  %102 = load <4 x i32>* @iout
  %103 = extractelement <4 x i32> %102, i32 0, !gla.precision !35
  %104 = add i32 %103, %iout26, !gla.precision !35
  %105 = load <4 x i32>* @iout
  %iout27 = insertelement <4 x i32> %105, i32 %104, i32 0
  store <4 x i32> %iout27, <4 x i32>* @iout
  %106 = load <3 x i32>* @u3
  %iout28 = call <3 x i32> @llvm.gla.bitCount.v3i32.v3i32(<3 x i32> %106), !gla.precision !35
  %107 = load <4 x i32>* @iout
  %108 = extractelement <4 x i32> %107, i32 0, !gla.precision !35
  %109 = insertelement <3 x i32> undef, i32 %108, i32 0, !gla.precision !35
  %110 = extractelement <4 x i32> %107, i32 1, !gla.precision !35
  %111 = insertelement <3 x i32> %109, i32 %110, i32 1, !gla.precision !35
  %112 = extractelement <4 x i32> %107, i32 2, !gla.precision !35
  %113 = insertelement <3 x i32> %111, i32 %112, i32 2, !gla.precision !35
  %114 = add <3 x i32> %113, %iout28, !gla.precision !35
  %115 = load <4 x i32>* @iout
  %116 = extractelement <3 x i32> %114, i32 0
  %117 = insertelement <4 x i32> %115, i32 %116, i32 0
  %118 = extractelement <3 x i32> %114, i32 1
  %119 = insertelement <4 x i32> %117, i32 %118, i32 1
  %120 = extractelement <3 x i32> %114, i32 2
  %iout29 = insertelement <4 x i32> %119, i32 %120, i32 2
  store <4 x i32> %iout29, <4 x i32>* @iout
  %121 = load <2 x i32>* @i2
  %iout30 = call <2 x i32> @llvm.gla.findLSB.v2i32.v2i32(<2 x i32> %121), !gla.precision !35
  %122 = load <4 x i32>* @iout
  %123 = extractelement <4 x i32> %122, i32 0, !gla.precision !35
  %124 = insertelement <2 x i32> undef, i32 %123, i32 0, !gla.precision !35
  %125 = extractelement <4 x i32> %122, i32 1, !gla.precision !35
  %126 = insertelement <2 x i32> %124, i32 %125, i32 1, !gla.precision !35
  %127 = add <2 x i32> %126, %iout30, !gla.precision !35
  %128 = load <4 x i32>* @iout
  %129 = extractelement <2 x i32> %127, i32 0
  %130 = insertelement <4 x i32> %128, i32 %129, i32 0
  %131 = extractelement <2 x i32> %127, i32 1
  %iout31 = insertelement <4 x i32> %130, i32 %131, i32 1
  store <4 x i32> %iout31, <4 x i32>* @iout
  %132 = load <4 x i32>* @u4
  %iout32 = call <4 x i32> @llvm.gla.findLSB.v4i32.v4i32(<4 x i32> %132), !gla.precision !35
  %133 = load <4 x i32>* @iout
  %iout33 = add <4 x i32> %133, %iout32, !gla.precision !35
  store <4 x i32> %iout33, <4 x i32>* @iout
  %134 = load i32* @i1
  %iout34 = call i32 @llvm.gla.sFindMSB.i32.i32(i32 %134), !gla.precision !35
  %135 = load <4 x i32>* @iout
  %136 = extractelement <4 x i32> %135, i32 0, !gla.precision !35
  %137 = add i32 %136, %iout34, !gla.precision !35
  %138 = load <4 x i32>* @iout
  %iout35 = insertelement <4 x i32> %138, i32 %137, i32 0
  store <4 x i32> %iout35, <4 x i32>* @iout
  %139 = load <2 x i32>* @u2
  %iout36 = call <2 x i32> @llvm.gla.sFindMSB.v2i32.v2i32(<2 x i32> %139), !gla.precision !35
  %140 = load <4 x i32>* @iout
  %141 = extractelement <4 x i32> %140, i32 0, !gla.precision !35
  %142 = insertelement <2 x i32> undef, i32 %141, i32 0, !gla.precision !35
  %143 = extractelement <4 x i32> %140, i32 1, !gla.precision !35
  %144 = insertelement <2 x i32> %142, i32 %143, i32 1, !gla.precision !35
  %145 = add <2 x i32> %144, %iout36, !gla.precision !35
  %146 = load <4 x i32>* @iout
  %147 = extractelement <2 x i32> %145, i32 0
  %148 = insertelement <4 x i32> %146, i32 %147, i32 0
  %149 = extractelement <2 x i32> %145, i32 1
  %iout37 = insertelement <4 x i32> %148, i32 %149, i32 1
  store <4 x i32> %iout37, <4 x i32>* @iout
  %150 = load <3 x float>* @v3
  %fout = call { <3 x float>, <3 x i32> } @llvm.gla.fFrexp.v3f32.v3i32.v3f32(<3 x float> %150), !gla.precision !35
  %i3out38 = extractvalue { <3 x float>, <3 x i32> } %fout, 1
  store <3 x i32> %i3out38, <3 x i32>* %i3out
  %151 = extractvalue { <3 x float>, <3 x i32> } %fout, 0
  %152 = load <4 x float>* @fout
  %153 = extractelement <4 x float> %152, i32 0, !gla.precision !35
  %154 = insertelement <3 x float> undef, float %153, i32 0, !gla.precision !35
  %155 = extractelement <4 x float> %152, i32 1, !gla.precision !35
  %156 = insertelement <3 x float> %154, float %155, i32 1, !gla.precision !35
  %157 = extractelement <4 x float> %152, i32 2, !gla.precision !35
  %158 = insertelement <3 x float> %156, float %157, i32 2, !gla.precision !35
  %159 = fadd <3 x float> %158, %151, !gla.precision !35
  %160 = load <4 x float>* @fout
  %161 = extractelement <3 x float> %159, i32 0
  %162 = insertelement <4 x float> %160, float %161, i32 0
  %163 = extractelement <3 x float> %159, i32 1
  %164 = insertelement <4 x float> %162, float %163, i32 1
  %165 = extractelement <3 x float> %159, i32 2
  %fout39 = insertelement <4 x float> %164, float %165, i32 2
  store <4 x float> %fout39, <4 x float>* @fout
  %166 = load <3 x i32>* %i3out
  %167 = load <4 x i32>* @iout
  %168 = extractelement <4 x i32> %167, i32 0, !gla.precision !35
  %169 = insertelement <3 x i32> undef, i32 %168, i32 0, !gla.precision !35
  %170 = extractelement <4 x i32> %167, i32 1, !gla.precision !35
  %171 = insertelement <3 x i32> %169, i32 %170, i32 1, !gla.precision !35
  %172 = extractelement <4 x i32> %167, i32 2, !gla.precision !35
  %173 = insertelement <3 x i32> %171, i32 %172, i32 2, !gla.precision !35
  %174 = add <3 x i32> %173, %166, !gla.precision !35
  %175 = load <4 x i32>* @iout
  %176 = extractelement <3 x i32> %174, i32 0
  %177 = insertelement <4 x i32> %175, i32 %176, i32 0
  %178 = extractelement <3 x i32> %174, i32 1
  %179 = insertelement <4 x i32> %177, i32 %178, i32 1
  %180 = extractelement <3 x i32> %174, i32 2
  %iout40 = insertelement <4 x i32> %179, i32 %180, i32 2
  store <4 x i32> %iout40, <4 x i32>* @iout
  %181 = load float* @v1
  %fout41 = call { float, i32 } @llvm.gla.fFrexp.f32.i32.f32(float %181), !gla.precision !35
  %i1out42 = extractvalue { float, i32 } %fout41, 1
  store i32 %i1out42, i32* %i1out
  %182 = extractvalue { float, i32 } %fout41, 0
  %183 = load <4 x float>* @fout
  %184 = extractelement <4 x float> %183, i32 0, !gla.precision !35
  %185 = fadd float %184, %182, !gla.precision !35
  %186 = load <4 x float>* @fout
  %fout43 = insertelement <4 x float> %186, float %185, i32 0
  store <4 x float> %fout43, <4 x float>* @fout
  %187 = load i32* %i1out
  %188 = load <4 x i32>* @iout
  %189 = extractelement <4 x i32> %188, i32 0, !gla.precision !35
  %190 = add i32 %189, %187, !gla.precision !35
  %191 = load <4 x i32>* @iout
  %iout44 = insertelement <4 x i32> %191, i32 %190, i32 0
  store <4 x i32> %iout44, <4 x i32>* @iout
  %192 = load <2 x float>* @v2
  %193 = load <2 x i32>* @i2
  %fout45 = call <2 x float> @llvm.gla.fLdexp.v2f32.v2f32.v2i32(<2 x float> %192, <2 x i32> %193), !gla.precision !35
  %194 = load <4 x float>* @fout
  %195 = extractelement <4 x float> %194, i32 0, !gla.precision !35
  %196 = insertelement <2 x float> undef, float %195, i32 0, !gla.precision !35
  %197 = extractelement <4 x float> %194, i32 1, !gla.precision !35
  %198 = insertelement <2 x float> %196, float %197, i32 1, !gla.precision !35
  %199 = fadd <2 x float> %198, %fout45, !gla.precision !35
  %200 = load <4 x float>* @fout
  %201 = extractelement <2 x float> %199, i32 0
  %202 = insertelement <4 x float> %200, float %201, i32 0
  %203 = extractelement <2 x float> %199, i32 1
  %fout46 = insertelement <4 x float> %202, float %203, i32 1
  store <4 x float> %fout46, <4 x float>* @fout
  %204 = load float* @v1
  %205 = load i32* @i1
  %fout47 = call float @llvm.gla.fLdexp.f32.f32.i32(float %204, i32 %205), !gla.precision !35
  %206 = load <4 x float>* @fout
  %207 = extractelement <4 x float> %206, i32 0, !gla.precision !35
  %208 = fadd float %207, %fout47, !gla.precision !35
  %209 = load <4 x float>* @fout
  %fout48 = insertelement <4 x float> %209, float %208, i32 0
  store <4 x float> %fout48, <4 x float>* @fout
  %210 = load <4 x float>* @v4
  %uout49 = call i32 @llvm.gla.fPackUnorm4x8.i32.v4f32(<4 x float> %210), !gla.precision !35
  %211 = load <4 x i32>* @uout
  %212 = extractelement <4 x i32> %211, i32 0, !gla.precision !35
  %213 = add i32 %212, %uout49, !gla.precision !35
  %214 = load <4 x i32>* @uout
  %uout50 = insertelement <4 x i32> %214, i32 %213, i32 0
  store <4 x i32> %uout50, <4 x i32>* @uout
  %215 = load <4 x float>* @v4
  %uout51 = call i32 @llvm.gla.fPackSnorm4x8.i32.v4f32(<4 x float> %215), !gla.precision !35
  %216 = load <4 x i32>* @uout
  %217 = extractelement <4 x i32> %216, i32 0, !gla.precision !35
  %218 = add i32 %217, %uout51, !gla.precision !35
  %219 = load <4 x i32>* @uout
  %uout52 = insertelement <4 x i32> %219, i32 %218, i32 0
  store <4 x i32> %uout52, <4 x i32>* @uout
  %220 = load i32* @u1
  %fout53 = call <4 x float> @llvm.gla.fUnpackUnorm4x8.v4f32.i32(i32 %220), !gla.precision !36
  %221 = load <4 x float>* @fout
  %fout54 = fadd <4 x float> %221, %fout53, !gla.precision !35
  store <4 x float> %fout54, <4 x float>* @fout
  %222 = load i32* @u1
  %fout55 = call <4 x float> @llvm.gla.fUnpackSnorm4x8.v4f32.i32(i32 %222), !gla.precision !36
  %223 = load <4 x float>* @fout
  %fout56 = fadd <4 x float> %223, %fout55, !gla.precision !35
  store <4 x float> %fout56, <4 x float>* @fout
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %mainBody
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare { <2 x i32>, <2 x i32> } @llvm.gla.addCarry.v2i32.v2i32.v2i32.v2i32(<2 x i32>, <2 x i32>) #0

; Function Attrs: nounwind readnone
declare { i32, i32 } @llvm.gla.subBorrow.i32.i32.i32.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare { <4 x i32>, <4 x i32> } @llvm.gla.umulExtended.v4i32.v4i32.v4i32.v4i32(<4 x i32>, <4 x i32>) #0

; Function Attrs: nounwind readnone
declare { <4 x i32>, <4 x i32> } @llvm.gla.smulExtended.v4i32.v4i32.v4i32.v4i32(<4 x i32>, <4 x i32>) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.gla.sBitFieldExtract.i32.i32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <3 x i32> @llvm.gla.uBitFieldExtract.v3i32.v3i32(<3 x i32>, i32, i32) #0

; Function Attrs: nounwind readnone
declare <3 x i32> @llvm.gla.bitFieldInsert.v3i32.v3i32.v3i32(<3 x i32>, <3 x i32>, i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.gla.bitFieldInsert.i32.i32.i32(i32, i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <2 x i32> @llvm.gla.bitReverse.v2i32.v2i32(<2 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.bitReverse.v4i32.v4i32(<4 x i32>) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.gla.bitCount.i32.i32(i32) #0

; Function Attrs: nounwind readnone
declare <3 x i32> @llvm.gla.bitCount.v3i32.v3i32(<3 x i32>) #0

; Function Attrs: nounwind readnone
declare <2 x i32> @llvm.gla.findLSB.v2i32.v2i32(<2 x i32>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.findLSB.v4i32.v4i32(<4 x i32>) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.gla.sFindMSB.i32.i32(i32) #0

; Function Attrs: nounwind readnone
declare <2 x i32> @llvm.gla.sFindMSB.v2i32.v2i32(<2 x i32>) #0

; Function Attrs: nounwind readnone
declare { <3 x float>, <3 x i32> } @llvm.gla.fFrexp.v3f32.v3i32.v3f32(<3 x float>) #0

; Function Attrs: nounwind readnone
declare { float, i32 } @llvm.gla.fFrexp.f32.i32.f32(float) #0

; Function Attrs: nounwind readnone
declare <2 x float> @llvm.gla.fLdexp.v2f32.v2f32.v2i32(<2 x float>, <2 x i32>) #0

; Function Attrs: nounwind readnone
declare float @llvm.gla.fLdexp.f32.f32.i32(float, i32) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.gla.fPackUnorm4x8.i32.v4f32(<4 x float>) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.gla.fPackSnorm4x8.i32.v4f32(<4 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fUnpackUnorm4x8.v4f32.i32(i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fUnpackSnorm4x8.v4f32.i32(i32) #0

attributes #0 = { nounwind readnone }

!gla.entrypoint = !{!0}
!gla.outputs = !{!1, !3, !5}
!gla.inputs = !{!7, !9, !11, !13, !15, !17, !19, !21, !23, !25, !27, !29, !31, !33}
!gla.noStaticUse = !{!31, !33}

!0 = !{!"main", i32 15}
!1 = !{!"iout", i32 7, <4 x i32>* @iout_typeProxy, !2}
!2 = !{i32 0, i32 3, i32 1024, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!3 = !{!"uout", i32 7, <4 x i32>* @uout_typeProxy, !4}
!4 = !{i32 1, i32 3, i32 1025, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!5 = !{!"fout", i32 7, <4 x float>* @fout_typeProxy, !6}
!6 = !{i32 0, i32 3, i32 1026, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!7 = !{!"u2", i32 1, <2 x i32>* @u2_typeProxy, !8}
!8 = !{i32 1, i32 3, i32 1027, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!9 = !{!"u1", i32 1, i32* @u1_typeProxy, !10}
!10 = !{i32 1, i32 3, i32 1028, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!11 = !{!"u4", i32 1, <4 x i32>* @u4_typeProxy, !12}
!12 = !{i32 1, i32 3, i32 1029, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!13 = !{!"i4", i32 1, <4 x i32>* @i4_typeProxy, !14}
!14 = !{i32 0, i32 3, i32 1030, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!15 = !{!"i1", i32 1, i32* @i1_typeProxy, !16}
!16 = !{i32 0, i32 3, i32 1031, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!17 = !{!"u3", i32 1, <3 x i32>* @u3_typeProxy, !18}
!18 = !{i32 1, i32 3, i32 1032, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!19 = !{!"i3", i32 1, <3 x i32>* @i3_typeProxy, !20}
!20 = !{i32 0, i32 3, i32 1033, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!21 = !{!"i2", i32 1, <2 x i32>* @i2_typeProxy, !22}
!22 = !{i32 0, i32 3, i32 1034, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!23 = !{!"v3", i32 1, <3 x float>* @v3_typeProxy, !24}
!24 = !{i32 0, i32 3, i32 1035, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!25 = !{!"v1", i32 1, float* @v1_typeProxy, !26}
!26 = !{i32 0, i32 3, i32 1036, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!27 = !{!"v2", i32 1, <2 x float>* @v2_typeProxy, !28}
!28 = !{i32 0, i32 3, i32 1037, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!29 = !{!"v4", i32 1, <4 x float>* @v4_typeProxy, !30}
!30 = !{i32 0, i32 3, i32 1038, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!31 = !{!"gl_VertexID", i32 2, i32* @gl_VertexID_typeProxy, !32}
!32 = !{i32 0, i32 3, i32 1039, null, i32 0, i32 7, i32 -1, i32 0, i32 -1}
!33 = !{!"gl_InstanceID", i32 3, i32* @gl_InstanceID_typeProxy, !34}
!34 = !{i32 0, i32 3, i32 1040, null, i32 0, i32 8, i32 -1, i32 0, i32 -1}
!35 = !{i32 3}
!36 = !{i32 2}
