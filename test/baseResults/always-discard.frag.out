
Top IR:
; ModuleID = 'Glslang'

@tex_coord = global <2 x float> zeroinitializer
@gl_FragColor = global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %radius = alloca float
  %y = alloca float
  %x = alloca float
  %color = alloca <4 x float>
  %black = alloca <4 x float>
  %white = alloca <4 x float>
  br label %mainBody

mainBody:                                         ; preds = %entry
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %white
  store <4 x float> <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>, <4 x float>* %black
  %color1 = load <4 x float>* %white
  store <4 x float> %color1, <4 x float>* %color
  %0 = load <2 x float>* @tex_coord
  %1 = extractelement <2 x float> %0, i32 0
  %2 = fmul float %1, 2.000000e+00
  %x2 = fsub float %2, 1.000000e+00
  store float %x2, float* %x
  %3 = load <2 x float>* @tex_coord
  %4 = extractelement <2 x float> %3, i32 1
  %5 = fmul float %4, 2.000000e+00
  %y3 = fsub float %5, 1.000000e+00
  store float %y3, float* %y
  %6 = load float* %x
  %7 = load float* %x
  %8 = fmul float %6, %7
  %9 = load float* %y
  %10 = load float* %y
  %11 = fmul float %9, %10
  %12 = fadd float %8, %11
  %radius4 = call float @llvm.gla.fSqrt.f32.f32(float %12)
  store float %radius4, float* %radius
  %13 = load float* %radius
  %14 = fcmp ogt float %13, 1.000000e+00
  br i1 %14, label %then, label %ifmerge10

then:                                             ; preds = %mainBody
  %15 = load float* %radius
  %16 = fcmp ogt float %15, 0x3FF19999A0000000
  br i1 %16, label %then5, label %ifmerge

then5:                                            ; preds = %then
  %17 = load <4 x float>* %color
  %color6 = fadd <4 x float> %17, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color6, <4 x float>* %color
  br label %ifmerge

ifmerge:                                          ; preds = %then, %then5
  %gl_FragColor = load <4 x float>* %color
  store <4 x float> %gl_FragColor, <4 x float>* @gl_FragColor
  %18 = load float* %radius
  %19 = fcmp ogt float %18, 0x3FF3333340000000
  br i1 %19, label %then7, label %ifmerge9

then7:                                            ; preds = %ifmerge
  %20 = load <4 x float>* %color
  %color8 = fadd <4 x float> %20, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color8, <4 x float>* %color
  br label %ifmerge9

ifmerge9:                                         ; preds = %ifmerge, %then7
  br label %ifmerge10

ifmerge10:                                        ; preds = %mainBody, %ifmerge9
  call void @llvm.gla.discard()
  br label %stage-exit

post-discard:                                     ; No predecessors!
  %21 = load float* %radius
  %22 = fcmp oge float %21, 7.500000e-01
  unreachable

then11:                                           ; No predecessors!
  %23 = load float* %radius
  %color12 = call float @llvm.gla.fPow.f32.f32.f32(float %23, float 1.600000e+01)
  %24 = fdiv float %color12, 2.000000e+00
  %color13 = call float @llvm.gla.fAbs.f32.f32(float %24)
  %25 = load <4 x float>* %color
  %26 = insertelement <4 x float> undef, float %color13, i32 0
  %27 = insertelement <4 x float> %26, float %color13, i32 1
  %28 = insertelement <4 x float> %27, float %color13, i32 2
  %29 = insertelement <4 x float> %28, float %color13, i32 3
  %color14 = fsub <4 x float> %25, %29
  store <4 x float> %color14, <4 x float>* %color
  br label %ifmerge15

ifmerge15:                                        ; preds = %then11
  %gl_FragColor16 = load <4 x float>* %color
  store <4 x float> %gl_FragColor16, <4 x float>* @gl_FragColor
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %ifmerge15
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue, %ifmerge10
  ret void
}

; Function Attrs: nounwind readnone
declare float @llvm.gla.fSqrt.f32.f32(float) #0

; Function Attrs: nounwind
declare void @llvm.gla.discard() #1

; Function Attrs: nounwind readnone
declare float @llvm.gla.fPow.f32.f32.f32(float, float) #0

; Function Attrs: nounwind readnone
declare float @llvm.gla.fAbs.f32.f32(float) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }

!gla.entrypoint = !{!0}
!gla.inputs = !{!1}
!gla.outputs = !{!3}

!0 = !{!"main", i32 15}
!1 = !{!"tex_coord", i32 1, <2 x float>* @tex_coord_typeProxy, !2}
!2 = !{i32 0, i32 0, i32 1024, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!3 = !{!"gl_FragColor", i32 7, <4 x float>* @gl_FragColor_typeProxy, !4}
!4 = !{i32 0, i32 0, i32 1025, null, i32 0, i32 43, i32 -1, i32 0, i32 -1}
