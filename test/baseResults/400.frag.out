
Top IR:
; ModuleID = 'Glslang'

@outp = global <4 x float> zeroinitializer
@u2drs = external addrspace(1) constant i32
@arrayedSampler = external addrspace(1) constant [5 x i32]
@i = global i32 0
@c2D = global <2 x float> zeroinitializer
@gl_ClipDistance = global [2 x float] zeroinitializer
@uoutp = global <4 x i32> zeroinitializer
@samp2dr = external addrspace(1) constant i32
@uoutp1 = internal constant [4 x <2 x i32>] [<2 x i32> <i32 1, i32 2>, <2 x i32> <i32 3, i32 4>, <2 x i32> <i32 15, i32 16>, <2 x i32> <i32 -2, i32 0>]
@ioutp = global <4 x i32> zeroinitializer
@isamp2DA = external addrspace(1) constant i32
@gl_FragCoord = global <4 x float> zeroinitializer
@vl2 = global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %ioutp8 = alloca <2 x i32>
  %v = alloca <4 x float>
  br label %mainBody

mainBody:                                         ; preds = %entry
  %0 = load i32* @i
  %1 = getelementptr [5 x i32] addrspace(1)* @arrayedSampler, i32 0, i32 %0
  %2 = load i32 addrspace(1)* %1, !gla.uniform !9
  %3 = load <2 x float>* @c2D
  %v2 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %2, i32 0, <2 x float> %3)
  store <4 x float> %v2, <4 x float>* %v
  %4 = load float* getelementptr inbounds ([2 x float]* @gl_ClipDistance, i32 0, i32 1)
  %5 = load <4 x float>* @outp
  %outp = insertelement <4 x float> %5, float %4, i32 0
  store <4 x float> %outp, <4 x float>* @outp
  %6 = load <4 x float>* %v
  %7 = extractelement <4 x float> %6, i32 1
  %8 = insertelement <3 x float> undef, float %7, i32 0
  %9 = extractelement <4 x float> %6, i32 2
  %10 = insertelement <3 x float> %8, float %9, i32 1
  %11 = extractelement <4 x float> %6, i32 3
  %12 = insertelement <3 x float> %10, float %11, i32 2
  %13 = load <4 x float>* @outp
  %14 = extractelement <3 x float> %12, i32 0
  %15 = insertelement <4 x float> %13, float %14, i32 1
  %16 = extractelement <3 x float> %12, i32 1
  %17 = insertelement <4 x float> %15, float %16, i32 2
  %18 = extractelement <3 x float> %12, i32 2
  %outp3 = insertelement <4 x float> %17, float %18, i32 3
  store <4 x float> %outp3, <4 x float>* @outp
  %19 = load i32 addrspace(1)* @samp2dr, !gla.uniform !12
  %20 = load <2 x float>* @c2D
  %21 = load [4 x <2 x i32>]* @uoutp1
  %22 = extractvalue [4 x <2 x i32>] %21, 0
  %23 = extractvalue [4 x <2 x i32>] %21, 1
  %24 = extractvalue [4 x <2 x i32>] %21, 2
  %25 = extractvalue [4 x <2 x i32>] %21, 3
  %uoutp = call <4 x i32> @llvm.gla.texelGatherOffsets.v4i32.v2f32(i32 5, i32 %19, i32 9536, <2 x float> %20, i32 2, float undef, <2 x i32> %22, <2 x i32> %23, <2 x i32> %24, <2 x i32> %25)
  store <4 x i32> %uoutp, <4 x i32>* @uoutp
  %26 = load i32 addrspace(1)* getelementptr inbounds ([5 x i32] addrspace(1)* @arrayedSampler, i32 0, i32 0), !gla.uniform !9
  %27 = load <2 x float>* @c2D
  %outp4 = call <4 x float> @llvm.gla.fTexelGather.v4f32.v2f32(i32 2, i32 %26, i32 64, <2 x float> %27, i32 undef, float undef)
  %28 = load <4 x float>* @outp
  %outp5 = fadd <4 x float> %28, %outp4
  store <4 x float> %outp5, <4 x float>* @outp
  %29 = load i32 addrspace(1)* @isamp2DA, !gla.uniform !15
  %ioutp = call <4 x i32> @llvm.gla.texelGatherOffset.v4i32.v3f32(i32 2, i32 %29, i32 1360, <3 x float> <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>, i32 3, float undef, <2 x i32> <i32 1, i32 1>)
  store <4 x i32> %ioutp, <4 x i32>* @ioutp
  %30 = load i32 addrspace(1)* @isamp2DA, !gla.uniform !15
  %ioutp6 = call <4 x i32> @llvm.gla.texelGatherOffset.v4i32.v3f32(i32 2, i32 %30, i32 1360, <3 x float> <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>, i32 3, float undef, <2 x i32> <i32 1, i32 1>)
  %31 = load <4 x i32>* @ioutp
  %ioutp7 = add <4 x i32> %31, %ioutp6
  store <4 x i32> %ioutp7, <4 x i32>* @ioutp
  %32 = load i32 addrspace(1)* @isamp2DA, !gla.uniform !15
  %33 = load i32* @i
  %34 = load <2 x i32>* %ioutp8
  %35 = insertelement <2 x i32> undef, i32 %33, i32 0
  %36 = insertelement <2 x i32> %35, i32 %33, i32 1
  %ioutp9 = call <4 x i32> @llvm.gla.texelGatherOffset.v4i32.v3f32(i32 2, i32 %32, i32 336, <3 x float> <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>, i32 undef, float undef, <2 x i32> %36)
  %37 = load <4 x i32>* @ioutp
  %ioutp10 = add <4 x i32> %37, %ioutp9
  store <4 x i32> %ioutp10, <4 x i32>* @ioutp
  %38 = load <4 x float>* @gl_FragCoord
  %39 = load <4 x float>* @vl2
  %40 = fadd <4 x float> %38, %39
  %41 = load <4 x float>* @outp
  %outp11 = fadd <4 x float> %41, %40
  store <4 x float> %outp11, <4 x float>* @outp
  call void @"foo23("()
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %mainBody
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: alwaysinline
define internal fastcc void @"foo23("() #0 {
entry:
  %0 = load i32 addrspace(1)* @u2drs, !gla.uniform !6
  %1 = load <4 x float>* @outp
  %outp = call float @llvm.gla.fTextureSampleLodRefZOffsetGrad.f32.v4f32.v2i32.v2f32.v2f32(i32 5, i32 %0, i32 265, <4 x float> %1, float undef, float undef, <2 x i32> <i32 3, i32 4>, <2 x float> zeroinitializer, <2 x float> zeroinitializer)
  %2 = load <4 x float>* @outp
  %3 = extractelement <4 x float> %2, i32 0
  %4 = fadd float %3, %outp
  %5 = load <4 x float>* @outp
  %outp1 = insertelement <4 x float> %5, float %4, i32 0
  store <4 x float> %outp1, <4 x float>* @outp
  ret void
}

; Function Attrs: nounwind readnone
declare float @llvm.gla.fTextureSampleLodRefZOffsetGrad.f32.v4f32.v2i32.v2f32.v2f32(i32, i32, i32, <4 x float>, float, float, <2 x i32>, <2 x float>, <2 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.texelGatherOffsets.v4i32.v2f32(i32, i32, i32, <2 x float>, i32, float, <2 x i32>, <2 x i32>, <2 x i32>, <2 x i32>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTexelGather.v4f32.v2f32(i32, i32, i32, <2 x float>, i32, float) #1

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.texelGatherOffset.v4i32.v3f32(i32, i32, i32, <3 x float>, i32, float, <2 x i32>) #1

attributes #0 = { alwaysinline }
attributes #1 = { nounwind readnone }

!gla.outputs = !{!0, !2, !4}
!gla.uniforms = !{!6, !9, !12, !15}
!gla.entrypoint = !{!18}
!gla.inputs = !{!19, !21, !23, !25, !27}

!0 = !{!"outp", i32 7, <4 x float>* @outp_typeProxy, !1}
!1 = !{i32 0, i32 0, i32 1024, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!2 = !{!"uoutp", i32 7, <4 x i32>* @uoutp_typeProxy, !3}
!3 = !{i32 1, i32 0, i32 1029, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!4 = !{!"ioutp", i32 7, <4 x i32>* @ioutp_typeProxy, !5}
!5 = !{i32 0, i32 0, i32 1030, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!6 = !{!"u2drs", i32 12, i32* @u2drs_typeProxy, !7}
!7 = !{i32 5, i32 0, i32 1024, !8, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!8 = !{i32 0, i32* @u2drs_typeProxy, i32 4, i1 false, i1 true, i32 0}
!9 = !{!"arrayedSampler", i32 12, [5 x i32]* @arrayedSampler_typeProxy, !10}
!10 = !{i32 5, i32 0, i32 1024, !11, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!11 = !{i32 0, [5 x i32]* @arrayedSampler_typeProxy, i32 1, i1 false, i1 false, i32 0}
!12 = !{!"samp2dr", i32 12, i32* @samp2dr_typeProxy, !13}
!13 = !{i32 5, i32 0, i32 1024, !14, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!14 = !{i32 0, i32* @samp2dr_typeProxy, i32 4, i1 false, i1 false, i32 2}
!15 = !{!"isamp2DA", i32 12, i32* @isamp2DA_typeProxy, !16}
!16 = !{i32 5, i32 0, i32 1024, !17, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!17 = !{i32 0, i32* @isamp2DA_typeProxy, i32 1, i1 true, i1 false, i32 1}
!18 = !{!"main", i32 15}
!19 = !{!"i", i32 1, i32* @i_typeProxy, !20}
!20 = !{i32 0, i32 0, i32 1025, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!21 = !{!"c2D", i32 1, <2 x float>* @c2D_typeProxy, !22}
!22 = !{i32 0, i32 0, i32 1026, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!23 = !{!"gl_ClipDistance", i32 1, [2 x float]* @gl_ClipDistance_typeProxy, !24}
!24 = !{i32 0, i32 0, i32 1027, null, i32 1, i32 12, i32 -1, i32 0, i32 -1}
!25 = !{!"gl_FragCoord", i32 5, <4 x float>* @gl_FragCoord_typeProxy, !26}
!26 = !{i32 0, i32 0, i32 1031, null, i32 0, i32 41, i32 -1, i32 0, i32 -1}
!27 = !{!"vl2", i32 1, <4 x float>* @vl2_typeProxy, !28}
!28 = !{i32 0, i32 0, i32 6, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
