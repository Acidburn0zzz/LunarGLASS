
Top IR:
; ModuleID = 'Glslang'

@BaseColor = global <4 x float> zeroinitializer
@d = external addrspace(2) constant float
@bigColor = external addrspace(2) constant <4 x float>
@bigColor1_1 = external addrspace(2) constant <4 x float>
@d2 = external addrspace(2) constant float
@d3 = external addrspace(2) constant float
@bigColor1_2 = external addrspace(2) constant <4 x float>
@bigColor1_3 = external addrspace(2) constant <4 x float>
@d4 = external addrspace(2) constant float
@Count = external addrspace(2) constant i32
@bigColor2 = external addrspace(2) constant <4 x float>
@bigColor3 = external addrspace(2) constant <4 x float>
@bigColor4 = external addrspace(2) constant <4 x float>
@bigColor5 = external addrspace(2) constant <4 x float>
@d5 = external addrspace(2) constant float
@d6 = external addrspace(2) constant float
@bigColor6 = external addrspace(2) constant <4 x float>
@d7 = external addrspace(2) constant float
@bigColor7 = external addrspace(2) constant <4 x float>
@d8 = external addrspace(2) constant float
@d9 = external addrspace(2) constant float
@d10 = external addrspace(2) constant float
@d11 = external addrspace(2) constant float
@d12 = external addrspace(2) constant float
@bigColor8 = external addrspace(2) constant <4 x float>
@gl_FragColor = global <4 x float> zeroinitializer
@d14 = external addrspace(2) constant float
@d15 = external addrspace(2) constant float
@d16 = external addrspace(2) constant float
@d18 = external addrspace(2) constant float
@d17 = external addrspace(2) constant float
@d13 = external addrspace(2) constant float
@d19 = external addrspace(2) constant float
@d20 = external addrspace(2) constant float
@d21 = external addrspace(2) constant float
@d22 = external addrspace(2) constant float
@d23 = external addrspace(2) constant float
@d24 = external addrspace(2) constant float
@d25 = external addrspace(2) constant float
@d26 = external addrspace(2) constant float
@d27 = external addrspace(2) constant float
@d28 = external addrspace(2) constant float
@d29 = external addrspace(2) constant float
@d30 = external addrspace(2) constant float
@d31 = external addrspace(2) constant float
@d32 = external addrspace(2) constant float
@d33 = external addrspace(2) constant float
@d34 = external addrspace(2) constant float

define fastcc void @main() {
entry:
  %i107 = alloca i32
  %i94 = alloca i32
  %i82 = alloca i32
  %i67 = alloca i32
  %i59 = alloca i32
  %i = alloca i32
  %color = alloca <4 x float>
  br label %mainBody

mainBody:                                         ; preds = %entry
  %color1 = load <4 x float>* @BaseColor
  store <4 x float> %color1, <4 x float>* %color
  br label %loop-header

loop-header:                                      ; preds = %mainBody
  br i1 false, label %then, label %ifmerge

then:                                             ; preds = %loop-header
  br label %loop-merge

post-loop-break:                                  ; No predecessors!
  unreachable

ifmerge:                                          ; preds = %loop-header
  %0 = load <4 x float>* %color
  %1 = extractelement <4 x float> %0, i32 0
  %2 = fcmp olt float %1, 0x3FD51EB860000000
  br i1 %2, label %then2, label %ifmerge5

then2:                                            ; preds = %ifmerge
  %3 = load <4 x float>* %color
  %color3 = fadd <4 x float> %3, <float 0x3FD51EB860000000, float 0x3FD51EB860000000, float 0x3FD51EB860000000, float 0x3FD51EB860000000>
  store <4 x float> %color3, <4 x float>* %color
  br label %loop-merge

post-loop-break4:                                 ; No predecessors!
  unreachable

ifmerge5:                                         ; preds = %ifmerge
  %4 = load <4 x float>* %color
  %5 = extractelement <4 x float> %4, i32 0
  %6 = fcmp olt float %5, 0x3FE51EB860000000
  br i1 %6, label %then6, label %ifmerge9

then6:                                            ; preds = %ifmerge5
  %7 = load <4 x float>* %color
  %color7 = fadd <4 x float> %7, <float 0x3FE51EB860000000, float 0x3FE51EB860000000, float 0x3FE51EB860000000, float 0x3FE51EB860000000>
  store <4 x float> %color7, <4 x float>* %color
  br label %loop-merge

post-loop-break8:                                 ; No predecessors!
  unreachable

ifmerge9:                                         ; preds = %ifmerge5
  %8 = load <4 x float>* %color
  %color10 = fadd <4 x float> %8, <float 0x3FD51EB860000000, float 0x3FD51EB860000000, float 0x3FD51EB860000000, float 0x3FD51EB860000000>
  store <4 x float> %color10, <4 x float>* %color
  br label %loop-merge

post-loop-break11:                                ; No predecessors!
  unreachable

loop-merge:                                       ; preds = %ifmerge9, %then6, %then2, %then
  br label %loop-header12

loop-header12:                                    ; preds = %ifmerge15, %loop-merge
  %9 = load <4 x float>* %color
  %10 = extractelement <4 x float> %9, i32 0
  %11 = load float addrspace(2)* @d, !gla.uniform !3
  %12 = fcmp olt float %10, %11
  %13 = xor i1 %12, true
  br i1 %13, label %then13, label %ifmerge15

then13:                                           ; preds = %loop-header12
  br label %loop-merge17

post-loop-break14:                                ; No predecessors!
  unreachable

ifmerge15:                                        ; preds = %loop-header12
  %14 = load <4 x float> addrspace(2)* @bigColor, !gla.uniform !5
  %15 = load <4 x float>* %color
  %color16 = fadd <4 x float> %15, %14
  store <4 x float> %color16, <4 x float>* %color
  br label %loop-header12

loop-merge17:                                     ; preds = %then13
  br label %loop-header18

loop-header18:                                    ; preds = %ifmerge24, %then23, %loop-merge17
  %16 = load <4 x float>* %color
  %17 = extractelement <4 x float> %16, i32 2
  %18 = load float addrspace(2)* @d, !gla.uniform !3
  %19 = fcmp olt float %17, %18
  %20 = xor i1 %19, true
  br i1 %20, label %then19, label %ifmerge21

then19:                                           ; preds = %loop-header18
  br label %loop-merge26

post-loop-break20:                                ; No predecessors!
  unreachable

ifmerge21:                                        ; preds = %loop-header18
  %21 = load <4 x float> addrspace(2)* @bigColor1_1, !gla.uniform !6
  %22 = load <4 x float>* %color
  %color22 = fadd <4 x float> %22, %21
  store <4 x float> %color22, <4 x float>* %color
  %23 = load <4 x float>* %color
  %24 = extractelement <4 x float> %23, i32 3
  %25 = load float addrspace(2)* @d, !gla.uniform !3
  %26 = fcmp olt float %24, %25
  br i1 %26, label %then23, label %ifmerge24

then23:                                           ; preds = %ifmerge21
  br label %loop-header18

post-loop-continue:                               ; No predecessors!
  unreachable

ifmerge24:                                        ; preds = %ifmerge21
  %27 = load <4 x float> addrspace(2)* @bigColor1_1, !gla.uniform !6
  %28 = load <4 x float>* %color
  %color25 = fadd <4 x float> %28, %27
  store <4 x float> %color25, <4 x float>* %color
  br label %loop-header18

loop-merge26:                                     ; preds = %then19
  br label %loop-header27

loop-header27:                                    ; preds = %ifmerge30, %loop-merge26
  %29 = load <4 x float>* %color
  %30 = extractelement <4 x float> %29, i32 0
  %31 = fcmp olt float %30, 4.200000e+01
  %32 = xor i1 %31, true
  br i1 %32, label %then28, label %ifmerge30

then28:                                           ; preds = %loop-header27
  br label %loop-merge32

post-loop-break29:                                ; No predecessors!
  unreachable

ifmerge30:                                        ; preds = %loop-header27
  %33 = load <4 x float>* %color
  %color31 = fadd <4 x float> %33, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color31, <4 x float>* %color
  br label %loop-header27

loop-merge32:                                     ; preds = %then28
  br label %loop-header33

loop-header33:                                    ; preds = %ifmerge36, %loop-merge32
  %34 = load <4 x float>* %color
  %35 = extractelement <4 x float> %34, i32 3
  %36 = load float addrspace(2)* @d2, !gla.uniform !7
  %37 = fcmp olt float %35, %36
  %38 = load <4 x float>* %color
  %39 = extractelement <4 x float> %38, i32 1
  %40 = load float addrspace(2)* @d3, !gla.uniform !8
  %41 = fcmp olt float %39, %40
  %42 = and i1 %37, %41
  %43 = xor i1 %42, true
  br i1 %43, label %then34, label %ifmerge36

then34:                                           ; preds = %loop-header33
  br label %loop-merge38

post-loop-break35:                                ; No predecessors!
  unreachable

ifmerge36:                                        ; preds = %loop-header33
  %44 = load <4 x float> addrspace(2)* @bigColor1_2, !gla.uniform !9
  %45 = load <4 x float>* %color
  %color37 = fadd <4 x float> %45, %44
  store <4 x float> %color37, <4 x float>* %color
  br label %loop-header33

loop-merge38:                                     ; preds = %then34
  br label %loop-header39

loop-header39:                                    ; preds = %ifmerge46, %loop-merge38
  %46 = load <4 x float>* %color
  %47 = extractelement <4 x float> %46, i32 2
  %48 = load float addrspace(2)* @d3, !gla.uniform !8
  %49 = fcmp olt float %47, %48
  %50 = xor i1 %49, true
  br i1 %50, label %then40, label %ifmerge42

then40:                                           ; preds = %loop-header39
  br label %loop-merge48

post-loop-break41:                                ; No predecessors!
  unreachable

ifmerge42:                                        ; preds = %loop-header39
  %51 = load <4 x float> addrspace(2)* @bigColor1_3, !gla.uniform !10
  %52 = load <4 x float>* %color
  %color43 = fadd <4 x float> %52, %51
  store <4 x float> %color43, <4 x float>* %color
  %53 = load <4 x float>* %color
  %54 = extractelement <4 x float> %53, i32 1
  %55 = load float addrspace(2)* @d4, !gla.uniform !11
  %56 = fcmp olt float %54, %55
  br i1 %56, label %then44, label %ifmerge46

then44:                                           ; preds = %ifmerge42
  br label %loop-merge48

post-loop-break45:                                ; No predecessors!
  unreachable

ifmerge46:                                        ; preds = %ifmerge42
  %57 = load <4 x float> addrspace(2)* @bigColor1_3, !gla.uniform !10
  %58 = load <4 x float>* %color
  %color47 = fadd <4 x float> %58, %57
  store <4 x float> %color47, <4 x float>* %color
  br label %loop-header39

loop-merge48:                                     ; preds = %then44, %then40
  store i32 0, i32* %i
  br label %loop-header49

loop-header49:                                    ; preds = %ifmerge52, %loop-merge48
  %59 = load i32* %i
  %60 = load i32 addrspace(2)* @Count, !gla.uniform !12
  %61 = icmp slt i32 %59, %60
  %62 = xor i1 %61, true
  br i1 %62, label %then50, label %ifmerge52

then50:                                           ; preds = %loop-header49
  br label %loop-merge55

post-loop-break51:                                ; No predecessors!
  unreachable

ifmerge52:                                        ; preds = %loop-header49
  %63 = load <4 x float> addrspace(2)* @bigColor2, !gla.uniform !13
  %64 = load <4 x float>* %color
  %color53 = fadd <4 x float> %64, %63
  store <4 x float> %color53, <4 x float>* %color
  %65 = load i32* %i
  %i54 = add i32 %65, 1
  store i32 %i54, i32* %i
  br label %loop-header49

loop-merge55:                                     ; preds = %then50
  br label %loop-header56

loop-header56:                                    ; preds = %loop-merge55
  br label %loop-body

loop-body:                                        ; preds = %loop-test, %loop-header56
  %66 = load <4 x float> addrspace(2)* @bigColor3, !gla.uniform !14
  %67 = load <4 x float>* %color
  %color57 = fadd <4 x float> %67, %66
  store <4 x float> %color57, <4 x float>* %color
  br label %loop-test

loop-test:                                        ; preds = %loop-body
  %68 = load <4 x float>* %color
  %69 = extractelement <4 x float> %68, i32 0
  %70 = load float addrspace(2)* @d2, !gla.uniform !7
  %71 = fcmp olt float %69, %70
  br i1 %71, label %loop-body, label %loop-merge58

loop-merge58:                                     ; preds = %loop-test
  store i32 0, i32* %i59
  br label %loop-header60

loop-header60:                                    ; preds = %ifmerge63, %loop-merge58
  %72 = load i32* %i59
  %73 = icmp slt i32 %72, 42
  %74 = xor i1 %73, true
  br i1 %74, label %then61, label %ifmerge63

then61:                                           ; preds = %loop-header60
  br label %loop-merge66

post-loop-break62:                                ; No predecessors!
  unreachable

ifmerge63:                                        ; preds = %loop-header60
  %75 = load float addrspace(2)* @d3, !gla.uniform !8
  %76 = load <4 x float>* %color
  %77 = extractelement <4 x float> %76, i32 2
  %78 = fadd float %77, %75
  %79 = load <4 x float>* %color
  %color64 = insertelement <4 x float> %79, float %78, i32 2
  store <4 x float> %color64, <4 x float>* %color
  %80 = load i32* %i59
  %i5965 = add i32 %80, 1
  store i32 %i5965, i32* %i59
  br label %loop-header60

loop-merge66:                                     ; preds = %then61
  store i32 0, i32* %i67
  br label %loop-header68

loop-header68:                                    ; preds = %ifmerge79, %loop-merge66
  %81 = load i32* %i67
  %82 = icmp slt i32 %81, 100
  %83 = xor i1 %82, true
  br i1 %83, label %then69, label %ifmerge71

then69:                                           ; preds = %loop-header68
  br label %loop-merge81

post-loop-break70:                                ; No predecessors!
  unreachable

ifmerge71:                                        ; preds = %loop-header68
  %84 = load <4 x float>* %color
  %85 = extractelement <4 x float> %84, i32 2
  %86 = fcmp olt float %85, 2.000000e+01
  br i1 %86, label %then72, label %else

then72:                                           ; preds = %ifmerge71
  %87 = load <4 x float>* %color
  %88 = extractelement <4 x float> %87, i32 0
  %89 = fadd float %88, 1.000000e+00
  %90 = load <4 x float>* %color
  %color73 = insertelement <4 x float> %90, float %89, i32 0
  store <4 x float> %color73, <4 x float>* %color
  br label %ifmerge75

else:                                             ; preds = %ifmerge71
  %91 = load <4 x float>* %color
  %92 = extractelement <4 x float> %91, i32 1
  %93 = fadd float %92, 1.000000e+00
  %94 = load <4 x float>* %color
  %color74 = insertelement <4 x float> %94, float %93, i32 1
  store <4 x float> %color74, <4 x float>* %color
  br label %ifmerge75

ifmerge75:                                        ; preds = %else, %then72
  %95 = load <4 x float>* %color
  %96 = extractelement <4 x float> %95, i32 3
  %97 = fcmp olt float %96, 2.000000e+01
  br i1 %97, label %then76, label %ifmerge79

then76:                                           ; preds = %ifmerge75
  %98 = load <4 x float>* %color
  %99 = extractelement <4 x float> %98, i32 2
  %100 = load <4 x float>* %color
  %101 = extractelement <4 x float> %100, i32 1
  %102 = fcmp ogt float %99, %101
  br i1 %102, label %then77, label %ifmerge78

then77:                                           ; preds = %then76
  br label %ifmerge78

ifmerge78:                                        ; preds = %then76, %then77
  br label %ifmerge79

ifmerge79:                                        ; preds = %ifmerge75, %ifmerge78
  %103 = load i32* %i67
  %i6780 = add i32 %103, 1
  store i32 %i6780, i32* %i67
  br label %loop-header68

loop-merge81:                                     ; preds = %then69
  store i32 0, i32* %i82
  br label %loop-header83

loop-header83:                                    ; preds = %ifmerge91, %loop-merge81
  %104 = load i32* %i82
  %105 = icmp slt i32 %104, 120
  %106 = xor i1 %105, true
  br i1 %106, label %then84, label %ifmerge86

then84:                                           ; preds = %loop-header83
  br label %loop-merge93

post-loop-break85:                                ; No predecessors!
  unreachable

ifmerge86:                                        ; preds = %loop-header83
  %107 = load <4 x float>* %color
  %108 = extractelement <4 x float> %107, i32 2
  %109 = fcmp olt float %108, 2.000000e+01
  br i1 %109, label %then87, label %else89

then87:                                           ; preds = %ifmerge86
  %110 = load <4 x float>* %color
  %111 = extractelement <4 x float> %110, i32 0
  %112 = fadd float %111, 1.000000e+00
  %113 = load <4 x float>* %color
  %color88 = insertelement <4 x float> %113, float %112, i32 0
  store <4 x float> %color88, <4 x float>* %color
  br label %ifmerge91

else89:                                           ; preds = %ifmerge86
  %114 = load <4 x float>* %color
  %115 = extractelement <4 x float> %114, i32 1
  %116 = fadd float %115, 1.000000e+00
  %117 = load <4 x float>* %color
  %color90 = insertelement <4 x float> %117, float %116, i32 1
  store <4 x float> %color90, <4 x float>* %color
  br label %ifmerge91

ifmerge91:                                        ; preds = %else89, %then87
  %118 = load i32* %i82
  %i8292 = add i32 %118, 1
  store i32 %i8292, i32* %i82
  br label %loop-header83

loop-merge93:                                     ; preds = %then84
  store i32 0, i32* %i94
  br label %loop-header95

loop-header95:                                    ; preds = %ifmerge103, %then100, %loop-merge93
  %119 = load i32* %i94
  %120 = icmp slt i32 %119, 42
  %121 = xor i1 %120, true
  br i1 %121, label %then96, label %ifmerge98

then96:                                           ; preds = %loop-header95
  br label %loop-merge106

post-loop-break97:                                ; No predecessors!
  unreachable

ifmerge98:                                        ; preds = %loop-header95
  %122 = load float addrspace(2)* @d3, !gla.uniform !8
  %123 = load <4 x float>* %color
  %124 = extractelement <4 x float> %123, i32 2
  %125 = fadd float %124, %122
  %126 = load <4 x float>* %color
  %color99 = insertelement <4 x float> %126, float %125, i32 2
  store <4 x float> %color99, <4 x float>* %color
  %127 = load <4 x float>* %color
  %128 = extractelement <4 x float> %127, i32 0
  %129 = load float addrspace(2)* @d4, !gla.uniform !11
  %130 = fcmp olt float %128, %129
  br i1 %130, label %then100, label %ifmerge103

then100:                                          ; preds = %ifmerge98
  %131 = load i32* %i94
  %i94101 = add i32 %131, 1
  store i32 %i94101, i32* %i94
  br label %loop-header95

post-loop-continue102:                            ; No predecessors!
  unreachable

ifmerge103:                                       ; preds = %ifmerge98
  %132 = load <4 x float>* %color
  %133 = extractelement <4 x float> %132, i32 3
  %134 = fadd float %133, 1.000000e+00
  %135 = load <4 x float>* %color
  %color104 = insertelement <4 x float> %135, float %134, i32 3
  store <4 x float> %color104, <4 x float>* %color
  %136 = load i32* %i94
  %i94105 = add i32 %136, 1
  store i32 %i94105, i32* %i94
  br label %loop-header95

loop-merge106:                                    ; preds = %then96
  store i32 0, i32* %i107
  br label %loop-header108

loop-header108:                                   ; preds = %ifmerge115, %loop-merge106
  %137 = load i32* %i107
  %138 = icmp slt i32 %137, 42
  %139 = xor i1 %138, true
  br i1 %139, label %then109, label %ifmerge111

then109:                                          ; preds = %loop-header108
  br label %loop-merge118

post-loop-break110:                               ; No predecessors!
  unreachable

ifmerge111:                                       ; preds = %loop-header108
  %140 = load float addrspace(2)* @d3, !gla.uniform !8
  %141 = load <4 x float>* %color
  %142 = extractelement <4 x float> %141, i32 2
  %143 = fadd float %142, %140
  %144 = load <4 x float>* %color
  %color112 = insertelement <4 x float> %144, float %143, i32 2
  store <4 x float> %color112, <4 x float>* %color
  %145 = load <4 x float>* %color
  %146 = extractelement <4 x float> %145, i32 0
  %147 = load float addrspace(2)* @d4, !gla.uniform !11
  %148 = fcmp olt float %146, %147
  br i1 %148, label %then113, label %ifmerge115

then113:                                          ; preds = %ifmerge111
  br label %loop-merge118

post-loop-break114:                               ; No predecessors!
  unreachable

ifmerge115:                                       ; preds = %ifmerge111
  %149 = load <4 x float>* %color
  %150 = extractelement <4 x float> %149, i32 3
  %151 = fadd float %150, 1.000000e+00
  %152 = load <4 x float>* %color
  %color116 = insertelement <4 x float> %152, float %151, i32 3
  store <4 x float> %color116, <4 x float>* %color
  %153 = load i32* %i107
  %i107117 = add i32 %153, 1
  store i32 %i107117, i32* %i107
  br label %loop-header108

loop-merge118:                                    ; preds = %then113, %then109
  br label %loop-header119

loop-header119:                                   ; preds = %loop-merge118
  br label %loop-body120

loop-body120:                                     ; preds = %loop-test130, %loop-header119
  %154 = load <4 x float> addrspace(2)* @bigColor4, !gla.uniform !15
  %155 = load <4 x float>* %color
  %color121 = fadd <4 x float> %155, %154
  store <4 x float> %color121, <4 x float>* %color
  %156 = load <4 x float>* %color
  %157 = extractelement <4 x float> %156, i32 0
  %158 = load float addrspace(2)* @d4, !gla.uniform !11
  %159 = fcmp olt float %157, %158
  br i1 %159, label %then122, label %ifmerge124

then122:                                          ; preds = %loop-body120
  br label %loop-test130

post-loop-continue123:                            ; No predecessors!
  unreachable

ifmerge124:                                       ; preds = %loop-body120
  %160 = load <4 x float>* %color
  %161 = extractelement <4 x float> %160, i32 1
  %162 = load float addrspace(2)* @d4, !gla.uniform !11
  %163 = fcmp olt float %161, %162
  br i1 %163, label %then125, label %else127

then125:                                          ; preds = %ifmerge124
  %164 = load float addrspace(2)* @d4, !gla.uniform !11
  %165 = load <4 x float>* %color
  %166 = extractelement <4 x float> %165, i32 1
  %167 = fadd float %166, %164
  %168 = load <4 x float>* %color
  %color126 = insertelement <4 x float> %168, float %167, i32 1
  store <4 x float> %color126, <4 x float>* %color
  br label %ifmerge129

else127:                                          ; preds = %ifmerge124
  %169 = load float addrspace(2)* @d4, !gla.uniform !11
  %170 = load <4 x float>* %color
  %171 = extractelement <4 x float> %170, i32 0
  %172 = fadd float %171, %169
  %173 = load <4 x float>* %color
  %color128 = insertelement <4 x float> %173, float %172, i32 0
  store <4 x float> %color128, <4 x float>* %color
  br label %ifmerge129

ifmerge129:                                       ; preds = %else127, %then125
  br label %loop-test130

loop-test130:                                     ; preds = %ifmerge129, %then122
  %174 = load <4 x float>* %color
  %175 = extractelement <4 x float> %174, i32 2
  %176 = load float addrspace(2)* @d4, !gla.uniform !11
  %177 = fcmp olt float %175, %176
  br i1 %177, label %loop-body120, label %loop-merge131

loop-merge131:                                    ; preds = %loop-test130
  br label %loop-header132

loop-header132:                                   ; preds = %loop-merge131
  br label %loop-body133

loop-body133:                                     ; preds = %loop-test138, %loop-header132
  %178 = load <4 x float> addrspace(2)* @bigColor5, !gla.uniform !16
  %179 = load <4 x float>* %color
  %color134 = fadd <4 x float> %179, %178
  store <4 x float> %color134, <4 x float>* %color
  %180 = load <4 x float>* %color
  %181 = extractelement <4 x float> %180, i32 1
  %182 = load float addrspace(2)* @d5, !gla.uniform !17
  %183 = fcmp olt float %181, %182
  br i1 %183, label %then135, label %ifmerge137

then135:                                          ; preds = %loop-body133
  %184 = load float addrspace(2)* @d5, !gla.uniform !17
  %185 = load <4 x float>* %color
  %186 = extractelement <4 x float> %185, i32 1
  %187 = fadd float %186, %184
  %188 = load <4 x float>* %color
  %color136 = insertelement <4 x float> %188, float %187, i32 1
  store <4 x float> %color136, <4 x float>* %color
  br label %ifmerge137

ifmerge137:                                       ; preds = %loop-body133, %then135
  br label %loop-test138

loop-test138:                                     ; preds = %ifmerge137
  %189 = load <4 x float>* %color
  %190 = extractelement <4 x float> %189, i32 0
  %191 = load float addrspace(2)* @d5, !gla.uniform !17
  %192 = fcmp olt float %190, %191
  br i1 %192, label %loop-body133, label %loop-merge139

loop-merge139:                                    ; preds = %loop-test138
  %193 = load <4 x float>* %color
  %194 = extractelement <4 x float> %193, i32 0
  %195 = load float addrspace(2)* @d6, !gla.uniform !18
  %196 = fcmp olt float %194, %195
  br i1 %196, label %then140, label %else147

then140:                                          ; preds = %loop-merge139
  br label %loop-header141

loop-header141:                                   ; preds = %ifmerge144, %then140
  %197 = load <4 x float>* %color
  %198 = extractelement <4 x float> %197, i32 1
  %199 = load float addrspace(2)* @d6, !gla.uniform !18
  %200 = fcmp olt float %198, %199
  %201 = xor i1 %200, true
  br i1 %201, label %then142, label %ifmerge144

then142:                                          ; preds = %loop-header141
  br label %loop-merge146

post-loop-break143:                               ; No predecessors!
  unreachable

ifmerge144:                                       ; preds = %loop-header141
  %202 = load <4 x float> addrspace(2)* @bigColor6, !gla.uniform !19
  %203 = load <4 x float>* %color
  %color145 = fadd <4 x float> %203, %202
  store <4 x float> %color145, <4 x float>* %color
  br label %loop-header141

loop-merge146:                                    ; preds = %then142
  br label %ifmerge154

else147:                                          ; preds = %loop-merge139
  br label %loop-header148

loop-header148:                                   ; preds = %ifmerge151, %else147
  %204 = load <4 x float>* %color
  %205 = extractelement <4 x float> %204, i32 2
  %206 = load float addrspace(2)* @d6, !gla.uniform !18
  %207 = fcmp olt float %205, %206
  %208 = xor i1 %207, true
  br i1 %208, label %then149, label %ifmerge151

then149:                                          ; preds = %loop-header148
  br label %loop-merge153

post-loop-break150:                               ; No predecessors!
  unreachable

ifmerge151:                                       ; preds = %loop-header148
  %209 = load <4 x float> addrspace(2)* @bigColor6, !gla.uniform !19
  %210 = extractelement <4 x float> %209, i32 2
  %211 = load <4 x float>* %color
  %212 = extractelement <4 x float> %211, i32 2
  %213 = fadd float %212, %210
  %214 = load <4 x float>* %color
  %color152 = insertelement <4 x float> %214, float %213, i32 2
  store <4 x float> %color152, <4 x float>* %color
  br label %loop-header148

loop-merge153:                                    ; preds = %then149
  br label %ifmerge154

ifmerge154:                                       ; preds = %loop-merge153, %loop-merge146
  %215 = load <4 x float>* %color
  %216 = extractelement <4 x float> %215, i32 0
  %217 = load float addrspace(2)* @d6, !gla.uniform !18
  %218 = fcmp olt float %216, %217
  br i1 %218, label %then155, label %else165

then155:                                          ; preds = %ifmerge154
  br label %loop-header156

loop-header156:                                   ; preds = %ifmerge163, %then155
  %219 = load <4 x float>* %color
  %220 = extractelement <4 x float> %219, i32 1
  %221 = load float addrspace(2)* @d6, !gla.uniform !18
  %222 = fcmp olt float %220, %221
  %223 = xor i1 %222, true
  br i1 %223, label %then157, label %ifmerge159

then157:                                          ; preds = %loop-header156
  br label %loop-merge164

post-loop-break158:                               ; No predecessors!
  unreachable

ifmerge159:                                       ; preds = %loop-header156
  %224 = load <4 x float> addrspace(2)* @bigColor6, !gla.uniform !19
  %225 = load <4 x float>* %color
  %color160 = fadd <4 x float> %225, %224
  store <4 x float> %color160, <4 x float>* %color
  %226 = load float addrspace(2)* @d7, !gla.uniform !20
  %227 = fcmp olt float %226, 1.000000e+00
  br i1 %227, label %then161, label %ifmerge163

then161:                                          ; preds = %ifmerge159
  br label %loop-merge164

post-loop-break162:                               ; No predecessors!
  unreachable

ifmerge163:                                       ; preds = %ifmerge159
  br label %loop-header156

loop-merge164:                                    ; preds = %then161, %then157
  br label %ifmerge172

else165:                                          ; preds = %ifmerge154
  br label %loop-header166

loop-header166:                                   ; preds = %ifmerge169, %else165
  %228 = load <4 x float>* %color
  %229 = extractelement <4 x float> %228, i32 2
  %230 = load float addrspace(2)* @d6, !gla.uniform !18
  %231 = fcmp olt float %229, %230
  %232 = xor i1 %231, true
  br i1 %232, label %then167, label %ifmerge169

then167:                                          ; preds = %loop-header166
  br label %loop-merge171

post-loop-break168:                               ; No predecessors!
  unreachable

ifmerge169:                                       ; preds = %loop-header166
  %233 = load <4 x float> addrspace(2)* @bigColor6, !gla.uniform !19
  %234 = extractelement <4 x float> %233, i32 2
  %235 = load <4 x float>* %color
  %236 = extractelement <4 x float> %235, i32 2
  %237 = fadd float %236, %234
  %238 = load <4 x float>* %color
  %color170 = insertelement <4 x float> %238, float %237, i32 2
  store <4 x float> %color170, <4 x float>* %color
  br label %loop-header166

loop-merge171:                                    ; preds = %then167
  br label %ifmerge172

ifmerge172:                                       ; preds = %loop-merge171, %loop-merge164
  br label %loop-header173

loop-header173:                                   ; preds = %ifmerge172
  br label %loop-body174

loop-body174:                                     ; preds = %loop-test184, %loop-header173
  %239 = load float addrspace(2)* @d7, !gla.uniform !20
  %240 = fcmp olt float %239, 0.000000e+00
  br i1 %240, label %then175, label %ifmerge177

then175:                                          ; preds = %loop-body174
  br label %loop-merge185

post-loop-break176:                               ; No predecessors!
  unreachable

ifmerge177:                                       ; preds = %loop-body174
  %241 = load <4 x float> addrspace(2)* @bigColor7, !gla.uniform !21
  %242 = load <4 x float>* %color
  %color178 = fadd <4 x float> %242, %241
  store <4 x float> %color178, <4 x float>* %color
  %243 = load float addrspace(2)* @d7, !gla.uniform !20
  %244 = fcmp olt float %243, 1.000000e+00
  br i1 %244, label %then179, label %ifmerge182

then179:                                          ; preds = %ifmerge177
  %245 = load <4 x float>* %color
  %246 = extractelement <4 x float> %245, i32 2
  %247 = fadd float %246, 1.000000e+00
  %248 = load <4 x float>* %color
  %color180 = insertelement <4 x float> %248, float %247, i32 2
  store <4 x float> %color180, <4 x float>* %color
  br label %loop-merge185

post-loop-break181:                               ; No predecessors!
  unreachable

ifmerge182:                                       ; preds = %ifmerge177
  %249 = load <4 x float>* @BaseColor
  %250 = load <4 x float>* %color
  %color183 = fadd <4 x float> %250, %249
  store <4 x float> %color183, <4 x float>* %color
  br label %loop-test184

loop-test184:                                     ; preds = %ifmerge182
  br i1 true, label %loop-body174, label %loop-merge185

loop-merge185:                                    ; preds = %loop-test184, %then179, %then175
  br label %loop-header186

loop-header186:                                   ; preds = %loop-merge185
  br label %loop-body187

loop-body187:                                     ; preds = %loop-test202, %loop-header186
  %251 = load float addrspace(2)* @d8, !gla.uniform !22
  %252 = fcmp olt float %251, 0.000000e+00
  br i1 %252, label %then188, label %ifmerge190

then188:                                          ; preds = %loop-body187
  br label %loop-merge203

post-loop-break189:                               ; No predecessors!
  unreachable

ifmerge190:                                       ; preds = %loop-body187
  %253 = load <4 x float> addrspace(2)* @bigColor7, !gla.uniform !21
  %254 = load <4 x float>* %color
  %color191 = fadd <4 x float> %254, %253
  store <4 x float> %color191, <4 x float>* %color
  %255 = load float addrspace(2)* @d8, !gla.uniform !22
  %256 = fcmp olt float %255, 1.000000e+00
  br i1 %256, label %then192, label %ifmerge200

then192:                                          ; preds = %ifmerge190
  %257 = load <4 x float>* %color
  %258 = extractelement <4 x float> %257, i32 2
  %259 = fadd float %258, 1.000000e+00
  %260 = load <4 x float>* %color
  %color193 = insertelement <4 x float> %260, float %259, i32 2
  store <4 x float> %color193, <4 x float>* %color
  %261 = load float addrspace(2)* @d8, !gla.uniform !22
  %262 = fcmp olt float %261, 2.000000e+00
  br i1 %262, label %then194, label %else196

then194:                                          ; preds = %then192
  %263 = load <4 x float>* %color
  %264 = extractelement <4 x float> %263, i32 1
  %265 = fadd float %264, 1.000000e+00
  %266 = load <4 x float>* %color
  %color195 = insertelement <4 x float> %266, float %265, i32 1
  store <4 x float> %color195, <4 x float>* %color
  br label %ifmerge198

else196:                                          ; preds = %then192
  %267 = load <4 x float>* %color
  %268 = extractelement <4 x float> %267, i32 0
  %269 = fadd float %268, 1.000000e+00
  %270 = load <4 x float>* %color
  %color197 = insertelement <4 x float> %270, float %269, i32 0
  store <4 x float> %color197, <4 x float>* %color
  br label %ifmerge198

ifmerge198:                                       ; preds = %else196, %then194
  br label %loop-merge203

post-loop-break199:                               ; No predecessors!
  unreachable

ifmerge200:                                       ; preds = %ifmerge190
  %271 = load <4 x float>* @BaseColor
  %272 = load <4 x float>* %color
  %color201 = fadd <4 x float> %272, %271
  store <4 x float> %color201, <4 x float>* %color
  br label %loop-test202

loop-test202:                                     ; preds = %ifmerge200
  %273 = load <4 x float>* %color
  %274 = extractelement <4 x float> %273, i32 2
  %275 = load float addrspace(2)* @d8, !gla.uniform !22
  %276 = fcmp olt float %274, %275
  br i1 %276, label %loop-body187, label %loop-merge203

loop-merge203:                                    ; preds = %loop-test202, %ifmerge198, %then188
  br label %loop-header204

loop-header204:                                   ; preds = %ifmerge216, %loop-merge203
  %277 = load <4 x float>* %color
  %278 = extractelement <4 x float> %277, i32 3
  %279 = load float addrspace(2)* @d9, !gla.uniform !23
  %280 = fcmp olt float %278, %279
  %281 = xor i1 %280, true
  br i1 %281, label %then205, label %ifmerge207

then205:                                          ; preds = %loop-header204
  br label %loop-merge217

post-loop-break206:                               ; No predecessors!
  unreachable

ifmerge207:                                       ; preds = %loop-header204
  %282 = load float addrspace(2)* @d9, !gla.uniform !23
  %283 = load float addrspace(2)* @d8, !gla.uniform !22
  %284 = fcmp ogt float %282, %283
  br i1 %284, label %then208, label %ifmerge216

then208:                                          ; preds = %ifmerge207
  %285 = load <4 x float>* %color
  %286 = extractelement <4 x float> %285, i32 0
  %287 = load float addrspace(2)* @d7, !gla.uniform !20
  %288 = fcmp ole float %286, %287
  br i1 %288, label %then209, label %ifmerge215

then209:                                          ; preds = %then208
  %289 = load <4 x float>* %color
  %290 = extractelement <4 x float> %289, i32 2
  %291 = fcmp oeq float %290, 5.000000e+00
  br i1 %291, label %then210, label %else212

then210:                                          ; preds = %then209
  %292 = load <4 x float>* %color
  %293 = extractelement <4 x float> %292, i32 3
  %294 = fadd float %293, 1.000000e+00
  %295 = load <4 x float>* %color
  %color211 = insertelement <4 x float> %295, float %294, i32 3
  store <4 x float> %color211, <4 x float>* %color
  br label %ifmerge214

else212:                                          ; preds = %then209
  br label %loop-merge217

post-loop-break213:                               ; No predecessors!
  unreachable

ifmerge214:                                       ; preds = %then210
  br label %ifmerge215

ifmerge215:                                       ; preds = %then208, %ifmerge214
  br label %ifmerge216

ifmerge216:                                       ; preds = %ifmerge207, %ifmerge215
  br label %loop-header204

loop-merge217:                                    ; preds = %else212, %then205
  br label %loop-header218

loop-header218:                                   ; preds = %ifmerge229, %loop-merge217
  %296 = load <4 x float>* %color
  %297 = extractelement <4 x float> %296, i32 2
  %298 = load float addrspace(2)* @d10, !gla.uniform !24
  %299 = fcmp olt float %297, %298
  %300 = xor i1 %299, true
  br i1 %300, label %then219, label %ifmerge221

then219:                                          ; preds = %loop-header218
  br label %loop-merge234

post-loop-break220:                               ; No predecessors!
  unreachable

ifmerge221:                                       ; preds = %loop-header218
  %301 = load <4 x float>* %color
  %302 = extractelement <4 x float> %301, i32 1
  %303 = fadd float %302, 1.000000e+00
  %304 = load <4 x float>* %color
  %color222 = insertelement <4 x float> %304, float %303, i32 1
  store <4 x float> %color222, <4 x float>* %color
  %305 = load <4 x float>* %color
  %306 = extractelement <4 x float> %305, i32 1
  %307 = load float addrspace(2)* @d11, !gla.uniform !25
  %308 = fcmp olt float %306, %307
  br i1 %308, label %then223, label %ifmerge231

then223:                                          ; preds = %ifmerge221
  %309 = load <4 x float>* %color
  %310 = extractelement <4 x float> %309, i32 2
  %311 = fadd float %310, 1.000000e+00
  %312 = load <4 x float>* %color
  %color224 = insertelement <4 x float> %312, float %311, i32 2
  store <4 x float> %color224, <4 x float>* %color
  %313 = load <4 x float>* %color
  %314 = extractelement <4 x float> %313, i32 3
  %315 = load float addrspace(2)* @d12, !gla.uniform !26
  %316 = fcmp olt float %314, %315
  br i1 %316, label %then225, label %else227

then225:                                          ; preds = %then223
  %317 = load <4 x float>* %color
  %318 = extractelement <4 x float> %317, i32 3
  %319 = fadd float %318, 1.000000e+00
  %320 = load <4 x float>* %color
  %color226 = insertelement <4 x float> %320, float %319, i32 3
  store <4 x float> %color226, <4 x float>* %color
  br label %ifmerge229

else227:                                          ; preds = %then223
  %321 = load <4 x float>* %color
  %322 = extractelement <4 x float> %321, i32 0
  %323 = fadd float %322, 1.000000e+00
  %324 = load <4 x float>* %color
  %color228 = insertelement <4 x float> %324, float %323, i32 0
  store <4 x float> %color228, <4 x float>* %color
  br label %ifmerge229

ifmerge229:                                       ; preds = %else227, %then225
  br label %loop-header218

post-loop-continue230:                            ; No predecessors!
  unreachable

ifmerge231:                                       ; preds = %ifmerge221
  %325 = load <4 x float>* %color
  %color232 = fadd <4 x float> %325, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color232, <4 x float>* %color
  br label %loop-merge234

post-loop-break233:                               ; No predecessors!
  unreachable

loop-merge234:                                    ; preds = %ifmerge231, %then219
  br label %loop-header235

loop-header235:                                   ; preds = %ifmerge244, %then241, %loop-merge234
  %326 = load <4 x float>* %color
  %327 = extractelement <4 x float> %326, i32 0
  %328 = fcmp olt float %327, 1.000000e+01
  %329 = xor i1 %328, true
  br i1 %329, label %then236, label %ifmerge238

then236:                                          ; preds = %loop-header235
  br label %loop-merge246

post-loop-break237:                               ; No predecessors!
  unreachable

ifmerge238:                                       ; preds = %loop-header235
  %330 = load <4 x float> addrspace(2)* @bigColor8, !gla.uniform !27
  %331 = load <4 x float>* %color
  %color239 = fadd <4 x float> %331, %330
  store <4 x float> %color239, <4 x float>* %color
  %332 = load <4 x float>* %color
  %333 = extractelement <4 x float> %332, i32 2
  %334 = load float addrspace(2)* @d8, !gla.uniform !22
  %335 = fcmp olt float %333, %334
  br i1 %335, label %then240, label %ifmerge244

then240:                                          ; preds = %ifmerge238
  %336 = load <4 x float>* %color
  %337 = extractelement <4 x float> %336, i32 3
  %338 = load float addrspace(2)* @d6, !gla.uniform !18
  %339 = fcmp olt float %337, %338
  br i1 %339, label %then241, label %ifmerge243

then241:                                          ; preds = %then240
  br label %loop-header235

post-loop-continue242:                            ; No predecessors!
  unreachable

ifmerge243:                                       ; preds = %then240
  br label %ifmerge244

ifmerge244:                                       ; preds = %ifmerge238, %ifmerge243
  %340 = load <4 x float> addrspace(2)* @bigColor8, !gla.uniform !27
  %341 = extractelement <4 x float> %340, i32 0
  %342 = load <4 x float>* %color
  %343 = extractelement <4 x float> %342, i32 1
  %344 = fadd float %343, %341
  %345 = load <4 x float>* %color
  %color245 = insertelement <4 x float> %345, float %344, i32 1
  store <4 x float> %color245, <4 x float>* %color
  br label %loop-header235

loop-merge246:                                    ; preds = %then236
  %346 = load <4 x float>* %color
  %color247 = fadd <4 x float> %346, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color247, <4 x float>* %color
  %gl_FragColor = load <4 x float>* %color
  store <4 x float> %gl_FragColor, <4 x float>* @gl_FragColor
  br label %loop-header248

loop-header248:                                   ; preds = %ifmerge255, %loop-merge246
  %347 = load <4 x float>* %color
  %348 = extractelement <4 x float> %347, i32 0
  %349 = load float addrspace(2)* @d14, !gla.uniform !28
  %350 = fcmp olt float %348, %349
  %351 = xor i1 %350, true
  br i1 %351, label %then249, label %ifmerge251

then249:                                          ; preds = %loop-header248
  br label %loop-merge256

post-loop-break250:                               ; No predecessors!
  unreachable

ifmerge251:                                       ; preds = %loop-header248
  %352 = load <4 x float>* %color
  %353 = extractelement <4 x float> %352, i32 1
  %354 = load float addrspace(2)* @d15, !gla.uniform !29
  %355 = fcmp olt float %353, %354
  br i1 %355, label %then252, label %else253

then252:                                          ; preds = %ifmerge251
  br label %stage-epilogue

post-return:                                      ; No predecessors!
  unreachable

else253:                                          ; preds = %ifmerge251
  %356 = load <4 x float>* %color
  %color254 = fadd <4 x float> %356, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color254, <4 x float>* %color
  br label %ifmerge255

ifmerge255:                                       ; preds = %else253
  br label %loop-header248

loop-merge256:                                    ; preds = %then249
  %357 = load <4 x float>* %color
  %color257 = fadd <4 x float> %357, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color257, <4 x float>* %color
  br label %loop-header258

loop-header258:                                   ; preds = %ifmerge261, %loop-merge256
  %358 = load <4 x float>* %color
  %359 = extractelement <4 x float> %358, i32 3
  %360 = load float addrspace(2)* @d16, !gla.uniform !30
  %361 = fcmp olt float %359, %360
  %362 = xor i1 %361, true
  br i1 %362, label %then259, label %ifmerge261

then259:                                          ; preds = %loop-header258
  br label %loop-merge263

post-loop-break260:                               ; No predecessors!
  unreachable

ifmerge261:                                       ; preds = %loop-header258
  %363 = load <4 x float>* %color
  %364 = extractelement <4 x float> %363, i32 3
  %365 = fadd float %364, 1.000000e+00
  %366 = load <4 x float>* %color
  %color262 = insertelement <4 x float> %366, float %365, i32 3
  store <4 x float> %color262, <4 x float>* %color
  br label %loop-header258

loop-merge263:                                    ; preds = %then259
  br label %loop-header264

loop-header264:                                   ; preds = %ifmerge271, %loop-merge263
  %367 = load <4 x float>* %color
  %368 = extractelement <4 x float> %367, i32 3
  %369 = load float addrspace(2)* @d2, !gla.uniform !7
  %370 = fcmp olt float %368, %369
  %371 = load <4 x float>* %color
  %372 = extractelement <4 x float> %371, i32 1
  %373 = load float addrspace(2)* @d3, !gla.uniform !8
  %374 = fcmp olt float %372, %373
  %375 = and i1 %370, %374
  %376 = xor i1 %375, true
  br i1 %376, label %then265, label %ifmerge267

then265:                                          ; preds = %loop-header264
  br label %loop-merge272

post-loop-break266:                               ; No predecessors!
  unreachable

ifmerge267:                                       ; preds = %loop-header264
  %377 = load <4 x float> addrspace(2)* @bigColor1_2, !gla.uniform !9
  %378 = load <4 x float>* %color
  %color268 = fadd <4 x float> %378, %377
  store <4 x float> %color268, <4 x float>* %color
  %379 = load <4 x float>* %color
  %380 = extractelement <4 x float> %379, i32 2
  %381 = load float addrspace(2)* @d3, !gla.uniform !8
  %382 = fcmp olt float %380, %381
  br i1 %382, label %then269, label %ifmerge271

then269:                                          ; preds = %ifmerge267
  br label %stage-epilogue

post-return270:                                   ; No predecessors!
  unreachable

ifmerge271:                                       ; preds = %ifmerge267
  br label %loop-header264

loop-merge272:                                    ; preds = %then265
  br label %loop-header273

loop-header273:                                   ; preds = %loop-merge272
  br label %loop-body274

loop-body274:                                     ; preds = %loop-test279, %loop-header273
  %383 = load <4 x float>* %color
  %384 = extractelement <4 x float> %383, i32 1
  %385 = load float addrspace(2)* @d18, !gla.uniform !31
  %386 = fcmp olt float %384, %385
  br i1 %386, label %then275, label %ifmerge277

then275:                                          ; preds = %loop-body274
  br label %stage-epilogue

post-return276:                                   ; No predecessors!
  unreachable

ifmerge277:                                       ; preds = %loop-body274
  %387 = load <4 x float>* %color
  %color278 = fadd <4 x float> %387, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color278, <4 x float>* %color
  br label %loop-test279

loop-test279:                                     ; preds = %ifmerge277
  %388 = load <4 x float>* %color
  %389 = extractelement <4 x float> %388, i32 0
  %390 = load float addrspace(2)* @d17, !gla.uniform !32
  %391 = fcmp olt float %389, %390
  br i1 %391, label %loop-body274, label %loop-merge280

loop-merge280:                                    ; preds = %loop-test279
  br label %loop-header281

loop-header281:                                   ; preds = %ifmerge288, %loop-merge280
  %392 = load <4 x float>* %color
  %393 = extractelement <4 x float> %392, i32 1
  %394 = load float addrspace(2)* @d16, !gla.uniform !30
  %395 = fcmp olt float %393, %394
  %396 = xor i1 %395, true
  br i1 %396, label %then282, label %ifmerge284

then282:                                          ; preds = %loop-header281
  br label %loop-merge289

post-loop-break283:                               ; No predecessors!
  unreachable

ifmerge284:                                       ; preds = %loop-header281
  %397 = load <4 x float>* %color
  %398 = extractelement <4 x float> %397, i32 3
  %399 = load float addrspace(2)* @d16, !gla.uniform !30
  %400 = fcmp olt float %398, %399
  br i1 %400, label %then285, label %else286

then285:                                          ; preds = %ifmerge284
  call void @llvm.gla.discard()
  br label %stage-exit

post-discard:                                     ; No predecessors!
  unreachable

else286:                                          ; preds = %ifmerge284
  %401 = load <4 x float>* %color
  %color287 = fadd <4 x float> %401, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color287, <4 x float>* %color
  br label %ifmerge288

ifmerge288:                                       ; preds = %else286
  br label %loop-header281

loop-merge289:                                    ; preds = %then282
  %402 = load <4 x float>* %color
  %color290 = fadd <4 x float> %402, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color290, <4 x float>* %color
  %gl_FragColor291 = load <4 x float>* %color
  store <4 x float> %gl_FragColor291, <4 x float>* @gl_FragColor
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %loop-merge289, %then275, %then269, %then252
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue, %then285
  ret void
}

; Function Attrs: nounwind
declare void @llvm.gla.discard() #0

attributes #0 = { nounwind }

!gla.entrypoint = !{!0}
!gla.inputs = !{!1}
!gla.uniforms = !{!3, !5, !6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49}
!gla.outputs = !{!50}
!gla.noStaticUse = !{!33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49}

!0 = !{!"main", i32 15}
!1 = !{!"BaseColor", i32 1, <4 x float>* @BaseColor_typeProxy, !2}
!2 = !{i32 0, i32 0, i32 1024, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!3 = !{!"d", i32 12, float* @d_typeProxy, !4}
!4 = !{i32 0, i32 0, i32 1024, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!5 = !{!"bigColor", i32 12, <4 x float>* @bigColor_typeProxy, !4}
!6 = !{!"bigColor1_1", i32 12, <4 x float>* @bigColor1_1_typeProxy, !4}
!7 = !{!"d2", i32 12, float* @d2_typeProxy, !4}
!8 = !{!"d3", i32 12, float* @d3_typeProxy, !4}
!9 = !{!"bigColor1_2", i32 12, <4 x float>* @bigColor1_2_typeProxy, !4}
!10 = !{!"bigColor1_3", i32 12, <4 x float>* @bigColor1_3_typeProxy, !4}
!11 = !{!"d4", i32 12, float* @d4_typeProxy, !4}
!12 = !{!"Count", i32 12, i32* @Count_typeProxy, !4}
!13 = !{!"bigColor2", i32 12, <4 x float>* @bigColor2_typeProxy, !4}
!14 = !{!"bigColor3", i32 12, <4 x float>* @bigColor3_typeProxy, !4}
!15 = !{!"bigColor4", i32 12, <4 x float>* @bigColor4_typeProxy, !4}
!16 = !{!"bigColor5", i32 12, <4 x float>* @bigColor5_typeProxy, !4}
!17 = !{!"d5", i32 12, float* @d5_typeProxy, !4}
!18 = !{!"d6", i32 12, float* @d6_typeProxy, !4}
!19 = !{!"bigColor6", i32 12, <4 x float>* @bigColor6_typeProxy, !4}
!20 = !{!"d7", i32 12, float* @d7_typeProxy, !4}
!21 = !{!"bigColor7", i32 12, <4 x float>* @bigColor7_typeProxy, !4}
!22 = !{!"d8", i32 12, float* @d8_typeProxy, !4}
!23 = !{!"d9", i32 12, float* @d9_typeProxy, !4}
!24 = !{!"d10", i32 12, float* @d10_typeProxy, !4}
!25 = !{!"d11", i32 12, float* @d11_typeProxy, !4}
!26 = !{!"d12", i32 12, float* @d12_typeProxy, !4}
!27 = !{!"bigColor8", i32 12, <4 x float>* @bigColor8_typeProxy, !4}
!28 = !{!"d14", i32 12, float* @d14_typeProxy, !4}
!29 = !{!"d15", i32 12, float* @d15_typeProxy, !4}
!30 = !{!"d16", i32 12, float* @d16_typeProxy, !4}
!31 = !{!"d18", i32 12, float* @d18_typeProxy, !4}
!32 = !{!"d17", i32 12, float* @d17_typeProxy, !4}
!33 = !{!"d13", i32 12, float* @d13_typeProxy, !4}
!34 = !{!"d19", i32 12, float* @d19_typeProxy, !4}
!35 = !{!"d20", i32 12, float* @d20_typeProxy, !4}
!36 = !{!"d21", i32 12, float* @d21_typeProxy, !4}
!37 = !{!"d22", i32 12, float* @d22_typeProxy, !4}
!38 = !{!"d23", i32 12, float* @d23_typeProxy, !4}
!39 = !{!"d24", i32 12, float* @d24_typeProxy, !4}
!40 = !{!"d25", i32 12, float* @d25_typeProxy, !4}
!41 = !{!"d26", i32 12, float* @d26_typeProxy, !4}
!42 = !{!"d27", i32 12, float* @d27_typeProxy, !4}
!43 = !{!"d28", i32 12, float* @d28_typeProxy, !4}
!44 = !{!"d29", i32 12, float* @d29_typeProxy, !4}
!45 = !{!"d30", i32 12, float* @d30_typeProxy, !4}
!46 = !{!"d31", i32 12, float* @d31_typeProxy, !4}
!47 = !{!"d32", i32 12, float* @d32_typeProxy, !4}
!48 = !{!"d33", i32 12, float* @d33_typeProxy, !4}
!49 = !{!"d34", i32 12, float* @d34_typeProxy, !4}
!50 = !{!"gl_FragColor", i32 7, <4 x float>* @gl_FragColor_typeProxy, !51}
!51 = !{i32 0, i32 0, i32 1025, null, i32 0, i32 43, i32 -1, i32 0, i32 -1}
