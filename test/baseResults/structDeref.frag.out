
Top IR:
; ModuleID = 'Glslang'

%s3 = type { [12 x %s2], i32, float, %s1 }
%s2 = type { i32, float, %s1 }
%s1 = type { i32, float, %s0 }
%s0 = type { i32 }
%s00 = type { %s0 }

@foo3 = external addrspace(2) constant %s3
@locals2 = internal constant %s1 { i32 0, float 1.000000e+00, %s0 zeroinitializer }
@fArray = internal constant [6 x float] zeroinitializer
@foo1 = external addrspace(2) constant %s1
@locals0 = internal constant %s0 zeroinitializer
@locals00 = internal constant %s00 zeroinitializer
@coord = global <2 x float> zeroinitializer
@foo0 = external addrspace(2) constant %s0
@fArray1 = internal constant [6 x float] [float 0.000000e+00, float 1.000000e+00, float 2.000000e+00, float 3.000000e+00, float 4.000000e+00, float 5.000000e+00]
@foo00 = external addrspace(2) constant %s00
@gl_FragColor = global <4 x float> zeroinitializer
@sampler = external addrspace(1) constant i32
@foo2 = external addrspace(2) constant %s2

define fastcc void @main() {
entry:
  %locals24 = alloca %s1
  %locals00 = alloca %s00
  %locals0 = alloca %s0
  %locals1Array = alloca [10 x %s1]
  %fArray = alloca [6 x float]
  %locals2 = alloca %s2
  br label %mainBody

mainBody:                                         ; preds = %entry
  %0 = load i32 addrspace(2)* getelementptr inbounds (%s3 addrspace(2)* @foo3, i32 0, i32 0, i32 9, i32 0), !gla.uniform !1
  %1 = icmp sgt i32 %0, 0
  br i1 %1, label %then, label %else

then:                                             ; preds = %mainBody
  %2 = getelementptr %s2* %locals2, i32 0, i32 1
  store float 1.000000e+00, float* %2
  %3 = load %s1* @locals2
  %4 = getelementptr %s2* %locals2, i32 0, i32 2
  store %s1 %3, %s1* %4
  %fArray1 = load [6 x float]* @fArray
  store [6 x float] %fArray1, [6 x float]* %fArray
  %5 = load %s1 addrspace(2)* @foo1, !gla.uniform !9
  %6 = getelementptr [10 x %s1]* %locals1Array, i32 0, i32 6
  store %s1 %5, %s1* %6
  %locals02 = load %s0* @locals0
  store %s0 %locals02, %s0* %locals0
  %locals003 = load %s00* @locals00
  store %s00 %locals003, %s00* %locals00
  br label %ifmerge

else:                                             ; preds = %mainBody
  %7 = load <2 x float>* @coord
  %8 = extractelement <2 x float> %7, i32 0
  %9 = getelementptr %s2* %locals2, i32 0, i32 1
  store float %8, float* %9
  %10 = load <2 x float>* @coord
  %11 = extractelement <2 x float> %10, i32 1
  %12 = load %s0 addrspace(2)* @foo0, !gla.uniform !10
  %13 = getelementptr %s1* %locals24, i32 0, i32 0
  store i32 1, i32* %13
  %14 = getelementptr %s1* %locals24, i32 0, i32 1
  store float %11, float* %14
  %15 = getelementptr %s1* %locals24, i32 0, i32 2
  store %s0 %12, %s0* %15
  %16 = load %s1* %locals24
  %17 = getelementptr %s2* %locals2, i32 0, i32 2
  store %s1 %16, %s1* %17
  %fArray5 = load [6 x float]* @fArray1
  store [6 x float] %fArray5, [6 x float]* %fArray
  %18 = getelementptr %s2* %locals2, i32 0, i32 2
  %19 = load %s1* %18
  %20 = getelementptr [10 x %s1]* %locals1Array, i32 0, i32 6
  store %s1 %19, %s1* %20
  %locals06 = load %s0 addrspace(2)* getelementptr inbounds (%s1 addrspace(2)* @foo1, i32 0, i32 2), !gla.uniform !9
  store %s0 %locals06, %s0* %locals0
  %locals007 = load %s00 addrspace(2)* @foo00, !gla.uniform !11
  store %s00 %locals007, %s00* %locals00
  br label %ifmerge

ifmerge:                                          ; preds = %else, %then
  %21 = getelementptr %s0* %locals0, i32 0, i32 0
  %22 = load i32* %21
  %23 = icmp sgt i32 %22, 5
  br i1 %23, label %then8, label %ifmerge10

then8:                                            ; preds = %ifmerge
  %24 = getelementptr %s00* %locals00, i32 0, i32 0
  %locals09 = load %s0* %24
  store %s0 %locals09, %s0* %locals0
  br label %ifmerge10

ifmerge10:                                        ; preds = %ifmerge, %then8
  %25 = getelementptr %s0* %locals0, i32 0, i32 0
  %26 = load i32* %25
  %27 = sitofp i32 %26 to float
  %28 = getelementptr [10 x %s1]* %locals1Array, i32 0, i32 6, i32 1
  %29 = load float* %28
  %30 = fadd float %27, %29
  %31 = getelementptr [6 x float]* %fArray, i32 0, i32 3
  %32 = load float* %31
  %33 = fadd float %30, %32
  %34 = getelementptr %s2* %locals2, i32 0, i32 2, i32 1
  %35 = load float* %34
  %36 = fadd float %33, %35
  %37 = load i32 addrspace(1)* @sampler, !gla.uniform !13
  %38 = load <2 x float>* @coord
  %gl_FragColor = call <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32 2, i32 %37, i32 0, <2 x float> %38)
  %39 = insertelement <4 x float> undef, float %36, i32 0
  %40 = insertelement <4 x float> %39, float %36, i32 1
  %41 = insertelement <4 x float> %40, float %36, i32 2
  %42 = insertelement <4 x float> %41, float %36, i32 3
  %gl_FragColor11 = fmul <4 x float> %42, %gl_FragColor
  store <4 x float> %gl_FragColor11, <4 x float>* @gl_FragColor
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %ifmerge10
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSample.v4f32.v2f32(i32, i32, i32, <2 x float>) #0

attributes #0 = { nounwind readnone }

!gla.entrypoint = !{!0}
!gla.uniforms = !{!1, !9, !10, !11, !13, !16}
!gla.inputs = !{!17}
!gla.outputs = !{!19}
!gla.noStaticUse = !{!16}

!0 = !{!"main", i32 15}
!1 = !{!"foo3", i32 12, %s3* @foo3_typeProxy, !2, !3}
!2 = !{i32 4, i32 0, i32 1024, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!3 = !{!"s3", !2, !"s2_1", !4, !"i", !5, !"f", !5, !"s1_1", !7}
!4 = !{!"s2", !2, !"i", !5, !"f", !5, !"s1_1", !7}
!5 = !{!"", !6}
!6 = !{i32 0, i32 0, i32 1024, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!7 = !{!"s1", !2, !"i", !5, !"f", !5, !"s0_1", !8}
!8 = !{!"s0", !2, !"i", !5}
!9 = !{!"foo1", i32 12, %s1* @foo1_typeProxy, !2, !7}
!10 = !{!"foo0", i32 12, %s0* @foo0_typeProxy, !2, !8}
!11 = !{!"foo00", i32 12, %s00* @foo00_typeProxy, !2, !12}
!12 = !{!"s00", !2, !"s0_0", !8}
!13 = !{!"sampler", i32 12, i32* @sampler_typeProxy, !14}
!14 = !{i32 5, i32 0, i32 1024, !15, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!15 = !{i32 0, i32* @sampler_typeProxy, i32 1, i1 false, i1 false, i32 0}
!16 = !{!"foo2", i32 12, %s2* @foo2_typeProxy, !2, !4}
!17 = !{!"coord", i32 1, <2 x float>* @coord_typeProxy, !18}
!18 = !{i32 0, i32 0, i32 1024, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!19 = !{!"gl_FragColor", i32 7, <4 x float>* @gl_FragColor_typeProxy, !20}
!20 = !{i32 0, i32 0, i32 1025, null, i32 0, i32 43, i32 -1, i32 0, i32 -1}
