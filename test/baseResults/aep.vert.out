
Top IR:
; ModuleID = 'Glslang'

%outName = type { <4 x float> }
%ubName = type { <2 x float> }

@iArray = external addrspace(1) constant [5 x i32]
@index = external addrspace(2) constant i32
@outInst = global %outName zeroinitializer
@bufSamp1 = external addrspace(1) constant i32
@bufSamp2 = external addrspace(1) constant i32
@bufSamp3 = external addrspace(1) constant i32
@bufSamp4 = external addrspace(1) constant i32
@bufSamp5 = external addrspace(1) constant i32
@bufSamp6 = external addrspace(1) constant i32
@CA4 = external addrspace(1) constant i32
@CA5 = external addrspace(1) constant i32
@CA6 = external addrspace(1) constant i32
@CA7 = external addrspace(1) constant i32
@samp2DMSA = external addrspace(1) constant i32
@samp2DMSAi = external addrspace(1) constant i32
@samp2DMSAu = external addrspace(1) constant i32
@sArray = external addrspace(1) constant [4 x i32]
@ubInst = external addrspace(2) constant [4 x %ubName]
@inf = global <2 x float> zeroinitializer
@ing = global <2 x float> zeroinitializer
@inch = global <2 x float> zeroinitializer
@CA1 = external addrspace(1) constant i32
@CA2 = external addrspace(1) constant i32
@CA3 = external addrspace(1) constant i32
@im2Df = external addrspace(1) constant i32
@im2Du = external addrspace(1) constant i32
@im2Di = external addrspace(1) constant i32
@P = external addrspace(2) constant <2 x i32>
@gl_VertexID = global i32 0
@gl_InstanceID = global i32 0

define fastcc void @main() {
entry:
  %constOffsets = alloca [4 x <2 x i32>]
  %color = alloca <4 x float>
  br label %mainBody

mainBody:                                         ; preds = %entry
  %0 = load i32 addrspace(2)* @index, !gla.uniform !4
  store <4 x float> zeroinitializer, <4 x float>* %color
  %1 = load <4 x float>* %color
  store <4 x float> %1, <4 x float>* getelementptr inbounds (%outName* @outInst, i32 0, i32 0)
  %2 = call <4 x float> @"bufferT("()
  %3 = load <4 x float>* getelementptr inbounds (%outName* @outInst, i32 0, i32 0)
  %4 = fadd <4 x float> %3, %2, !gla.precision !85
  store <4 x float> %4, <4 x float>* getelementptr inbounds (%outName* @outInst, i32 0, i32 0)
  %5 = call <4 x float> @"CAT("()
  %6 = load <4 x float>* getelementptr inbounds (%outName* @outInst, i32 0, i32 0)
  %7 = fadd <4 x float> %6, %5, !gla.precision !85
  store <4 x float> %7, <4 x float>* getelementptr inbounds (%outName* @outInst, i32 0, i32 0)
  %8 = call <4 x float> @"MSA("()
  %9 = load <4 x float>* getelementptr inbounds (%outName* @outInst, i32 0, i32 0)
  %10 = fadd <4 x float> %9, %8, !gla.precision !85
  store <4 x float> %10, <4 x float>* getelementptr inbounds (%outName* @outInst, i32 0, i32 0)
  call void @"goodImageAtom("()
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %mainBody
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: alwaysinline
define internal fastcc <4 x float> @"bufferT("() #0 {
entry:
  %v23 = alloca <4 x float>
  %v19 = alloca <4 x float>
  %v15 = alloca <4 x float>
  %v11 = alloca <4 x float>
  %v7 = alloca <4 x float>
  %v3 = alloca <4 x float>
  %s1 = alloca i32
  %v = alloca <4 x float>
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %v
  %0 = load i32 addrspace(1)* @bufSamp1, !gla.uniform !6
  %s12 = call i32 @llvm.gla.queryTextureSizeNoLod.i32(i32 0, i32 %0), !gla.precision !85
  store i32 %s12, i32* %s1
  %1 = load i32* %s1
  %2 = sitofp i32 %1 to float, !gla.precision !85
  %3 = load <4 x float>* %v3
  %4 = insertelement <4 x float> undef, float %2, i32 0, !gla.precision !85
  %5 = insertelement <4 x float> %4, float %2, i32 1, !gla.precision !85
  %6 = insertelement <4 x float> %5, float %2, i32 2, !gla.precision !85
  %7 = insertelement <4 x float> %6, float %2, i32 3, !gla.precision !85
  %8 = load <4 x float>* %v
  %v4 = fmul <4 x float> %8, %7, !gla.precision !85
  store <4 x float> %v4, <4 x float>* %v
  %9 = load i32 addrspace(1)* @bufSamp2, !gla.uniform !9
  %s16 = call i32 @llvm.gla.queryTextureSizeNoLod.i32(i32 0, i32 %9), !gla.precision !85
  store i32 %s16, i32* %s1
  %10 = load i32* %s1
  %11 = sitofp i32 %10 to float, !gla.precision !85
  %12 = load <4 x float>* %v7
  %13 = insertelement <4 x float> undef, float %11, i32 0, !gla.precision !85
  %14 = insertelement <4 x float> %13, float %11, i32 1, !gla.precision !85
  %15 = insertelement <4 x float> %14, float %11, i32 2, !gla.precision !85
  %16 = insertelement <4 x float> %15, float %11, i32 3, !gla.precision !85
  %17 = load <4 x float>* %v
  %v8 = fmul <4 x float> %17, %16, !gla.precision !85
  store <4 x float> %v8, <4 x float>* %v
  %18 = load i32 addrspace(1)* @bufSamp3, !gla.uniform !12
  %s110 = call i32 @llvm.gla.queryTextureSizeNoLod.i32(i32 0, i32 %18), !gla.precision !85
  store i32 %s110, i32* %s1
  %19 = load i32* %s1
  %20 = sitofp i32 %19 to float, !gla.precision !85
  %21 = load <4 x float>* %v11
  %22 = insertelement <4 x float> undef, float %20, i32 0, !gla.precision !85
  %23 = insertelement <4 x float> %22, float %20, i32 1, !gla.precision !85
  %24 = insertelement <4 x float> %23, float %20, i32 2, !gla.precision !85
  %25 = insertelement <4 x float> %24, float %20, i32 3, !gla.precision !85
  %26 = load <4 x float>* %v
  %v12 = fmul <4 x float> %26, %25, !gla.precision !85
  store <4 x float> %v12, <4 x float>* %v
  %27 = load i32 addrspace(1)* @bufSamp4, !gla.uniform !15
  %s114 = call i32 @llvm.gla.queryTextureSizeNoLod.i32(i32 0, i32 %27), !gla.precision !85
  store i32 %s114, i32* %s1
  %28 = load i32* %s1
  %29 = sitofp i32 %28 to float, !gla.precision !85
  %30 = load <4 x float>* %v15
  %31 = insertelement <4 x float> undef, float %29, i32 0, !gla.precision !85
  %32 = insertelement <4 x float> %31, float %29, i32 1, !gla.precision !85
  %33 = insertelement <4 x float> %32, float %29, i32 2, !gla.precision !85
  %34 = insertelement <4 x float> %33, float %29, i32 3, !gla.precision !85
  %35 = load <4 x float>* %v
  %v16 = fmul <4 x float> %35, %34, !gla.precision !85
  store <4 x float> %v16, <4 x float>* %v
  %36 = load i32 addrspace(1)* @bufSamp5, !gla.uniform !18
  %s118 = call i32 @llvm.gla.queryTextureSizeNoLod.i32(i32 0, i32 %36), !gla.precision !85
  store i32 %s118, i32* %s1
  %37 = load i32* %s1
  %38 = sitofp i32 %37 to float, !gla.precision !85
  %39 = load <4 x float>* %v19
  %40 = insertelement <4 x float> undef, float %38, i32 0, !gla.precision !85
  %41 = insertelement <4 x float> %40, float %38, i32 1, !gla.precision !85
  %42 = insertelement <4 x float> %41, float %38, i32 2, !gla.precision !85
  %43 = insertelement <4 x float> %42, float %38, i32 3, !gla.precision !85
  %44 = load <4 x float>* %v
  %v20 = fmul <4 x float> %44, %43, !gla.precision !85
  store <4 x float> %v20, <4 x float>* %v
  %45 = load i32 addrspace(1)* @bufSamp6, !gla.uniform !21
  %s122 = call i32 @llvm.gla.queryTextureSizeNoLod.i32(i32 0, i32 %45), !gla.precision !85
  store i32 %s122, i32* %s1
  %46 = load i32* %s1
  %47 = sitofp i32 %46 to float, !gla.precision !85
  %48 = load <4 x float>* %v23
  %49 = insertelement <4 x float> undef, float %47, i32 0, !gla.precision !85
  %50 = insertelement <4 x float> %49, float %47, i32 1, !gla.precision !85
  %51 = insertelement <4 x float> %50, float %47, i32 2, !gla.precision !85
  %52 = insertelement <4 x float> %51, float %47, i32 3, !gla.precision !85
  %53 = load <4 x float>* %v
  %v24 = fmul <4 x float> %53, %52, !gla.precision !85
  store <4 x float> %v24, <4 x float>* %v
  %54 = load i32 addrspace(1)* @bufSamp1, !gla.uniform !6
  %55 = load i32* %s1
  %v25 = call <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.i32.i32.i32(i32 0, i32 %54, i32 32, i32 %55, i32 undef, float undef, i32 undef), !gla.precision !85
  %56 = load <4 x float>* %v
  %v26 = fmul <4 x float> %56, %v25, !gla.precision !85
  store <4 x float> %v26, <4 x float>* %v
  %57 = load i32 addrspace(1)* @bufSamp2, !gla.uniform !9
  %58 = load i32* %s1
  %v27 = call <4 x i32> @llvm.gla.texelFetchOffset.v4i32.i32.i32.i32(i32 0, i32 %57, i32 32, i32 %58, i32 undef, float undef, i32 undef), !gla.precision !85
  %59 = sitofp <4 x i32> %v27 to <4 x float>, !gla.precision !85
  %60 = load <4 x float>* %v
  %v28 = fmul <4 x float> %60, %59, !gla.precision !85
  store <4 x float> %v28, <4 x float>* %v
  %61 = load i32 addrspace(1)* @bufSamp3, !gla.uniform !12
  %62 = load i32* %s1
  %v29 = call <4 x i32> @llvm.gla.texelFetchOffset.v4i32.i32.i32.i32(i32 0, i32 %61, i32 32, i32 %62, i32 undef, float undef, i32 undef), !gla.precision !85
  %63 = uitofp <4 x i32> %v29 to <4 x float>, !gla.precision !85
  %64 = load <4 x float>* %v
  %v30 = fmul <4 x float> %64, %63, !gla.precision !85
  store <4 x float> %v30, <4 x float>* %v
  %65 = load <4 x float>* %v
  ret <4 x float> %65

post-return:                                      ; No predecessors!
  unreachable
}

; Function Attrs: alwaysinline
define internal fastcc <4 x float> @"CAT("() #0 {
entry:
  %v9 = alloca <4 x float>
  %v = alloca <4 x float>
  %iv = alloca <3 x i32>
  store <3 x i32> zeroinitializer, <3 x i32>* %iv
  %0 = load i32 addrspace(1)* @CA4, !gla.uniform !24
  %iv1 = call <3 x i32> @llvm.gla.queryTextureSize.v3i32(i32 4, i32 %0, i32 1), !gla.precision !85
  %1 = load <3 x i32>* %iv
  %iv2 = add <3 x i32> %1, %iv1, !gla.precision !85
  store <3 x i32> %iv2, <3 x i32>* %iv
  %2 = load i32 addrspace(1)* @CA5, !gla.uniform !27
  %iv3 = call <3 x i32> @llvm.gla.queryTextureSize.v3i32(i32 4, i32 %2, i32 1), !gla.precision !85
  %3 = load <3 x i32>* %iv
  %iv4 = add <3 x i32> %3, %iv3, !gla.precision !85
  store <3 x i32> %iv4, <3 x i32>* %iv
  %4 = load i32 addrspace(1)* @CA6, !gla.uniform !30
  %iv5 = call <3 x i32> @llvm.gla.queryTextureSize.v3i32(i32 4, i32 %4, i32 1), !gla.precision !85
  %5 = load <3 x i32>* %iv
  %iv6 = add <3 x i32> %5, %iv5, !gla.precision !85
  store <3 x i32> %iv6, <3 x i32>* %iv
  %6 = load i32 addrspace(1)* @CA7, !gla.uniform !33
  %iv7 = call <3 x i32> @llvm.gla.queryTextureSize.v3i32(i32 4, i32 %6, i32 1), !gla.precision !85
  %7 = load <3 x i32>* %iv
  %iv8 = add <3 x i32> %7, %iv7, !gla.precision !85
  store <3 x i32> %iv8, <3 x i32>* %iv
  %8 = load <3 x i32>* %iv
  %9 = sitofp <3 x i32> %8 to <3 x float>, !gla.precision !85
  %10 = load <4 x float>* %v9
  %11 = extractelement <3 x float> %9, i32 0, !gla.precision !85
  %12 = insertelement <4 x float> %10, float %11, i32 0, !gla.precision !85
  %13 = extractelement <3 x float> %9, i32 1, !gla.precision !85
  %14 = insertelement <4 x float> %12, float %13, i32 1, !gla.precision !85
  %15 = extractelement <3 x float> %9, i32 2, !gla.precision !85
  %16 = insertelement <4 x float> %14, float %15, i32 2, !gla.precision !85
  %v10 = insertelement <4 x float> %16, float 1.000000e+00, i32 3, !gla.precision !85
  store <4 x float> %v10, <4 x float>* %v
  %17 = load i32 addrspace(1)* @CA4, !gla.uniform !24
  %v11 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 4, i32 %17, i32 16, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>), !gla.precision !85
  %18 = load <4 x float>* %v
  %v12 = fmul <4 x float> %18, %v11, !gla.precision !85
  store <4 x float> %v12, <4 x float>* %v
  %19 = load i32 addrspace(1)* @CA5, !gla.uniform !27
  %v13 = call float @llvm.gla.fTextureSampleLodRefZ.f32.v4f32(i32 4, i32 %19, i32 154, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, float 3.000000e+00, float undef), !gla.precision !85
  %20 = load <4 x float>* %v
  %21 = insertelement <4 x float> undef, float %v13, i32 0, !gla.precision !85
  %22 = insertelement <4 x float> %21, float %v13, i32 1, !gla.precision !85
  %23 = insertelement <4 x float> %22, float %v13, i32 2, !gla.precision !85
  %24 = insertelement <4 x float> %23, float %v13, i32 3, !gla.precision !85
  %v14 = fmul <4 x float> %20, %24, !gla.precision !85
  store <4 x float> %v14, <4 x float>* %v
  %25 = load i32 addrspace(1)* @CA6, !gla.uniform !30
  %v15 = call <4 x i32> @llvm.gla.textureSample.v4i32.v4f32(i32 4, i32 %25, i32 16, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>), !gla.precision !85
  %26 = sitofp <4 x i32> %v15 to <4 x float>, !gla.precision !85
  %27 = load <4 x float>* %v
  %v16 = fmul <4 x float> %27, %26, !gla.precision !85
  store <4 x float> %v16, <4 x float>* %v
  %28 = load i32 addrspace(1)* @CA7, !gla.uniform !33
  %v17 = call <4 x i32> @llvm.gla.textureSample.v4i32.v4f32(i32 4, i32 %28, i32 16, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>), !gla.precision !85
  %29 = uitofp <4 x i32> %v17 to <4 x float>, !gla.precision !85
  %30 = load <4 x float>* %v
  %v18 = fmul <4 x float> %30, %29, !gla.precision !85
  store <4 x float> %v18, <4 x float>* %v
  %31 = load i32 addrspace(1)* @CA4, !gla.uniform !24
  %v19 = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 4, i32 %31, i32 148, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, float 0x3FCEB851E0000000, float undef), !gla.precision !85
  %32 = load <4 x float>* %v
  %v20 = fmul <4 x float> %32, %v19, !gla.precision !85
  store <4 x float> %v20, <4 x float>* %v
  %33 = load i32 addrspace(1)* @CA6, !gla.uniform !30
  %v21 = call <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v4f32(i32 4, i32 %33, i32 148, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, float 0x3FD0A3D700000000, float undef), !gla.precision !85
  %34 = sitofp <4 x i32> %v21 to <4 x float>, !gla.precision !85
  %35 = load <4 x float>* %v
  %v22 = fmul <4 x float> %35, %34, !gla.precision !85
  store <4 x float> %v22, <4 x float>* %v
  %36 = load i32 addrspace(1)* @CA7, !gla.uniform !33
  %v23 = call <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v4f32(i32 4, i32 %36, i32 148, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, float 0x3FD147AE20000000, float undef), !gla.precision !85
  %37 = uitofp <4 x i32> %v23 to <4 x float>, !gla.precision !85
  %38 = load <4 x float>* %v
  %v24 = fmul <4 x float> %38, %37, !gla.precision !85
  store <4 x float> %v24, <4 x float>* %v
  %39 = load i32 addrspace(1)* @CA4, !gla.uniform !24
  %v25 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v4f32.i32.v3f32.v3f32(i32 4, i32 %39, i32 16, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, float undef, float undef, i32 undef, <3 x float> <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>, <3 x float> <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>), !gla.precision !85
  %40 = load <4 x float>* %v
  %v26 = fmul <4 x float> %40, %v25, !gla.precision !85
  store <4 x float> %v26, <4 x float>* %v
  %41 = load i32 addrspace(1)* @CA6, !gla.uniform !30
  %v27 = call <4 x i32> @llvm.gla.textureSampleLodRefZOffsetGrad.v4i32.v4f32.i32.v3f32.v3f32(i32 4, i32 %41, i32 16, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, float undef, float undef, i32 undef, <3 x float> <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>, <3 x float> <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>), !gla.precision !85
  %42 = sitofp <4 x i32> %v27 to <4 x float>, !gla.precision !85
  %43 = load <4 x float>* %v
  %v28 = fmul <4 x float> %43, %42, !gla.precision !85
  store <4 x float> %v28, <4 x float>* %v
  %44 = load i32 addrspace(1)* @CA7, !gla.uniform !33
  %v29 = call <4 x i32> @llvm.gla.textureSampleLodRefZOffsetGrad.v4i32.v4f32.i32.v3f32.v3f32(i32 4, i32 %44, i32 16, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, float undef, float undef, i32 undef, <3 x float> <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>, <3 x float> <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>), !gla.precision !85
  %45 = uitofp <4 x i32> %v29 to <4 x float>, !gla.precision !85
  %46 = load <4 x float>* %v
  %v30 = fmul <4 x float> %46, %45, !gla.precision !85
  store <4 x float> %v30, <4 x float>* %v
  %47 = load i32 addrspace(1)* @CA4, !gla.uniform !24
  %v31 = call <4 x float> @llvm.gla.fTexelGather.v4f32.v4f32(i32 4, i32 %47, i32 80, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, i32 undef, float undef), !gla.precision !85
  %48 = load <4 x float>* %v
  %v32 = fmul <4 x float> %48, %v31, !gla.precision !85
  store <4 x float> %v32, <4 x float>* %v
  %49 = load i32 addrspace(1)* @CA4, !gla.uniform !24
  %v33 = call <4 x float> @llvm.gla.fTexelGather.v4f32.v4f32(i32 4, i32 %49, i32 1104, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, i32 2, float undef), !gla.precision !85
  %50 = load <4 x float>* %v
  %v34 = fmul <4 x float> %50, %v33, !gla.precision !85
  store <4 x float> %v34, <4 x float>* %v
  %51 = load i32 addrspace(1)* @CA6, !gla.uniform !30
  %v35 = call <4 x i32> @llvm.gla.texelGather.v4i32.v4f32(i32 4, i32 %51, i32 80, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, i32 undef, float undef), !gla.precision !85
  %52 = sitofp <4 x i32> %v35 to <4 x float>, !gla.precision !85
  %53 = load <4 x float>* %v
  %v36 = fmul <4 x float> %53, %52, !gla.precision !85
  store <4 x float> %v36, <4 x float>* %v
  %54 = load i32 addrspace(1)* @CA6, !gla.uniform !30
  %v37 = call <4 x i32> @llvm.gla.texelGather.v4i32.v4f32(i32 4, i32 %54, i32 1104, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, i32 1, float undef), !gla.precision !85
  %55 = sitofp <4 x i32> %v37 to <4 x float>, !gla.precision !85
  %56 = load <4 x float>* %v
  %v38 = fmul <4 x float> %56, %55, !gla.precision !85
  store <4 x float> %v38, <4 x float>* %v
  %57 = load i32 addrspace(1)* @CA7, !gla.uniform !33
  %v39 = call <4 x i32> @llvm.gla.texelGather.v4i32.v4f32(i32 4, i32 %57, i32 80, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, i32 undef, float undef), !gla.precision !85
  %58 = uitofp <4 x i32> %v39 to <4 x float>, !gla.precision !85
  %59 = load <4 x float>* %v
  %v40 = fmul <4 x float> %59, %58, !gla.precision !85
  store <4 x float> %v40, <4 x float>* %v
  %60 = load i32 addrspace(1)* @CA7, !gla.uniform !33
  %v41 = call <4 x i32> @llvm.gla.texelGather.v4i32.v4f32(i32 4, i32 %60, i32 1104, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, i32 0, float undef), !gla.precision !85
  %61 = uitofp <4 x i32> %v41 to <4 x float>, !gla.precision !85
  %62 = load <4 x float>* %v
  %v42 = fmul <4 x float> %62, %61, !gla.precision !85
  store <4 x float> %v42, <4 x float>* %v
  %63 = load i32 addrspace(1)* @CA5, !gla.uniform !27
  %v43 = call <4 x float> @llvm.gla.fTexelGather.v4f32.v4f32(i32 4, i32 %63, i32 2136, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, i32 undef, float 2.500000e+00), !gla.precision !85
  %64 = load <4 x float>* %v
  %v44 = fmul <4 x float> %64, %v43, !gla.precision !85
  store <4 x float> %v44, <4 x float>* %v
  %65 = load <4 x float>* %v
  ret <4 x float> %65

post-return:                                      ; No predecessors!
  unreachable
}

; Function Attrs: alwaysinline
define internal fastcc <4 x float> @"MSA("() #0 {
entry:
  %v7 = alloca <4 x float>
  %v = alloca <4 x float>
  %iv = alloca <3 x i32>
  store <3 x i32> zeroinitializer, <3 x i32>* %iv
  %0 = load i32 addrspace(1)* @samp2DMSA, !gla.uniform !36
  %iv1 = call <3 x i32> @llvm.gla.queryTextureSizeNoLod.v3i32(i32 6, i32 %0), !gla.precision !85
  %1 = load <3 x i32>* %iv
  %iv2 = add <3 x i32> %1, %iv1, !gla.precision !85
  store <3 x i32> %iv2, <3 x i32>* %iv
  %2 = load i32 addrspace(1)* @samp2DMSAi, !gla.uniform !39
  %iv3 = call <3 x i32> @llvm.gla.queryTextureSizeNoLod.v3i32(i32 6, i32 %2), !gla.precision !85
  %3 = load <3 x i32>* %iv
  %iv4 = add <3 x i32> %3, %iv3, !gla.precision !85
  store <3 x i32> %iv4, <3 x i32>* %iv
  %4 = load i32 addrspace(1)* @samp2DMSAu, !gla.uniform !42
  %iv5 = call <3 x i32> @llvm.gla.queryTextureSizeNoLod.v3i32(i32 6, i32 %4), !gla.precision !85
  %5 = load <3 x i32>* %iv
  %iv6 = add <3 x i32> %5, %iv5, !gla.precision !85
  store <3 x i32> %iv6, <3 x i32>* %iv
  %6 = load <3 x i32>* %iv
  %7 = sitofp <3 x i32> %6 to <3 x float>, !gla.precision !85
  %8 = load <4 x float>* %v7
  %9 = extractelement <3 x float> %7, i32 0, !gla.precision !85
  %10 = insertelement <4 x float> %8, float %9, i32 0, !gla.precision !85
  %11 = extractelement <3 x float> %7, i32 1, !gla.precision !85
  %12 = insertelement <4 x float> %10, float %11, i32 1, !gla.precision !85
  %13 = extractelement <3 x float> %7, i32 2, !gla.precision !85
  %14 = insertelement <4 x float> %12, float %13, i32 2, !gla.precision !85
  %v8 = insertelement <4 x float> %14, float 1.000000e+00, i32 3, !gla.precision !85
  store <4 x float> %v8, <4 x float>* %v
  %15 = load i32 addrspace(1)* @samp2DMSA, !gla.uniform !36
  %v9 = call <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v3i32.i32.i32(i32 6, i32 %15, i32 690, <3 x i32> <i32 5, i32 5, i32 5>, i32 2, float undef, i32 undef), !gla.precision !85
  %16 = load <4 x float>* %v
  %v10 = fmul <4 x float> %16, %v9, !gla.precision !85
  store <4 x float> %v10, <4 x float>* %v
  %17 = load i32 addrspace(1)* @samp2DMSAi, !gla.uniform !39
  %v11 = call <4 x i32> @llvm.gla.texelFetchOffset.v4i32.v3i32.i32.i32(i32 6, i32 %17, i32 690, <3 x i32> <i32 5, i32 5, i32 5>, i32 2, float undef, i32 undef), !gla.precision !85
  %18 = sitofp <4 x i32> %v11 to <4 x float>, !gla.precision !85
  %19 = load <4 x float>* %v
  %v12 = fmul <4 x float> %19, %18, !gla.precision !85
  store <4 x float> %v12, <4 x float>* %v
  %20 = load i32 addrspace(1)* @samp2DMSAu, !gla.uniform !42
  %v13 = call <4 x i32> @llvm.gla.texelFetchOffset.v4i32.v3i32.i32.i32(i32 6, i32 %20, i32 690, <3 x i32> <i32 5, i32 5, i32 5>, i32 2, float undef, i32 undef), !gla.precision !85
  %21 = uitofp <4 x i32> %v13 to <4 x float>, !gla.precision !85
  %22 = load <4 x float>* %v
  %v14 = fmul <4 x float> %22, %21, !gla.precision !85
  store <4 x float> %v14, <4 x float>* %v
  %23 = load <4 x float>* %v
  ret <4 x float> %23

post-return:                                      ; No predecessors!
  unreachable
}

; Function Attrs: alwaysinline
define internal fastcc void @"goodImageAtom("() #0 {
entry:
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @llvm.gla.queryTextureSizeNoLod.i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.i32.i32.i32(i32, i32, i32, i32, i32, float, i32) #1

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.texelFetchOffset.v4i32.i32.i32.i32(i32, i32, i32, i32, i32, float, i32) #1

; Function Attrs: nounwind readnone
declare <3 x i32> @llvm.gla.queryTextureSize.v3i32(i32, i32, i32) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32, i32, i32, <4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.gla.fTextureSampleLodRefZ.f32.v4f32(i32, i32, i32, <4 x float>, float, float) #1

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.textureSample.v4i32.v4f32(i32, i32, i32, <4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32, i32, i32, <4 x float>, float, float) #1

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v4f32(i32, i32, i32, <4 x float>, float, float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v4f32.i32.v3f32.v3f32(i32, i32, i32, <4 x float>, float, float, i32, <3 x float>, <3 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.textureSampleLodRefZOffsetGrad.v4i32.v4f32.i32.v3f32.v3f32(i32, i32, i32, <4 x float>, float, float, i32, <3 x float>, <3 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTexelGather.v4f32.v4f32(i32, i32, i32, <4 x float>, i32, float) #1

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.texelGather.v4i32.v4f32(i32, i32, i32, <4 x float>, i32, float) #1

; Function Attrs: nounwind readnone
declare <3 x i32> @llvm.gla.queryTextureSizeNoLod.v3i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v3i32.i32.i32(i32, i32, i32, <3 x i32>, i32, float, i32) #1

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.texelFetchOffset.v4i32.v3i32.i32.i32(i32, i32, i32, <3 x i32>, i32, float, i32) #1

attributes #0 = { alwaysinline }
attributes #1 = { nounwind readnone }

!gla.entrypoint = !{!0}
!gla.uniforms = !{!1, !4, !6, !9, !12, !15, !18, !21, !24, !27, !30, !33, !36, !39, !42, !45, !48, !52, !55, !58, !61, !64, !67, !70}
!gla.outputs = !{!71}
!gla.noStaticUse = !{!45, !48, !75, !77, !79, !52, !55, !58, !61, !64, !67, !70, !81, !83}
!gla.inputs = !{!75, !77, !79, !81, !83}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"iArray", i32 12, [5 x i32]* @iArray_typeProxy, metadata !2}
!2 = metadata !{i32 5, i32 1, i32 1024, metadata !3}
!3 = metadata !{i32 1, [5 x i32]* @iArray_typeProxy, i32 1, i1 false, i1 false, i32 0}
!4 = metadata !{metadata !"index", i32 12, i32* @index_typeProxy, metadata !5}
!5 = metadata !{i32 0, i32 3, i32 1024, null}
!6 = metadata !{metadata !"bufSamp1", i32 12, i32* @bufSamp1_typeProxy, metadata !7}
!7 = metadata !{i32 5, i32 3, i32 1024, metadata !8}
!8 = metadata !{i32 0, i32* @bufSamp1_typeProxy, i32 5, i1 false, i1 false, i32 0}
!9 = metadata !{metadata !"bufSamp2", i32 12, i32* @bufSamp2_typeProxy, metadata !10}
!10 = metadata !{i32 5, i32 3, i32 1024, metadata !11}
!11 = metadata !{i32 0, i32* @bufSamp2_typeProxy, i32 5, i1 false, i1 false, i32 1}
!12 = metadata !{metadata !"bufSamp3", i32 12, i32* @bufSamp3_typeProxy, metadata !13}
!13 = metadata !{i32 5, i32 3, i32 1024, metadata !14}
!14 = metadata !{i32 0, i32* @bufSamp3_typeProxy, i32 5, i1 false, i1 false, i32 2}
!15 = metadata !{metadata !"bufSamp4", i32 12, i32* @bufSamp4_typeProxy, metadata !16}
!16 = metadata !{i32 5, i32 3, i32 1024, metadata !17}
!17 = metadata !{i32 1, i32* @bufSamp4_typeProxy, i32 5, i1 false, i1 false, i32 0}
!18 = metadata !{metadata !"bufSamp5", i32 12, i32* @bufSamp5_typeProxy, metadata !19}
!19 = metadata !{i32 5, i32 3, i32 1024, metadata !20}
!20 = metadata !{i32 1, i32* @bufSamp5_typeProxy, i32 5, i1 false, i1 false, i32 1}
!21 = metadata !{metadata !"bufSamp6", i32 12, i32* @bufSamp6_typeProxy, metadata !22}
!22 = metadata !{i32 5, i32 3, i32 1024, metadata !23}
!23 = metadata !{i32 1, i32* @bufSamp6_typeProxy, i32 5, i1 false, i1 false, i32 2}
!24 = metadata !{metadata !"CA4", i32 12, i32* @CA4_typeProxy, metadata !25}
!25 = metadata !{i32 5, i32 3, i32 1024, metadata !26}
!26 = metadata !{i32 0, i32* @CA4_typeProxy, i32 3, i1 true, i1 false, i32 0}
!27 = metadata !{metadata !"CA5", i32 12, i32* @CA5_typeProxy, metadata !28}
!28 = metadata !{i32 5, i32 3, i32 1024, metadata !29}
!29 = metadata !{i32 0, i32* @CA5_typeProxy, i32 3, i1 true, i1 true, i32 0}
!30 = metadata !{metadata !"CA6", i32 12, i32* @CA6_typeProxy, metadata !31}
!31 = metadata !{i32 5, i32 3, i32 1024, metadata !32}
!32 = metadata !{i32 0, i32* @CA6_typeProxy, i32 3, i1 true, i1 false, i32 1}
!33 = metadata !{metadata !"CA7", i32 12, i32* @CA7_typeProxy, metadata !34}
!34 = metadata !{i32 5, i32 3, i32 1024, metadata !35}
!35 = metadata !{i32 0, i32* @CA7_typeProxy, i32 3, i1 true, i1 false, i32 2}
!36 = metadata !{metadata !"samp2DMSA", i32 12, i32* @samp2DMSA_typeProxy, metadata !37}
!37 = metadata !{i32 5, i32 3, i32 1024, metadata !38}
!38 = metadata !{i32 0, i32* @samp2DMSA_typeProxy, i32 1, i1 true, i1 false, i32 0}
!39 = metadata !{metadata !"samp2DMSAi", i32 12, i32* @samp2DMSAi_typeProxy, metadata !40}
!40 = metadata !{i32 5, i32 3, i32 1024, metadata !41}
!41 = metadata !{i32 0, i32* @samp2DMSAi_typeProxy, i32 1, i1 true, i1 false, i32 1}
!42 = metadata !{metadata !"samp2DMSAu", i32 12, i32* @samp2DMSAu_typeProxy, metadata !43}
!43 = metadata !{i32 5, i32 3, i32 1024, metadata !44}
!44 = metadata !{i32 0, i32* @samp2DMSAu_typeProxy, i32 1, i1 true, i1 false, i32 2}
!45 = metadata !{metadata !"sArray", i32 12, [4 x i32]* @sArray_typeProxy, metadata !46}
!46 = metadata !{i32 5, i32 1, i32 1024, metadata !47}
!47 = metadata !{i32 0, [4 x i32]* @sArray_typeProxy, i32 1, i1 false, i1 false, i32 0}
!48 = metadata !{metadata !"ubInst", i32 13, [4 x %ubName]* @ubInst_typeProxy, metadata !49, metadata !50}
!49 = metadata !{i32 6, i32 0, i32 1024, null}
!50 = metadata !{metadata !"ubName", metadata !49, metadata !"p", metadata !51}
!51 = metadata !{metadata !"", metadata !5}
!52 = metadata !{metadata !"CA1", i32 12, i32* @CA1_typeProxy, metadata !53}
!53 = metadata !{i32 5, i32 3, i32 1024, metadata !54}
!54 = metadata !{i32 1, i32* @CA1_typeProxy, i32 3, i1 true, i1 false, i32 0}
!55 = metadata !{metadata !"CA2", i32 12, i32* @CA2_typeProxy, metadata !56}
!56 = metadata !{i32 5, i32 3, i32 1024, metadata !57}
!57 = metadata !{i32 1, i32* @CA2_typeProxy, i32 3, i1 true, i1 false, i32 1}
!58 = metadata !{metadata !"CA3", i32 12, i32* @CA3_typeProxy, metadata !59}
!59 = metadata !{i32 5, i32 3, i32 1024, metadata !60}
!60 = metadata !{i32 1, i32* @CA3_typeProxy, i32 3, i1 true, i1 false, i32 2}
!61 = metadata !{metadata !"im2Df", i32 12, i32* @im2Df_typeProxy, metadata !62}
!62 = metadata !{i32 5, i32 3, i32 1024, metadata !63}
!63 = metadata !{i32 4, i32* @im2Df_typeProxy, i32 1, i1 false, i1 false, i32 0}
!64 = metadata !{metadata !"im2Du", i32 12, i32* @im2Du_typeProxy, metadata !65}
!65 = metadata !{i32 5, i32 3, i32 1024, metadata !66}
!66 = metadata !{i32 34, i32* @im2Du_typeProxy, i32 1, i1 false, i1 false, i32 2}
!67 = metadata !{metadata !"im2Di", i32 12, i32* @im2Di_typeProxy, metadata !68}
!68 = metadata !{i32 5, i32 3, i32 1024, metadata !69}
!69 = metadata !{i32 25, i32* @im2Di_typeProxy, i32 1, i1 false, i1 false, i32 1}
!70 = metadata !{metadata !"P", i32 12, <2 x i32>* @P_typeProxy, metadata !5}
!71 = metadata !{metadata !"outInst", i32 16, %outName* @outInst_typeProxy, metadata !72, metadata !73}
!72 = metadata !{i32 0, i32 0, i32 1024, null, i32 0}
!73 = metadata !{metadata !"outName", metadata !74, metadata !"color", metadata !51}
!74 = metadata !{i32 0, i32 0, i32 1024, null}
!75 = metadata !{metadata !"inf", i32 1, <2 x float>* @inf_typeProxy, metadata !76}
!76 = metadata !{i32 0, i32 3, i32 1025, null, i32 0}
!77 = metadata !{metadata !"ing", i32 1, <2 x float>* @ing_typeProxy, metadata !78}
!78 = metadata !{i32 0, i32 3, i32 1026, null, i32 0}
!79 = metadata !{metadata !"inch", i32 1, <2 x float>* @inch_typeProxy, metadata !80}
!80 = metadata !{i32 0, i32 3, i32 1027, null, i32 0}
!81 = metadata !{metadata !"gl_VertexID", i32 2, i32* @gl_VertexID_typeProxy, metadata !82}
!82 = metadata !{i32 0, i32 3, i32 1028, null, i32 0, i32 7}
!83 = metadata !{metadata !"gl_InstanceID", i32 3, i32* @gl_InstanceID_typeProxy, metadata !84}
!84 = metadata !{i32 0, i32 3, i32 1029, null, i32 0, i32 8}
!85 = metadata !{i32 3}


Bottom IR:
; ModuleID = 'Glslang'

%outName = type { <4 x float> }

@outInst = global %outName zeroinitializer
@bufSamp1 = external addrspace(1) constant i32
@bufSamp2 = external addrspace(1) constant i32
@bufSamp3 = external addrspace(1) constant i32
@bufSamp4 = external addrspace(1) constant i32
@bufSamp5 = external addrspace(1) constant i32
@bufSamp6 = external addrspace(1) constant i32
@CA4 = external addrspace(1) constant i32
@CA5 = external addrspace(1) constant i32
@CA6 = external addrspace(1) constant i32
@CA7 = external addrspace(1) constant i32
@samp2DMSA = external addrspace(1) constant i32
@samp2DMSAi = external addrspace(1) constant i32
@samp2DMSAu = external addrspace(1) constant i32
@inf = global <2 x float> zeroinitializer
@ing = global <2 x float> zeroinitializer
@inch = global <2 x float> zeroinitializer
@gl_VertexID = global i32 0
@gl_InstanceID = global i32 0

define fastcc void @main() {
entry:
  %gla_constGEP = getelementptr %outName* @outInst, i32 0, i32 0
  store <4 x float> zeroinitializer, <4 x float>* %gla_constGEP, align 16
  %0 = load i32 addrspace(1)* @bufSamp1, align 4, !gla.uniform !6
  %s12.i = call i32 @llvm.gla.queryTextureSizeNoLod.i32(i32 0, i32 %0), !gla.precision !85
  %1 = sitofp i32 %s12.i to float, !gla.precision !85
  %2 = call <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float %1, <4 x i32> zeroinitializer)
  %3 = load i32 addrspace(1)* @bufSamp2, align 4, !gla.uniform !9
  %s16.i = call i32 @llvm.gla.queryTextureSizeNoLod.i32(i32 0, i32 %3), !gla.precision !85
  %4 = sitofp i32 %s16.i to float, !gla.precision !85
  %5 = call <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float %4, <4 x i32> zeroinitializer)
  %v8.i = fmul <4 x float> %2, %5, !gla.precision !85
  %6 = load i32 addrspace(1)* @bufSamp3, align 4, !gla.uniform !12
  %s110.i = call i32 @llvm.gla.queryTextureSizeNoLod.i32(i32 0, i32 %6), !gla.precision !85
  %7 = sitofp i32 %s110.i to float, !gla.precision !85
  %8 = call <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float %7, <4 x i32> zeroinitializer)
  %v12.i = fmul <4 x float> %v8.i, %8, !gla.precision !85
  %9 = load i32 addrspace(1)* @bufSamp4, align 4, !gla.uniform !15
  %s114.i = call i32 @llvm.gla.queryTextureSizeNoLod.i32(i32 0, i32 %9), !gla.precision !85
  %10 = sitofp i32 %s114.i to float, !gla.precision !85
  %11 = call <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float %10, <4 x i32> zeroinitializer)
  %v16.i = fmul <4 x float> %v12.i, %11, !gla.precision !85
  %12 = load i32 addrspace(1)* @bufSamp5, align 4, !gla.uniform !18
  %s118.i = call i32 @llvm.gla.queryTextureSizeNoLod.i32(i32 0, i32 %12), !gla.precision !85
  %13 = sitofp i32 %s118.i to float, !gla.precision !85
  %14 = call <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float %13, <4 x i32> zeroinitializer)
  %v20.i = fmul <4 x float> %v16.i, %14, !gla.precision !85
  %15 = load i32 addrspace(1)* @bufSamp6, align 4, !gla.uniform !21
  %s122.i = call i32 @llvm.gla.queryTextureSizeNoLod.i32(i32 0, i32 %15), !gla.precision !85
  %16 = sitofp i32 %s122.i to float, !gla.precision !85
  %17 = call <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float %16, <4 x i32> zeroinitializer)
  %v24.i = fmul <4 x float> %v20.i, %17, !gla.precision !85
  %v25.i = call <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.i32.i32.i32(i32 0, i32 %0, i32 32, i32 %s122.i, i32 undef, float undef, i32 undef), !gla.precision !85
  %v26.i = fmul <4 x float> %v25.i, %v24.i, !gla.precision !85
  %v27.i = call <4 x i32> @llvm.gla.texelFetchOffset.v4i32.i32.i32.i32(i32 0, i32 %3, i32 32, i32 %s122.i, i32 undef, float undef, i32 undef), !gla.precision !85
  %18 = sitofp <4 x i32> %v27.i to <4 x float>, !gla.precision !85
  %v28.i = fmul <4 x float> %18, %v26.i, !gla.precision !85
  %v29.i = call <4 x i32> @llvm.gla.texelFetchOffset.v4i32.i32.i32.i32(i32 0, i32 %6, i32 32, i32 %s122.i, i32 undef, float undef, i32 undef), !gla.precision !85
  %19 = uitofp <4 x i32> %v29.i to <4 x float>, !gla.precision !85
  %v30.i = fmul <4 x float> %19, %v28.i, !gla.precision !85
  %gla_constGEP22 = getelementptr %outName* @outInst, i32 0, i32 0
  store <4 x float> %v30.i, <4 x float>* %gla_constGEP22, align 16
  %20 = load i32 addrspace(1)* @CA4, align 4, !gla.uniform !24
  %iv1.i3 = call <3 x i32> @llvm.gla.queryTextureSize.v3i32(i32 4, i32 %20, i32 1), !gla.precision !85
  %21 = load i32 addrspace(1)* @CA5, align 4, !gla.uniform !27
  %iv3.i4 = call <3 x i32> @llvm.gla.queryTextureSize.v3i32(i32 4, i32 %21, i32 1), !gla.precision !85
  %iv4.i5 = add <3 x i32> %iv1.i3, %iv3.i4, !gla.precision !85
  %22 = load i32 addrspace(1)* @CA6, align 4, !gla.uniform !30
  %iv5.i6 = call <3 x i32> @llvm.gla.queryTextureSize.v3i32(i32 4, i32 %22, i32 1), !gla.precision !85
  %iv6.i7 = add <3 x i32> %iv4.i5, %iv5.i6, !gla.precision !85
  %23 = load i32 addrspace(1)* @CA7, align 4, !gla.uniform !33
  %iv7.i = call <3 x i32> @llvm.gla.queryTextureSize.v3i32(i32 4, i32 %23, i32 1), !gla.precision !85
  %iv8.i = add <3 x i32> %iv6.i7, %iv7.i, !gla.precision !85
  %24 = sitofp <3 x i32> %iv8.i to <3 x float>, !gla.precision !85
  %25 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v3f32.v3f32.v3f32.f32(<4 x float> undef, i32 15, <3 x float> %24, i32 0, <3 x float> %24, i32 1, <3 x float> %24, i32 2, float 1.000000e+00, i32 0)
  %v11.i9 = call <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32 4, i32 %20, i32 16, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>), !gla.precision !85
  %v12.i10 = fmul <4 x float> %v11.i9, %25, !gla.precision !85
  %v13.i11 = call float @llvm.gla.fTextureSampleLodRefZ.f32.v4f32(i32 4, i32 %21, i32 154, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, float 3.000000e+00, float undef), !gla.precision !85
  %26 = call <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float %v13.i11, <4 x i32> zeroinitializer)
  %v14.i12 = fmul <4 x float> %26, %v12.i10, !gla.precision !85
  %v15.i = call <4 x i32> @llvm.gla.textureSample.v4i32.v4f32(i32 4, i32 %22, i32 16, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>), !gla.precision !85
  %27 = sitofp <4 x i32> %v15.i to <4 x float>, !gla.precision !85
  %v16.i13 = fmul <4 x float> %27, %v14.i12, !gla.precision !85
  %v17.i = call <4 x i32> @llvm.gla.textureSample.v4i32.v4f32(i32 4, i32 %23, i32 16, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>), !gla.precision !85
  %28 = uitofp <4 x i32> %v17.i to <4 x float>, !gla.precision !85
  %v18.i = fmul <4 x float> %28, %v16.i13, !gla.precision !85
  %v19.i = call <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32 4, i32 %20, i32 148, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, float 0x3FCEB851E0000000, float undef), !gla.precision !85
  %v20.i14 = fmul <4 x float> %v19.i, %v18.i, !gla.precision !85
  %v21.i = call <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v4f32(i32 4, i32 %22, i32 148, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, float 0x3FD0A3D700000000, float undef), !gla.precision !85
  %29 = sitofp <4 x i32> %v21.i to <4 x float>, !gla.precision !85
  %v22.i = fmul <4 x float> %29, %v20.i14, !gla.precision !85
  %v23.i = call <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v4f32(i32 4, i32 %23, i32 148, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, float 0x3FD147AE20000000, float undef), !gla.precision !85
  %30 = uitofp <4 x i32> %v23.i to <4 x float>, !gla.precision !85
  %v24.i15 = fmul <4 x float> %30, %v22.i, !gla.precision !85
  %v25.i16 = call <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v4f32.i32.v3f32.v3f32(i32 4, i32 %20, i32 16, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, float undef, float undef, i32 undef, <3 x float> <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>, <3 x float> <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>), !gla.precision !85
  %v26.i17 = fmul <4 x float> %v25.i16, %v24.i15, !gla.precision !85
  %v27.i18 = call <4 x i32> @llvm.gla.textureSampleLodRefZOffsetGrad.v4i32.v4f32.i32.v3f32.v3f32(i32 4, i32 %22, i32 16, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, float undef, float undef, i32 undef, <3 x float> <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>, <3 x float> <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>), !gla.precision !85
  %31 = sitofp <4 x i32> %v27.i18 to <4 x float>, !gla.precision !85
  %v28.i19 = fmul <4 x float> %31, %v26.i17, !gla.precision !85
  %v29.i20 = call <4 x i32> @llvm.gla.textureSampleLodRefZOffsetGrad.v4i32.v4f32.i32.v3f32.v3f32(i32 4, i32 %23, i32 16, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, float undef, float undef, i32 undef, <3 x float> <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>, <3 x float> <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>), !gla.precision !85
  %32 = uitofp <4 x i32> %v29.i20 to <4 x float>, !gla.precision !85
  %v30.i21 = fmul <4 x float> %32, %v28.i19, !gla.precision !85
  %v31.i = call <4 x float> @llvm.gla.fTexelGather.v4f32.v4f32(i32 4, i32 %20, i32 80, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, i32 undef, float undef), !gla.precision !85
  %v32.i = fmul <4 x float> %v31.i, %v30.i21, !gla.precision !85
  %v33.i = call <4 x float> @llvm.gla.fTexelGather.v4f32.v4f32(i32 4, i32 %20, i32 1104, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, i32 2, float undef), !gla.precision !85
  %v34.i = fmul <4 x float> %v33.i, %v32.i, !gla.precision !85
  %v35.i = call <4 x i32> @llvm.gla.texelGather.v4i32.v4f32(i32 4, i32 %22, i32 80, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, i32 undef, float undef), !gla.precision !85
  %33 = sitofp <4 x i32> %v35.i to <4 x float>, !gla.precision !85
  %v36.i = fmul <4 x float> %33, %v34.i, !gla.precision !85
  %v37.i = call <4 x i32> @llvm.gla.texelGather.v4i32.v4f32(i32 4, i32 %22, i32 1104, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, i32 1, float undef), !gla.precision !85
  %34 = sitofp <4 x i32> %v37.i to <4 x float>, !gla.precision !85
  %v38.i = fmul <4 x float> %34, %v36.i, !gla.precision !85
  %v39.i = call <4 x i32> @llvm.gla.texelGather.v4i32.v4f32(i32 4, i32 %23, i32 80, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, i32 undef, float undef), !gla.precision !85
  %35 = uitofp <4 x i32> %v39.i to <4 x float>, !gla.precision !85
  %v40.i = fmul <4 x float> %35, %v38.i, !gla.precision !85
  %v41.i = call <4 x i32> @llvm.gla.texelGather.v4i32.v4f32(i32 4, i32 %23, i32 1104, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, i32 0, float undef), !gla.precision !85
  %36 = uitofp <4 x i32> %v41.i to <4 x float>, !gla.precision !85
  %v42.i = fmul <4 x float> %36, %v40.i, !gla.precision !85
  %v43.i = call <4 x float> @llvm.gla.fTexelGather.v4f32.v4f32(i32 4, i32 %21, i32 2136, <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, i32 undef, float 2.500000e+00), !gla.precision !85
  %v44.i = fmul <4 x float> %v43.i, %v42.i, !gla.precision !85
  %37 = fadd <4 x float> %v30.i, %v44.i, !gla.precision !85
  %gla_constGEP23 = getelementptr %outName* @outInst, i32 0, i32 0
  store <4 x float> %37, <4 x float>* %gla_constGEP23, align 16
  %38 = load i32 addrspace(1)* @samp2DMSA, align 4, !gla.uniform !36
  %iv1.i = call <3 x i32> @llvm.gla.queryTextureSizeNoLod.v3i32(i32 6, i32 %38), !gla.precision !85
  %39 = load i32 addrspace(1)* @samp2DMSAi, align 4, !gla.uniform !39
  %iv3.i = call <3 x i32> @llvm.gla.queryTextureSizeNoLod.v3i32(i32 6, i32 %39), !gla.precision !85
  %iv4.i = add <3 x i32> %iv1.i, %iv3.i, !gla.precision !85
  %40 = load i32 addrspace(1)* @samp2DMSAu, align 4, !gla.uniform !42
  %iv5.i = call <3 x i32> @llvm.gla.queryTextureSizeNoLod.v3i32(i32 6, i32 %40), !gla.precision !85
  %iv6.i = add <3 x i32> %iv4.i, %iv5.i, !gla.precision !85
  %41 = sitofp <3 x i32> %iv6.i to <3 x float>, !gla.precision !85
  %42 = call <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v3f32.v3f32.v3f32.f32(<4 x float> undef, i32 15, <3 x float> %41, i32 0, <3 x float> %41, i32 1, <3 x float> %41, i32 2, float 1.000000e+00, i32 0)
  %v9.i = call <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v3i32.i32.i32(i32 6, i32 %38, i32 690, <3 x i32> <i32 5, i32 5, i32 5>, i32 2, float undef, i32 undef), !gla.precision !85
  %v10.i = fmul <4 x float> %v9.i, %42, !gla.precision !85
  %v11.i = call <4 x i32> @llvm.gla.texelFetchOffset.v4i32.v3i32.i32.i32(i32 6, i32 %39, i32 690, <3 x i32> <i32 5, i32 5, i32 5>, i32 2, float undef, i32 undef), !gla.precision !85
  %43 = sitofp <4 x i32> %v11.i to <4 x float>, !gla.precision !85
  %v12.i2 = fmul <4 x float> %43, %v10.i, !gla.precision !85
  %v13.i = call <4 x i32> @llvm.gla.texelFetchOffset.v4i32.v3i32.i32.i32(i32 6, i32 %40, i32 690, <3 x i32> <i32 5, i32 5, i32 5>, i32 2, float undef, i32 undef), !gla.precision !85
  %44 = uitofp <4 x i32> %v13.i to <4 x float>, !gla.precision !85
  %v14.i = fmul <4 x float> %44, %v12.i2, !gla.precision !85
  %45 = fadd <4 x float> %37, %v14.i, !gla.precision !85
  %gla_constGEP24 = getelementptr %outName* @outInst, i32 0, i32 0
  store <4 x float> %45, <4 x float>* %gla_constGEP24, align 16
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @llvm.gla.queryTextureSizeNoLod.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.i32.i32.i32(i32, i32, i32, i32, i32, float, i32) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.texelFetchOffset.v4i32.i32.i32.i32(i32, i32, i32, i32, i32, float, i32) #0

; Function Attrs: nounwind readnone
declare <3 x i32> @llvm.gla.queryTextureSize.v3i32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSample.v4f32.v4f32(i32, i32, i32, <4 x float>) #0

; Function Attrs: nounwind readnone
declare float @llvm.gla.fTextureSampleLodRefZ.f32.v4f32(i32, i32, i32, <4 x float>, float, float) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.textureSample.v4i32.v4f32(i32, i32, i32, <4 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZ.v4f32.v4f32(i32, i32, i32, <4 x float>, float, float) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.textureSampleLodRefZ.v4i32.v4f32(i32, i32, i32, <4 x float>, float, float) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTextureSampleLodRefZOffsetGrad.v4f32.v4f32.i32.v3f32.v3f32(i32, i32, i32, <4 x float>, float, float, i32, <3 x float>, <3 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.textureSampleLodRefZOffsetGrad.v4i32.v4f32.i32.v3f32.v3f32(i32, i32, i32, <4 x float>, float, float, i32, <3 x float>, <3 x float>) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTexelGather.v4f32.v4f32(i32, i32, i32, <4 x float>, i32, float) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.texelGather.v4i32.v4f32(i32, i32, i32, <4 x float>, i32, float) #0

; Function Attrs: nounwind readnone
declare <3 x i32> @llvm.gla.queryTextureSizeNoLod.v3i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fTexelFetchOffset.v4f32.v3i32.i32.i32(i32, i32, i32, <3 x i32>, i32, float, i32) #0

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.gla.texelFetchOffset.v4i32.v3i32.i32.i32(i32, i32, i32, <3 x i32>, i32, float, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fMultiInsert.v4f32.v4f32.v3f32.v3f32.v3f32.f32(<4 x float>, i32, <3 x float>, i32, <3 x float>, i32, <3 x float>, i32, float, i32) #0

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float, <4 x i32>) #0

attributes #0 = { nounwind readnone }

!gla.entrypoint = !{!0}
!gla.uniforms = !{!1, !4, !6, !9, !12, !15, !18, !21, !24, !27, !30, !33, !36, !39, !42, !45, !48, !52, !55, !58, !61, !64, !67, !70}
!gla.outputs = !{!71}
!gla.noStaticUse = !{!45, !48, !75, !77, !79, !52, !55, !58, !61, !64, !67, !70, !81, !83}
!gla.inputs = !{!75, !77, !79, !81, !83}

!0 = metadata !{metadata !"main", i32 15}
!1 = metadata !{metadata !"iArray", i32 12, [5 x i32]* @iArray_typeProxy, metadata !2}
!2 = metadata !{i32 5, i32 1, i32 1024, metadata !3}
!3 = metadata !{i32 1, [5 x i32]* @iArray_typeProxy, i32 1, i1 false, i1 false, i32 0}
!4 = metadata !{metadata !"index", i32 12, i32* @index_typeProxy, metadata !5}
!5 = metadata !{i32 0, i32 3, i32 1024, null}
!6 = metadata !{metadata !"bufSamp1", i32 12, i32* @bufSamp1_typeProxy, metadata !7}
!7 = metadata !{i32 5, i32 3, i32 1024, metadata !8}
!8 = metadata !{i32 0, i32* @bufSamp1_typeProxy, i32 5, i1 false, i1 false, i32 0}
!9 = metadata !{metadata !"bufSamp2", i32 12, i32* @bufSamp2_typeProxy, metadata !10}
!10 = metadata !{i32 5, i32 3, i32 1024, metadata !11}
!11 = metadata !{i32 0, i32* @bufSamp2_typeProxy, i32 5, i1 false, i1 false, i32 1}
!12 = metadata !{metadata !"bufSamp3", i32 12, i32* @bufSamp3_typeProxy, metadata !13}
!13 = metadata !{i32 5, i32 3, i32 1024, metadata !14}
!14 = metadata !{i32 0, i32* @bufSamp3_typeProxy, i32 5, i1 false, i1 false, i32 2}
!15 = metadata !{metadata !"bufSamp4", i32 12, i32* @bufSamp4_typeProxy, metadata !16}
!16 = metadata !{i32 5, i32 3, i32 1024, metadata !17}
!17 = metadata !{i32 1, i32* @bufSamp4_typeProxy, i32 5, i1 false, i1 false, i32 0}
!18 = metadata !{metadata !"bufSamp5", i32 12, i32* @bufSamp5_typeProxy, metadata !19}
!19 = metadata !{i32 5, i32 3, i32 1024, metadata !20}
!20 = metadata !{i32 1, i32* @bufSamp5_typeProxy, i32 5, i1 false, i1 false, i32 1}
!21 = metadata !{metadata !"bufSamp6", i32 12, i32* @bufSamp6_typeProxy, metadata !22}
!22 = metadata !{i32 5, i32 3, i32 1024, metadata !23}
!23 = metadata !{i32 1, i32* @bufSamp6_typeProxy, i32 5, i1 false, i1 false, i32 2}
!24 = metadata !{metadata !"CA4", i32 12, i32* @CA4_typeProxy, metadata !25}
!25 = metadata !{i32 5, i32 3, i32 1024, metadata !26}
!26 = metadata !{i32 0, i32* @CA4_typeProxy, i32 3, i1 true, i1 false, i32 0}
!27 = metadata !{metadata !"CA5", i32 12, i32* @CA5_typeProxy, metadata !28}
!28 = metadata !{i32 5, i32 3, i32 1024, metadata !29}
!29 = metadata !{i32 0, i32* @CA5_typeProxy, i32 3, i1 true, i1 true, i32 0}
!30 = metadata !{metadata !"CA6", i32 12, i32* @CA6_typeProxy, metadata !31}
!31 = metadata !{i32 5, i32 3, i32 1024, metadata !32}
!32 = metadata !{i32 0, i32* @CA6_typeProxy, i32 3, i1 true, i1 false, i32 1}
!33 = metadata !{metadata !"CA7", i32 12, i32* @CA7_typeProxy, metadata !34}
!34 = metadata !{i32 5, i32 3, i32 1024, metadata !35}
!35 = metadata !{i32 0, i32* @CA7_typeProxy, i32 3, i1 true, i1 false, i32 2}
!36 = metadata !{metadata !"samp2DMSA", i32 12, i32* @samp2DMSA_typeProxy, metadata !37}
!37 = metadata !{i32 5, i32 3, i32 1024, metadata !38}
!38 = metadata !{i32 0, i32* @samp2DMSA_typeProxy, i32 1, i1 true, i1 false, i32 0}
!39 = metadata !{metadata !"samp2DMSAi", i32 12, i32* @samp2DMSAi_typeProxy, metadata !40}
!40 = metadata !{i32 5, i32 3, i32 1024, metadata !41}
!41 = metadata !{i32 0, i32* @samp2DMSAi_typeProxy, i32 1, i1 true, i1 false, i32 1}
!42 = metadata !{metadata !"samp2DMSAu", i32 12, i32* @samp2DMSAu_typeProxy, metadata !43}
!43 = metadata !{i32 5, i32 3, i32 1024, metadata !44}
!44 = metadata !{i32 0, i32* @samp2DMSAu_typeProxy, i32 1, i1 true, i1 false, i32 2}
!45 = metadata !{metadata !"sArray", i32 12, [4 x i32]* @sArray_typeProxy, metadata !46}
!46 = metadata !{i32 5, i32 1, i32 1024, metadata !47}
!47 = metadata !{i32 0, [4 x i32]* @sArray_typeProxy, i32 1, i1 false, i1 false, i32 0}
!48 = metadata !{metadata !"ubInst", i32 13, [4 x %ubName]* @ubInst_typeProxy, metadata !49, metadata !50}
!49 = metadata !{i32 6, i32 0, i32 1024, null}
!50 = metadata !{metadata !"ubName", metadata !49, metadata !"p", metadata !51}
!51 = metadata !{metadata !"", metadata !5}
!52 = metadata !{metadata !"CA1", i32 12, i32* @CA1_typeProxy, metadata !53}
!53 = metadata !{i32 5, i32 3, i32 1024, metadata !54}
!54 = metadata !{i32 1, i32* @CA1_typeProxy, i32 3, i1 true, i1 false, i32 0}
!55 = metadata !{metadata !"CA2", i32 12, i32* @CA2_typeProxy, metadata !56}
!56 = metadata !{i32 5, i32 3, i32 1024, metadata !57}
!57 = metadata !{i32 1, i32* @CA2_typeProxy, i32 3, i1 true, i1 false, i32 1}
!58 = metadata !{metadata !"CA3", i32 12, i32* @CA3_typeProxy, metadata !59}
!59 = metadata !{i32 5, i32 3, i32 1024, metadata !60}
!60 = metadata !{i32 1, i32* @CA3_typeProxy, i32 3, i1 true, i1 false, i32 2}
!61 = metadata !{metadata !"im2Df", i32 12, i32* @im2Df_typeProxy, metadata !62}
!62 = metadata !{i32 5, i32 3, i32 1024, metadata !63}
!63 = metadata !{i32 4, i32* @im2Df_typeProxy, i32 1, i1 false, i1 false, i32 0}
!64 = metadata !{metadata !"im2Du", i32 12, i32* @im2Du_typeProxy, metadata !65}
!65 = metadata !{i32 5, i32 3, i32 1024, metadata !66}
!66 = metadata !{i32 34, i32* @im2Du_typeProxy, i32 1, i1 false, i1 false, i32 2}
!67 = metadata !{metadata !"im2Di", i32 12, i32* @im2Di_typeProxy, metadata !68}
!68 = metadata !{i32 5, i32 3, i32 1024, metadata !69}
!69 = metadata !{i32 25, i32* @im2Di_typeProxy, i32 1, i1 false, i1 false, i32 1}
!70 = metadata !{metadata !"P", i32 12, <2 x i32>* @P_typeProxy, metadata !5}
!71 = metadata !{metadata !"outInst", i32 16, %outName* @outInst_typeProxy, metadata !72, metadata !73}
!72 = metadata !{i32 0, i32 0, i32 1024, null, i32 0}
!73 = metadata !{metadata !"outName", metadata !74, metadata !"color", metadata !51}
!74 = metadata !{i32 0, i32 0, i32 1024, null}
!75 = metadata !{metadata !"inf", i32 1, <2 x float>* @inf_typeProxy, metadata !76}
!76 = metadata !{i32 0, i32 3, i32 1025, null, i32 0}
!77 = metadata !{metadata !"ing", i32 1, <2 x float>* @ing_typeProxy, metadata !78}
!78 = metadata !{i32 0, i32 3, i32 1026, null, i32 0}
!79 = metadata !{metadata !"inch", i32 1, <2 x float>* @inch_typeProxy, metadata !80}
!80 = metadata !{i32 0, i32 3, i32 1027, null, i32 0}
!81 = metadata !{metadata !"gl_VertexID", i32 2, i32* @gl_VertexID_typeProxy, metadata !82}
!82 = metadata !{i32 0, i32 3, i32 1028, null, i32 0, i32 7}
!83 = metadata !{metadata !"gl_InstanceID", i32 3, i32* @gl_InstanceID_typeProxy, metadata !84}
!84 = metadata !{i32 0, i32 3, i32 1029, null, i32 0, i32 8}
!85 = metadata !{i32 3}
#version 310 es
// LunarGOO output
#extension GL_ANDROID_extension_pack_es31a : enable
#extension GL_EXT_geometry_shader : enable
#extension GL_EXT_gpu_shader5 : enable
#extension GL_EXT_primitive_bounding_box : enable
#extension GL_EXT_shader_io_blocks : enable
#extension GL_EXT_tessellation_shader : enable
#extension GL_EXT_texture_buffer : enable
#extension GL_EXT_texture_cube_map_array : enable
#extension GL_KHR_blend_equation_advanced : enable
#extension GL_OES_sample_variables : enable
#extension GL_OES_shader_image_atomic : enable
#extension GL_OES_shader_multisample_interpolation : enable
#extension GL_OES_texture_storage_multisample_2d_array : enable
uniform lowp image2D iArray[5];
uniform highp int index;
uniform highp samplerBuffer bufSamp1;
uniform highp isamplerBuffer bufSamp2;
uniform highp usamplerBuffer bufSamp3;
uniform highp imageBuffer bufSamp4;
uniform highp iimageBuffer bufSamp5;
uniform highp uimageBuffer bufSamp6;
uniform highp samplerCubeArray CA4;
uniform highp samplerCubeArrayShadow CA5;
uniform highp isamplerCubeArray CA6;
uniform highp usamplerCubeArray CA7;
uniform highp sampler2DArray samp2DMSA;
uniform highp isampler2DArray samp2DMSAi;
uniform highp usampler2DArray samp2DMSAu;
uniform lowp sampler2D sArray[4];
uniform ubName {
	highp vec2 p;
} ubInst[4];
uniform highp imageCubeArray CA1;
uniform highp iimageCubeArray CA2;
uniform highp uimageCubeArray CA3;
uniform layout(r32f) highp image2D im2Df;
uniform layout(r32ui) highp uimage2D im2Du;
uniform layout(r32i) highp iimage2D im2Di;
uniform highp ivec2 P;
in highp vec2 inf;
in highp vec2 ing;
in highp vec2 inch;
out outName {
	highp vec4 color;
} outInst;
const vec4 C_vec4p0d0p = vec4(0.0);
const int C_1 = 1;
const float C_1d0 = 1.0;
const vec4 C_vec4p0d5p = vec4(0.5);
const float C_3d0 = 3.0;
const float C_0d24 = 0.24;
const float C_0d26 = 0.26;
const float C_0d27 = 0.27;
const vec3 C_vec3p0d1p = vec3(0.1);
const vec3 C_vec3p0d2p = vec3(0.2);
const int C_2 = 2;
const int C_0 = 0;
const float C_2d5 = 2.5;
const ivec3 C_ivec3p5p = ivec3(5);

void main()
{
	outInst.color = C_vec4p0d0p;
	highp int Lg_1 = textureSize(bufSamp1);
	highp float H_5v2vcj = float(Lg_1);
	vec4 H_la5q6l = vec4(H_5v2vcj);
	highp int Lg_2 = textureSize(bufSamp2);
	highp float H_ywqokl = float(Lg_2);
	vec4 H_29tz9q = vec4(H_ywqokl);
	highp vec4 H_3xahmr = H_29tz9q * H_la5q6l;
	highp int Lg_3 = textureSize(bufSamp3);
	highp float H_zfwzkb = float(Lg_3);
	vec4 H_jtcw6e = vec4(H_zfwzkb);
	highp vec4 H_luimj8 = H_3xahmr * H_jtcw6e;
	highp int Lg_4 = textureSize(bufSamp4);
	highp float H_0s46rh1 = float(Lg_4);
	vec4 H_jd3i9b1 = vec4(H_0s46rh1);
	highp vec4 H_wm18z6 = H_jd3i9b1 * H_luimj8;
	highp int Lg_5 = textureSize(bufSamp5);
	highp float H_lexa7c1 = float(Lg_5);
	vec4 H_k45lki1 = vec4(H_lexa7c1);
	highp vec4 H_98l7fq1 = H_k45lki1 * H_wm18z6;
	highp int Lg_6 = textureSize(bufSamp6);
	highp float H_yj8yui1 = float(Lg_6);
	vec4 H_g3hesn = vec4(H_yj8yui1);
	highp vec4 H_j6fx9c = H_98l7fq1 * H_g3hesn;
	highp vec4 H_bcrdx01 = texelFetch(bufSamp1, Lg_6);
	highp vec4 H_l9c0mm = H_bcrdx01 * H_j6fx9c;
	highp ivec4 H_gdejk5 = texelFetch(bufSamp2, Lg_6);
	highp vec4 H_j2ruuo1 = vec4(H_gdejk5);
	highp vec4 H_50ur791 = H_j2ruuo1 * H_l9c0mm;
	highp ivec4 H_pzovy8 = ivec4(texelFetch(bufSamp3, Lg_6));
	highp vec4 H_d3uyai = vec4(H_pzovy8);
	highp vec4 H_h5h6nl = H_50ur791 * H_d3uyai;
	outInst.color = H_h5h6nl;
	highp ivec3 iv = textureSize(CA4, C_1);
	highp ivec3 iv1 = textureSize(CA5, C_1);
	highp ivec3 iv2 = iv + iv1;
	highp ivec3 iv3 = textureSize(CA6, C_1);
	highp ivec3 iv4 = iv2 + iv3;
	highp ivec3 iv5 = textureSize(CA7, C_1);
	highp ivec3 iv6 = iv4 + iv5;
	highp vec3 H_g322641 = vec3(iv6);
	vec4 H_inqosb1 = vec4(H_g322641.x, H_g322641.y, H_g322641.z, C_1d0);
	highp vec4 H_4nebdn1 = texture(CA4, C_vec4p0d5p);
	highp vec4 H_m7j3jt1 = H_4nebdn1 * H_inqosb1;
	highp float H_2eorl7 = texture(CA5, C_vec4p0d5p, C_3d0);
	vec4 H_wtvc7b = vec4(H_2eorl7);
	highp vec4 H_u3k9lq1 = H_m7j3jt1 * H_wtvc7b;
	highp ivec4 H_ekbbp1 = texture(CA6, C_vec4p0d5p);
	highp vec4 H_ay1qwg = vec4(H_ekbbp1);
	highp vec4 H_hkviev = H_ay1qwg * H_u3k9lq1;
	highp ivec4 H_zszx85 = ivec4(texture(CA7, C_vec4p0d5p));
	highp vec4 H_lvv8bu1 = vec4(H_zszx85);
	highp vec4 H_6ois2w1 = H_hkviev * H_lvv8bu1;
	highp vec4 H_flh258 = textureLod(CA4, C_vec4p0d5p, C_0d24);
	highp vec4 H_fafvc6 = H_6ois2w1 * H_flh258;
	highp ivec4 H_fzum841 = textureLod(CA6, C_vec4p0d5p, C_0d26);
	highp vec4 H_swd5rv = vec4(H_fzum841);
	highp vec4 H_20qjt21 = H_fafvc6 * H_swd5rv;
	highp ivec4 H_pcayl01 = ivec4(textureLod(CA7, C_vec4p0d5p, C_0d27));
	highp vec4 H_t6ywbf = vec4(H_pcayl01);
	highp vec4 H_r3xff01 = H_20qjt21 * H_t6ywbf;
	highp vec4 H_lf9phc = textureGrad(CA4, C_vec4p0d5p, C_vec3p0d1p, C_vec3p0d2p);
	highp vec4 H_tjqvob = H_lf9phc * H_r3xff01;
	highp ivec4 H_vl4dwn = textureGrad(CA6, C_vec4p0d5p, C_vec3p0d1p, C_vec3p0d2p);
	highp vec4 H_eniryi1 = vec4(H_vl4dwn);
	highp vec4 H_06gfbk = H_eniryi1 * H_tjqvob;
	highp ivec4 H_0xnjfd = ivec4(textureGrad(CA7, C_vec4p0d5p, C_vec3p0d1p, C_vec3p0d2p));
	highp vec4 H_t6i666 = vec4(H_0xnjfd);
	highp vec4 H_m2q9z81 = H_06gfbk * H_t6i666;
	highp vec4 H_bd785s1 = textureGather(CA4, C_vec4p0d5p);
	highp vec4 H_n795jd1 = H_bd785s1 * H_m2q9z81;
	highp vec4 H_7lavnb = textureGather(CA4, C_vec4p0d5p, C_2);
	highp vec4 H_rbtcu1 = H_7lavnb * H_n795jd1;
	highp ivec4 H_9xh0a6 = textureGather(CA6, C_vec4p0d5p);
	highp vec4 H_l4nm1w1 = vec4(H_9xh0a6);
	highp vec4 H_0fnv111 = H_l4nm1w1 * H_rbtcu1;
	highp ivec4 H_ymfw2s = textureGather(CA6, C_vec4p0d5p, C_1);
	highp vec4 H_t56auu1 = vec4(H_ymfw2s);
	highp vec4 H_t1j88p = H_0fnv111 * H_t56auu1;
	highp ivec4 H_ydllmd = ivec4(textureGather(CA7, C_vec4p0d5p));
	highp vec4 H_3ipl0p = vec4(H_ydllmd);
	highp vec4 H_u1y7w2 = H_3ipl0p * H_t1j88p;
	highp ivec4 H_ooduar1 = ivec4(textureGather(CA7, C_vec4p0d5p, C_0));
	highp vec4 H_cf048n1 = vec4(H_ooduar1);
	highp vec4 H_i1hxmq = H_cf048n1 * H_u1y7w2;
	highp vec4 H_jf20ca1 = textureGather(CA5, C_vec4p0d5p, C_2d5);
	highp vec4 H_klp7s41 = H_i1hxmq * H_jf20ca1;
	highp vec4 H_dydlro = H_h5h6nl + H_klp7s41;
	outInst.color = H_dydlro;
	highp ivec3 iv7 = textureSize(samp2DMSA);
	highp ivec3 iv8 = textureSize(samp2DMSAi);
	highp ivec3 iv9 = iv7 + iv8;
	highp ivec3 iva = textureSize(samp2DMSAu);
	highp ivec3 ivb = iv9 + iva;
	highp vec3 H_8cg1gs1 = vec3(ivb);
	vec4 H_9up2xr1 = vec4(H_8cg1gs1.x, H_8cg1gs1.y, H_8cg1gs1.z, C_1d0);
	highp vec4 H_zrrw7f = texelFetch(samp2DMSA, C_ivec3p5p, C_2);
	highp vec4 H_y7x8q5 = H_9up2xr1 * H_zrrw7f;
	highp ivec4 H_ejdodg = texelFetch(samp2DMSAi, C_ivec3p5p, C_2);
	highp vec4 H_m4b7fm = vec4(H_ejdodg);
	highp vec4 H_wbrp9e = H_m4b7fm * H_y7x8q5;
	highp ivec4 H_y3ux271 = ivec4(texelFetch(samp2DMSAu, C_ivec3p5p, C_2));
	highp vec4 H_wecuat = vec4(H_y3ux271);
	highp vec4 H_1ahfgb1 = H_wbrp9e * H_wecuat;
	highp vec4 H_6h0vaz = H_1ahfgb1 + H_dydlro;
	outInst.color = H_6h0vaz;
	
}

tempglsl.vert
Warning, version 310 is not yet complete; most version-specific features are present, but some are missing.
WARNING: 0:3: '#extension' : extension is only partially supported: GL_ANDROID_extension_pack_es31a
WARNING: 0:3: '#extension' : extension is only partially supported: GL_KHR_blend_equation_advanced
WARNING: 0:3: '#extension' : extension is only partially supported: GL_OES_shader_multisample_interpolation
ERROR: 0:16: '' : image variables not declared 'writeonly' must have a format layout qualifier 
ERROR: 0:21: '' : image variables not declared 'writeonly' must have a format layout qualifier 
ERROR: 0:22: '' : image variables not declared 'writeonly' must have a format layout qualifier 
ERROR: 0:23: '' : image variables not declared 'writeonly' must have a format layout qualifier 
ERROR: 0:35: '' : image variables not declared 'writeonly' must have a format layout qualifier 
ERROR: 0:36: '' : image variables not declared 'writeonly' must have a format layout qualifier 
ERROR: 0:37: '' : image variables not declared 'writeonly' must have a format layout qualifier 
ERROR: 0:77: 'textureSize' : no matching overloaded function found 
ERROR: 0:77: '=' :  cannot convert from 'const float' to 'temp highp int'
ERROR: 0:81: 'textureSize' : no matching overloaded function found 
ERROR: 0:81: '=' :  cannot convert from 'const float' to 'temp highp int'
ERROR: 0:85: 'textureSize' : no matching overloaded function found 
ERROR: 0:85: '=' :  cannot convert from 'const float' to 'temp highp int'
ERROR: 0:154: 'textureSize' : no matching overloaded function found 
ERROR: 0:154: '=' :  cannot convert from 'const float' to 'temp highp 3-component vector of int'
ERROR: 0:155: 'textureSize' : no matching overloaded function found 
ERROR: 0:155: '=' :  cannot convert from 'const float' to 'temp highp 3-component vector of int'
ERROR: 0:157: 'textureSize' : no matching overloaded function found 
ERROR: 0:157: '=' :  cannot convert from 'const float' to 'temp highp 3-component vector of int'
ERROR: 19 compilation errors.  No code generated.


